SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE    1

************ OBJECT LISTING ************

FILE NAME: C:\Users\ludor\Documents\CASIO\fx-9860G SDK\Exodus\Exodus.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

        Exodus.c     1    /*****************************************************************/
        Exodus.c     2    /*                                                               */
        Exodus.c     3    /*   CASIO fx-9860G SDK Library                                  */
        Exodus.c     4    /*                                                               */
        Exodus.c     5    /*   File name : [ProjectName].c                                 */
        Exodus.c     6    /*                                                               */
        Exodus.c     7    /*   Copyright (c) 2006 CASIO COMPUTER CO., LTD.                 */
        Exodus.c     8    /*                                                               */
        Exodus.c     9    /*****************************************************************/
        Exodus.c    10    #include "fxlib.h"
        Exodus.c    11    #include "timer.h"
        Exodus.c    12    #include "dispbios.h"
        Exodus.c    13    
        Exodus.c    14    
        Exodus.c    15    
        Exodus.c    16    
        Exodus.c    17    
        Exodus.c    18    //****************************************************************************
        Exodus.c    19    //  AddIn_main (Sample program main function)
        Exodus.c    20    //
        Exodus.c    21    //  param   :   isAppli   : 1 = This application is launched by MAIN MENU.
        Exodus.c    22    //                        : 0 = This application is launched by a strip in eACT application.
        Exodus.c    23    //
        Exodus.c    24    //              OptionNum : Strip number (0~3)
        Exodus.c    25    //                         (This parameter is only used when isAppli parameter is 0.)
        Exodus.c    26    //
        Exodus.c    27    //  retval  :   1 = No error / 0 = Error
        Exodus.c    28    //
        Exodus.c    29    //****************************************************************************
        Exodus.c    30    typedef struct{
        Exodus.c    31      unsigned char * level;
        Exodus.c    32      unsigned char hasBackground;
        Exodus.c    33      unsigned char drawXOR;
        Exodus.c    34      unsigned char * background;
        Exodus.c    35      unsigned int start[2];// player start coordinates
        Exodus.c    36      unsigned char end[2];// player end point coordinates
        Exodus.c    37      unsigned int lengthOfLevel;
        Exodus.c    38    } LevelData;
        Exodus.c    39    
        Exodus.c    40    //background
        Exodus.c    41    const unsigned char TITLE[] = { 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfb, 0xba, 0xaa, 0xaa, 0xaa, 0x
                         +aa, 0xbb, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 0xff, 0xff, 0xff, 
                         +0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xea, 0xea, 0xaa, 0xaa, 0xaa, 0xee, 0xff, 0xff
                         +, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x
                         +ff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbb, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xab, 0xbf, 0xff, 0xff, 0xff, 0xff, 
                         +0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xdd, 0xdd, 0xdd, 0xdf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
                         +, 0xdf, 0xff, 0xee, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xae, 0xef, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x
                         +ff, 0xff, 0xff, 0xf7, 0x77, 0x77, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfb, 0xaa, 
                         +0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xbb, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 0xdd
                         +, 0x55, 0x55, 0x5d, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfb, 0xff, 0xfe, 0xea, 0xaa, 0xaa, 0xaa, 0x
                         +aa, 0xaa, 0xaa, 0xee, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x77, 0x75, 0x55, 0x77, 
                         +0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbb, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xab
                         +, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbf, 0xff, 0xff, 0xdd, 0xd5, 0x55, 0x55, 0x55, 0xdf, 0xff, 0xff, 0x
                         +ff, 0xff, 0xff, 0xff, 0xff, 0xbf, 0xee, 0xaa, 0xaa, 0xaa, 0xa2, 0xaa, 0xaa, 0xaa, 0xae, 0xff, 0xff, 0xff, 




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

                         +0xff, 0xff, 0xff, 0xbf, 0xff, 0xff, 0xf7, 0x55, 0x55, 0x55, 0x57, 0x77, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
                         +, 0xff, 0xff, 0xba, 0xaa, 0xaa, 0xa8, 0x00, 0x08, 0x8a, 0xaa, 0xaa, 0xbb, 0xff, 0xff, 0xff, 0xff, 0xff, 0x
                         +ff, 0xff, 0xfd, 0xd5, 0x55, 0x55, 0x55, 0x55, 0x5d, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x3f, 0xee, 
                         +0xaa, 0xaa, 0xa2, 0x00, 0x00, 0x2a, 0xaa, 0xaa, 0xef, 0xff, 0xff, 0xff, 0xff, 0xef, 0xff, 0xff, 0xff, 0x75
                         +, 0x55, 0x55, 0x55, 0x55, 0x77, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xaa, 0xaa, 0xaa, 0x80, 0x
                         +00, 0x00, 0x08, 0xaa, 0xab, 0xba, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xdd, 0xd5, 0x55, 0x11, 0x11, 
                         +0x55, 0x55, 0xdf, 0xfd, 0xff, 0xff, 0xff, 0xff, 0x79, 0xff, 0xee, 0xaa, 0xaa, 0x20, 0x00, 0x00, 0x02, 0xaa
                         +, 0xae, 0xed, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x75, 0x55, 0x44, 0x43, 0x95, 0x57, 0x7f, 0x
                         +fb, 0xff, 0xff, 0xff, 0xf9, 0xff, 0x7b, 0xaa, 0xaa, 0xa8, 0x00, 0x00, 0x07, 0x80, 0xaa, 0xaa, 0xbb, 0xff, 
                         +0xff, 0xff, 0xf8, 0xff, 0x7f, 0xff, 0xdd, 0x55, 0x50, 0x00, 0x0f, 0x95, 0x15, 0xdf, 0xf7, 0xff, 0xff, 0xff
                         +, 0xfa, 0x7f, 0xfe, 0xea, 0xaa, 0xaa, 0x00, 0x38, 0x0f, 0xc2, 0x4a, 0xaa, 0xef, 0xff, 0xff, 0xff, 0xfb, 0x
                         +7b, 0xff, 0xff, 0xff, 0x55, 0x54, 0x10, 0x0f, 0xd4, 0xd5, 0x7f, 0xef, 0xff, 0xff, 0xff, 0xfb, 0xbb, 0xff, 
                         +0xaa, 0xaa, 0xa8, 0x00, 0x7c, 0x1f, 0xe1, 0xea, 0xaa, 0x9f, 0xff, 0xff, 0xff, 0xfb, 0xd1, 0xff, 0xff, 0xdd
                         +, 0x55, 0x10, 0x92, 0x1f, 0xf3, 0xf5, 0xdf, 0xbf, 0xff, 0xff, 0xff, 0xfb, 0xc5, 0xbf, 0xee, 0xaa, 0xaa, 0x
                         +00, 0xd6, 0x3f, 0xfd, 0xfa, 0xa8, 0x7f, 0xff, 0xff, 0xff, 0xfb, 0xe5, 0x3f, 0xff, 0xf7, 0x55, 0x41, 0x7d, 
                         +0x7f, 0xfe, 0xfd, 0x43, 0xff, 0xff, 0xfc, 0x03, 0xfb, 0xfc, 0xbb, 0xaa, 0xaa, 0xa8, 0x02, 0x38, 0xff, 0xff
                         +, 0x7e, 0x3f, 0xff, 0xfc, 0x03, 0xfc, 0x03, 0xff, 0x3f, 0xff, 0xdd, 0x54, 0x12, 0xfe, 0xff, 0xff, 0xbf, 0x
                         +ff, 0xff, 0x03, 0xff, 0xff, 0xfb, 0xbf, 0x4e, 0xea, 0xaa, 0x03, 0xc1, 0xcf, 0x7f, 0xff, 0xdf, 0xff, 0xff, 
                         +0xff, 0xff, 0xff, 0xfd, 0x9f, 0xb0, 0x0f, 0x80, 0xff, 0xfd, 0x6d, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
                         +, 0xff, 0xfd, 0x9f, 0xdf, 0xf0, 0x7f, 0xff, 0xfe, 0x7c, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x
                         +f1, 0xfb, 0xbf, 0xff, 0xff, 0xff, 0xfd, 0x39, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf3, 0x7f, 0xfe, 0xfe, 
                         +0xf9, 0xff, 0xff, 0xff, 0xff, 0xbb, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xdf, 0xdf, 0xff
                         +, 0xff, 0xff, 0xff, 0x7d, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff, 0xdd, 0xff, 0xff, 0xef, 0xff, 0x
                         +ff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc3, 0xff, 0x7f, 0xff, 0xe7, 0xff, 0xff, 0xf0, 0x7e, 0x7f, 0xff, 
                         +0xbb, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x81, 0xf7, 0xff, 0xd7, 0xff
                         +, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x7f, 0x55, 0xff, 0xff, 0x
                         +ff, 0xff, 0xfd, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x81, 0xff, 0xff, 0xfe, 0x38, 0xff, 0xff, 0xff, 0xff, 
                         +0xe3, 0x80, 0x00, 0x7f, 0xf9, 0xf7, 0xfc, 0x3d, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x1f, 0xbf
                         +, 0xff, 0x7f, 0xfe, 0x0f, 0xfd, 0xe5, 0xff, 0xff, 0xfc, 0x1c, 0x3f, 0x3f, 0xff, 0xe3, 0xff, 0xa0, 0x01, 0x
                         +7f, 0xff, 0xff, 0xfd, 0x05, 0xff, 0xff, 0xff, 0x00, 0xff, 0xc0, 0x00, 0x1f, 0xff, 0xb0, 0xf1, 0x7f, 0xff, 
                         +0xff, 0xfd, 0xc5, 0xff, 0xff, 0xff, 0xc0, 0x7f, 0xff, 0xff, 0xff, 0xff, 0x98, 0xf9, 0x00, 0x00, 0x00, 0x01
                         +, 0xc4, 0x00, 0x00, 0x00, 0x80, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xc8, 0xfd, 0xff, 0xff, 0xff, 0xff, 0xc7, 0x
                         +ff, 0xff, 0xfe, 0x80, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xe8, 0xf7, 0x81, 0x8f, 0x83, 0xf8, 0x07, 0xcf, 0x1f, 
                         +0x02, 0xc0, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xe8, 0xe7, 0xe3, 0x9e, 0x38, 0xf1, 0xc6, 0x0c, 0x1c, 0x72, 0xf8
                         +, 0x3f, 0xff, 0xbf, 0xff, 0xff, 0xe8, 0x07, 0xe1, 0xbc, 0x38, 0xe1, 0xc7, 0x0e, 0x1c, 0x7a, 0xfe, 0x3f, 0x
                         +ff, 0x3f, 0xff, 0xff, 0xe8, 0xe7, 0xf0, 0x7c, 0x78, 0x63, 0xc7, 0x8e, 0x1c, 0x1e, 0xff, 0x9f, 0x80, 0x7f, 
                         +0xff, 0xff, 0xe8, 0xf7, 0xf8, 0x7c, 0x78, 0x63, 0xc7, 0x8e, 0x1c, 0x06, 0x7f, 0x9f, 0xff, 0xff, 0xff, 0xff
                         +, 0xe8, 0xff, 0xf8, 0x7c, 0x78, 0x63, 0xc7, 0x8e, 0x1e, 0x03, 0x7f, 0xff, 0xff, 0xff, 0xfb, 0xff, 0xc8, 0x
                         +fe, 0xf0, 0x3c, 0x78, 0x63, 0xc7, 0x8e, 0x1d, 0xc1, 0x7f, 0xff, 0xff, 0xff, 0xf8, 0xff, 0x98, 0xfc, 0xe6, 
                         +0x1c, 0x38, 0xe1, 0xc3, 0x8e, 0x1d, 0xf1, 0x7f, 0xff, 0xff, 0xff, 0xfe, 0x00, 0xb0, 0x78, 0xcf, 0x1e, 0x38
                         +, 0xf0, 0x01, 0x80, 0x0c, 0xe3, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xa0, 0x00, 0x86, 0x07, 0x83, 0xf8, 0x
                         +47, 0xc3, 0x3c, 0x06, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
                         +0xff, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01
                         +, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x
                         +ff, 0xff, 0xff, 0xff, 0xff };
        Exodus.c    42    
        Exodus.c    43    
        Exodus.c    44    const unsigned char BACKGROUND[] =  { 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfb, 0xbb, 0xbb, 0x
                         +ff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf7, 0x77, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x57, 
                         +0x57, 0x77, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xee, 0xea, 0xaa, 0xaa, 0xee, 0xef, 0xff, 0xff
                         +, 0xff, 0xff, 0xff, 0xff, 0xff, 0xdd, 0xd5, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0xdd, 0xdf, 0x
                         +ff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfb, 0xbb, 0xba, 0xaa, 0xbb, 0xbb, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 
                         +0xff, 0xff, 0x77, 0x75, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x77, 0x7f, 0xff, 0xff, 0xff, 0xff
                         +, 0xf7, 0xff, 0xfe, 0xea, 0xaa, 0xaa, 0xaa, 0xae, 0xee, 0xff, 0xff, 0xff, 0xf7, 0xff, 0xff, 0xdd, 0xdd, 0x
                         +55, 0x55, 0x55, 0x54, 0x44, 0x55, 0x55, 0x55, 0x55, 0x5d, 0xdd, 0xf7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
                         +0xbb, 0xaa, 0xaa, 0xaa, 0xab, 0xbf, 0xff, 0xff, 0xff, 0xe3, 0xff, 0xff, 0xff, 0xf7, 0x75, 0x55, 0x55, 0x55
                         +, 0x11, 0x51, 0x55, 0x55, 0x57, 0x77, 0x77, 0xf7, 0xff, 0xff, 0xff, 0xbf, 0xff, 0xee, 0xaa, 0xaa, 0x80, 0x




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

                         +a0, 0xaa, 0xee, 0xff, 0xff, 0xff, 0xf7, 0xff, 0xfe, 0xdd, 0x9d, 0x55, 0x55, 0x55, 0x40, 0x00, 0x00, 0x55, 
                         +0x55, 0x55, 0x55, 0x9d, 0xff, 0xfb, 0xff, 0xff, 0x1f, 0xff, 0xfb, 0xaa, 0xa0, 0x00, 0x0a, 0xaa, 0xbb, 0xff
                         +, 0xff, 0xbf, 0xff, 0xff, 0xff, 0xff, 0x37, 0x55, 0x45, 0x55, 0x00, 0x00, 0x01, 0x15, 0x55, 0x55, 0x77, 0x
                         +17, 0xff, 0xff, 0xff, 0xff, 0xbf, 0xfc, 0x0e, 0xaa, 0x00, 0x00, 0x00, 0xaa, 0xae, 0xef, 0xff, 0xbf, 0xff, 
                         +0xff, 0xff, 0xdd, 0xdd, 0x53, 0xe5, 0x44, 0x00, 0x00, 0x00, 0x45, 0x55, 0x55, 0x55, 0x1d, 0xff, 0xff, 0xff
                         +, 0xff, 0xff, 0xef, 0xf8, 0xa8, 0x00, 0x00, 0x00, 0x2a, 0xbb, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x
                         +77, 0x5f, 0xff, 0x50, 0x00, 0x00, 0x00, 0x15, 0x55, 0x55, 0x57, 0x77, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbf, 
                         +0xff, 0x28, 0x00, 0x00, 0x00, 0x0a, 0xaa, 0xef, 0xff, 0xff, 0xff, 0xff, 0xff, 0xdd, 0xd5, 0x3f, 0xff, 0x80
                         +, 0x00, 0x00, 0x00, 0x05, 0x55, 0x55, 0x55, 0xdd, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0xff, 0xa0, 0x00, 0x
                         +00, 0x00, 0x0a, 0xbb, 0xbf, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 0x75, 0x7f, 0xff, 0xc0, 0x00, 0x00, 0x00, 
                         +0x05, 0x55, 0x55, 0x77, 0x7f, 0xff, 0xfd, 0x7f, 0xff, 0xfe, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x0a, 0xaa
                         +, 0xee, 0xff, 0xff, 0xff, 0xfd, 0xbf, 0xdd, 0xd5, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x04, 0x55, 0x55, 0x
                         +55, 0x5d, 0xff, 0xf3, 0xbf, 0xff, 0xfb, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x02, 0xab, 0xbf, 0xff, 0xff, 
                         +0xff, 0xef, 0xdf, 0xf7, 0x73, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x01, 0x55, 0x55, 0x57, 0x77, 0xff, 0x9f
                         +, 0xef, 0xff, 0xf7, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x02, 0xaa, 0xef, 0xff, 0xff, 0xff, 0x7f, 0xf7, 0x
                         +dd, 0xcf, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x55, 0xdd, 0xfc, 0xff, 0xf9, 0xff, 0xdf, 
                         +0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x02, 0xab, 0xbf, 0xff, 0xff, 0xf3, 0xff, 0xfe, 0xf7, 0x5f, 0xff, 0xff
                         +, 0xff, 0x00, 0x00, 0x00, 0x01, 0x54, 0x55, 0x57, 0x77, 0xcf, 0xff, 0xfe, 0x7f, 0xbf, 0xff, 0xff, 0xff, 0x
                         +c0, 0x00, 0x00, 0x02, 0xaa, 0xee, 0xe3, 0xff, 0xbf, 0xff, 0xff, 0x9d, 0x7f, 0xff, 0xff, 0xff, 0xf0, 0x00, 
                         +0x00, 0x04, 0x55, 0x55, 0x1c, 0x5d, 0x7f, 0xff, 0xff, 0xce, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x0a
                         +, 0xab, 0xff, 0x7f, 0x7f, 0xff, 0xff, 0xff, 0xf5, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x01, 0x55, 0x
                         +54, 0xff, 0x97, 0xff, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x0a, 0xaa, 0xeb, 0xff, 
                         +0xef, 0xff, 0xff, 0xff, 0xfd, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x05, 0x55, 0x57, 0xff, 0xf5, 0xff
                         +, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x2a, 0xbb, 0x8f, 0xff, 0xf9, 0xff, 0xff, 0x
                         +ff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x15, 0x55, 0x3f, 0xff, 0xfe, 0x3f, 0xff, 0xff, 0xff, 
                         +0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x2a, 0xae, 0x7f, 0xff, 0xff, 0xdf, 0xff, 0xff, 0xff, 0xe7, 0xff
                         +, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x45, 0x41, 0xff, 0xff, 0xff, 0xef, 0xff, 0xff, 0xff, 0xf9, 0xff, 0xff, 0x
                         +ff, 0xff, 0xff, 0xf8, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xf1, 0xff, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0x07, 0xff, 
                         +0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 0xff, 0xff, 0xff, 0xff, 0x8f, 0xfc, 0x71, 0xff, 0xff, 0xff
                         +, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xf0, 0xf1, 0xfc, 0x7f, 0xff, 0xff, 0xff, 0x
                         +ff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x07, 0xff, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 
                         +0xff, 0xff, 0x00, 0x00, 0x0f, 0xff, 0x00, 0x00, 0x7f, 0xff, 0xf8, 0x00, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00
                         +, 0xff, 0xff, 0xc3, 0xfc, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0x
                         +ff, 0xf8, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
                         +0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
                         +, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x
                         +ff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
                         +0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
                         +, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x
                         +ff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
                         +0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
                         +, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x
                         +ff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
                         +0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
                         +, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x
                         +ff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
                         +0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
                         +, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x
                         +ff, 0xff, 0xff, 0xff, 0xff, 0xff };
        Exodus.c    45    
        Exodus.c    46    const unsigned char BACK_TUT_1[] = { 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf
                         +f, 0xff, 0xff, 0xff, 0xff, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0
                         +x81, 0x81, 0x81, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5,
                         + 0xa5, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x8
                         +1, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0xa5, 0xa5, 0
                         +xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0x81, 0x81, 0x81, 0x81,
                         + 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xf




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

                         +e, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xff, 0x00, 0x00, 0x00, 0x81, 0x03, 0x80, 0
                         +x00, 0x00, 0x02, 0x80, 0x81, 0x00, 0x00, 0x00, 0xff, 0x81, 0x00, 0x00, 0x00, 0x91, 0x07, 0x00, 0x00, 0x00,
                         + 0x00, 0xc0, 0x81, 0x00, 0x00, 0x00, 0x81, 0xa5, 0x00, 0x00, 0x00, 0x81, 0x08, 0x00, 0x00, 0x00, 0x00, 0x6
                         +0, 0x89, 0x00, 0x00, 0x00, 0xa5, 0x81, 0x07, 0xe1, 0x80, 0x81, 0x18, 0x00, 0x00, 0x00, 0x00, 0x40, 0x81, 0
                         +x07, 0xe7, 0x80, 0x81, 0x81, 0x07, 0xe1, 0x80, 0x81, 0x08, 0x00, 0x00, 0x00, 0x00, 0x30, 0x81, 0x07, 0xe7,
                         + 0x80, 0x81, 0xa5, 0x06, 0x07, 0x80, 0x81, 0x40, 0x00, 0x80, 0x00, 0x00, 0x14, 0x81, 0x06, 0x00, 0x60, 0xa
                         +5, 0x81, 0x06, 0x07, 0x80, 0x81, 0xe0, 0x00, 0xc0, 0x02, 0x80, 0x0c, 0x81, 0x06, 0x00, 0x60, 0x81, 0xfe, 0
                         +x07, 0x81, 0x80, 0x81, 0xc0, 0x01, 0xc0, 0x07, 0xc0, 0x05, 0x81, 0x07, 0x81, 0x80, 0xfe, 0xff, 0x07, 0x81,
                         + 0x80, 0x81, 0x80, 0x07, 0xff, 0xff, 0xe0, 0x01, 0xc1, 0x07, 0x81, 0x80, 0xff, 0x81, 0x06, 0x01, 0x80, 0xc
                         +1, 0x00, 0x38, 0x00, 0x00, 0x1c, 0x01, 0x85, 0x06, 0x06, 0x00, 0x81, 0xa5, 0x06, 0x01, 0x80, 0x81, 0x00, 0
                         +xc6, 0xad, 0xff, 0xe3, 0x80, 0x81, 0x06, 0x06, 0x00, 0xa5, 0x81, 0x06, 0x07, 0xe0, 0x81, 0x00, 0xbf, 0x5f,
                         + 0xff, 0xfd, 0x00, 0x81, 0x06, 0x07, 0xe0, 0x81, 0x81, 0x06, 0x07, 0xe0, 0x81, 0x03, 0xaa, 0xab, 0x7f, 0xf
                         +d, 0x00, 0x81, 0x06, 0x07, 0xe0, 0x81, 0xa5, 0x00, 0x00, 0x00, 0x81, 0x06, 0xbd, 0x17, 0xff, 0xfd, 0x00, 0
                         +x81, 0x00, 0x00, 0x00, 0xa5, 0x81, 0x00, 0x00, 0x00, 0x89, 0x01, 0xda, 0x0b, 0xff, 0x0a, 0x00, 0x83, 0x00,
                         + 0x00, 0x00, 0x81, 0xfe, 0x18, 0x00, 0x08, 0x81, 0x00, 0x4d, 0x16, 0xfc, 0x4a, 0x00, 0x81, 0x0c, 0x00, 0x0
                         +0, 0xfe, 0xff, 0x20, 0x04, 0x1c, 0x81, 0x00, 0x5a, 0xab, 0xf8, 0x1a, 0x00, 0x81, 0x04, 0x00, 0x00, 0xff, 0
                         +x81, 0x13, 0x11, 0x88, 0x81, 0x00, 0x2f, 0x5f, 0xf1, 0x14, 0x00, 0x81, 0x05, 0x4a, 0x60, 0x81, 0xa5, 0x0a,
                         + 0xa5, 0x48, 0x81, 0x00, 0x2a, 0xab, 0x76, 0x34, 0x00, 0x81, 0x05, 0x55, 0x50, 0xa5, 0x81, 0x33, 0x25, 0x4
                         +8, 0x85, 0x00, 0x17, 0x7f, 0xe0, 0x6e, 0x00, 0x81, 0x08, 0x91, 0x60, 0x81, 0x81, 0x02, 0x00, 0x00, 0x81, 0
                         +x00, 0x0b, 0xdf, 0xe9, 0xde, 0x00, 0x81, 0x00, 0x00, 0x40, 0x81, 0xa5, 0x02, 0x00, 0x00, 0x81, 0x00, 0x04,
                         + 0xfb, 0xef, 0x26, 0x00, 0xa1, 0x00, 0x00, 0x00, 0xa5, 0x81, 0x00, 0x00, 0x00, 0x81, 0x00, 0x0b, 0x1f, 0xf
                         +8, 0xc0, 0x00, 0x81, 0x00, 0x00, 0x00, 0x81, 0xfe, 0xea, 0xfc, 0x03, 0x81, 0x00, 0x00, 0xe0, 0x07, 0x00, 0
                         +x00, 0x81, 0xfc, 0x14, 0xfb, 0xfe, 0xff, 0xf3, 0xc2, 0x01, 0x81, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x81,
                         + 0x6e, 0x06, 0x0c, 0xff, 0x81, 0x00, 0x00, 0x00, 0x81, 0x00, 0x81, 0x81, 0x81, 0x81, 0x00, 0x81, 0x00, 0x0
                         +0, 0x00, 0x81, 0xa5, 0x00, 0x00, 0x00, 0x81, 0x00, 0xa5, 0xa5, 0xa5, 0xa5, 0x00, 0x81, 0x00, 0x00, 0x00, 0
                         +xa5, 0x81, 0x00, 0x00, 0x00, 0xc1, 0x00, 0x81, 0x81, 0x81, 0x81, 0x00, 0x81, 0x00, 0x00, 0x00, 0x81, 0x81,
                         + 0x00, 0x00, 0x00, 0x81, 0x00, 0x81, 0x81, 0x81, 0x81, 0x00, 0xa1, 0x00, 0x00, 0x00, 0x81, 0xa5, 0x00, 0x0
                         +0, 0x00, 0x85, 0x00, 0xa5, 0xa5, 0xa5, 0xa5, 0x00, 0x81, 0x00, 0x00, 0x00, 0xa5, 0x81, 0x00, 0x00, 0x00, 0
                         +x81, 0x00, 0x81, 0x81, 0x81, 0x81, 0x00, 0x85, 0x00, 0x00, 0x00, 0x81, 0xfe, 0x00, 0x00, 0x00, 0x81, 0x00,
                         + 0xfe, 0xfe, 0xfe, 0xfe, 0x00, 0x81, 0x00, 0x00, 0x00, 0xfe, 0xff, 0x00, 0x00, 0x00, 0xff, 0x00, 0x07, 0xc
                         +3, 0x80, 0xf0, 0x00, 0xff, 0x00, 0x00, 0x00, 0xff, 0x81, 0x00, 0x00, 0x00, 0x81, 0x00, 0x07, 0x03, 0x00, 0
                         +x20, 0x00, 0x81, 0x00, 0x00, 0x00, 0x81, 0xa5, 0x00, 0x00, 0x00, 0xa5, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00,
                         + 0xa5, 0x00, 0x00, 0x00, 0xa5, 0x81, 0x00, 0x00, 0x00, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x81, 0x0
                         +0, 0x00, 0x00, 0x81, 0x81, 0x00, 0x00, 0x00, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x81, 0x00, 0x00, 0
                         +x00, 0x81, 0xa5, 0x00, 0x00, 0x00, 0xa5, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xa5, 0x00, 0x00, 0x00, 0xa5,
                         + 0x81, 0x00, 0x00, 0x00, 0x81, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x81, 0x00, 0x00, 0x00, 0x81, 0xfe, 0x0
                         +0, 0x00, 0x00, 0xfe, 0x00, 0x00, 0x04, 0xa0, 0x00, 0x00, 0xfe, 0x00, 0x00, 0x00, 0xfe, 0xff, 0x3c, 0x00, 0
                         +xff, 0xff, 0x00, 0x00, 0x48, 0x90, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x81, 0x66, 0x00, 0x81, 0x81,
                         + 0x00, 0x01, 0xe8, 0x9c, 0x00, 0x00, 0x81, 0x81, 0x00, 0x00, 0x00, 0xa5, 0xd3, 0x00, 0xa5, 0xa5, 0x00, 0x0
                         +1, 0x29, 0x18, 0x00, 0x00, 0xa5, 0xa5, 0x00, 0x00, 0x00, 0x81, 0xcb, 0x00, 0x81, 0x81, 0x00, 0x01, 0xa9, 0
                         +x10, 0x00, 0x00, 0x81, 0x81, 0x00, 0x00, 0x00, 0x81, 0xc3, 0x00, 0x81, 0x81, 0x00, 0x01, 0x69, 0x10, 0x00,
                         + 0x00, 0x81, 0x81, 0x00, 0x00, 0x00, 0xa5, 0xdb, 0x00, 0xa5, 0xa5, 0xc0, 0x00, 0xc8, 0x90, 0x00, 0x01, 0xa
                         +5, 0xa5, 0x00, 0x00, 0x00, 0x81, 0xff, 0x00, 0x81, 0x81, 0xa0, 0x00, 0x98, 0x90, 0x00, 0x06, 0x81, 0x81, 0
                         +x00, 0x00, 0x00, 0xfe, 0xe7, 0x00, 0xfe, 0xfe, 0xf0, 0x00, 0x38, 0x98, 0x00, 0x0d, 0xfe, 0xfe, 0x00, 0x00,
                         + 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x8
                         +1, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0xa5, 0xa5, 0
                         +xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0x81, 0x81, 0x81, 0x81,
                         + 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x8
                         +1, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0
                         +xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81,
                         + 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xf
                         +e, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe };
        Exodus.c    47    
        Exodus.c    48    const unsigned char BACK_TUT_2[] = { 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf
                         +f, 0xff, 0xff, 0xff, 0xff, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0
                         +x81, 0x81, 0x81, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5,
                         + 0xa5, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x8




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

                         +1, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0xa5, 0xa5, 0
                         +xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0x81, 0x81, 0x81, 0x81,
                         + 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xf
                         +e, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xff, 0x44, 0x08, 0x81, 0x85, 0x03, 0x80, 0
                         +x02, 0x00, 0x42, 0x80, 0x85, 0x81, 0x10, 0x00, 0xff, 0x81, 0x01, 0x04, 0x82, 0xb1, 0x4f, 0x20, 0x08, 0x00,
                         + 0x01, 0xc0, 0x81, 0x39, 0x08, 0x01, 0x81, 0xa5, 0x00, 0x88, 0x00, 0x83, 0x0d, 0x00, 0x00, 0x00, 0x88, 0x7
                         +0, 0x89, 0x40, 0x00, 0x02, 0xa5, 0x81, 0x47, 0xe1, 0x8a, 0xa1, 0x18, 0x10, 0x80, 0x00, 0x04, 0x40, 0xc1, 0
                         +x17, 0xe7, 0x81, 0x81, 0x81, 0x07, 0xe1, 0x80, 0x81, 0x48, 0x00, 0x00, 0x00, 0x80, 0x32, 0x81, 0x07, 0xe7,
                         + 0x80, 0x81, 0xa5, 0x06, 0x07, 0x81, 0x81, 0xd0, 0x40, 0x80, 0x00, 0x00, 0x14, 0x81, 0x06, 0x00, 0x65, 0xa
                         +5, 0x81, 0x06, 0x07, 0x80, 0x81, 0xe0, 0x02, 0xc0, 0x03, 0x80, 0x0c, 0xe1, 0x16, 0x20, 0x60, 0x81, 0xfe, 0
                         +x17, 0x89, 0x86, 0x87, 0xc0, 0x01, 0xc0, 0x07, 0xc2, 0x07, 0x95, 0x07, 0x91, 0x82, 0xfe, 0xff, 0x07, 0x81,
                         + 0x90, 0x91, 0x84, 0x27, 0xff, 0xff, 0xe0, 0x05, 0xc9, 0x17, 0x81, 0x84, 0xff, 0x81, 0x16, 0x11, 0x90, 0xc
                         +d, 0x90, 0x38, 0x00, 0x00, 0x1c, 0x03, 0x87, 0x06, 0x06, 0x00, 0x81, 0xa5, 0x16, 0x81, 0x86, 0x89, 0x00, 0
                         +xc6, 0xad, 0xff, 0xe3, 0x82, 0x91, 0x26, 0x06, 0x00, 0xa5, 0x81, 0x06, 0x07, 0xe0, 0x81, 0x00, 0xbf, 0x5f,
                         + 0xff, 0xfd, 0x11, 0x89, 0x16, 0x07, 0xe8, 0x81, 0x81, 0x36, 0x97, 0xe0, 0x91, 0x13, 0xaa, 0xab, 0x7f, 0xf
                         +d, 0x00, 0xa1, 0x06, 0x27, 0xe0, 0x81, 0xa5, 0x20, 0x80, 0x20, 0x81, 0x06, 0xbd, 0x17, 0xff, 0xfd, 0x00, 0
                         +xa1, 0x40, 0x40, 0x00, 0xa5, 0x81, 0x00, 0x08, 0x10, 0x81, 0x01, 0xda, 0x0b, 0xff, 0x0a, 0x94, 0x83, 0xc0,
                         + 0x00, 0x10, 0x81, 0xfe, 0x18, 0x00, 0x08, 0x81, 0x00, 0x4d, 0x16, 0xfc, 0x4a, 0x01, 0x81, 0x4c, 0x00, 0x0
                         +4, 0xfe, 0xff, 0x20, 0x04, 0x1c, 0x81, 0x00, 0x5a, 0xab, 0xf8, 0x1a, 0x00, 0x81, 0x04, 0x00, 0x00, 0xff, 0
                         +x81, 0x13, 0x11, 0x88, 0x81, 0x00, 0x2f, 0x5f, 0xf1, 0x16, 0x00, 0xe1, 0x45, 0x4a, 0x60, 0x81, 0xa5, 0x0a,
                         + 0xa5, 0x48, 0x81, 0x00, 0x2a, 0xab, 0x76, 0x34, 0x00, 0x99, 0x05, 0x55, 0x50, 0xa5, 0x81, 0x33, 0x25, 0x4
                         +8, 0x81, 0x00, 0x57, 0x7f, 0xe0, 0x6e, 0x00, 0x91, 0x08, 0x91, 0x60, 0x81, 0x81, 0x82, 0x00, 0x00, 0x81, 0
                         +x00, 0x8b, 0xdf, 0xe9, 0xde, 0x01, 0xa1, 0x00, 0x00, 0x40, 0x81, 0xa5, 0x2a, 0xe0, 0x00, 0x81, 0x00, 0x84,
                         + 0xfb, 0xef, 0x26, 0x00, 0xa5, 0x20, 0x00, 0x41, 0xa5, 0x81, 0x40, 0xa0, 0x2c, 0x81, 0x00, 0x0b, 0x1f, 0xf
                         +8, 0xc0, 0x00, 0x89, 0x00, 0x04, 0x04, 0x81, 0xfe, 0xee, 0xfc, 0x00, 0x81, 0x00, 0x00, 0xe0, 0x07, 0x00, 0
                         +x08, 0x87, 0xfc, 0x1e, 0x3b, 0xfe, 0xff, 0xf3, 0xdb, 0x10, 0xff, 0x00, 0x00, 0x1f, 0xf8, 0x10, 0xff, 0xff,
                         + 0x6c, 0x06, 0x4c, 0xff, 0x81, 0x60, 0x58, 0x94, 0x81, 0x08, 0x00, 0x04, 0x00, 0x20, 0x81, 0x81, 0x00, 0x4
                         +0, 0x00, 0x81, 0xa5, 0x02, 0x42, 0x90, 0xa5, 0x40, 0x00, 0x10, 0x01, 0x00, 0xa5, 0xa5, 0x00, 0x04, 0x00, 0
                         +xa5, 0x81, 0x32, 0x00, 0x00, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x81, 0x81, 0x40, 0x00, 0x00, 0x81, 0x81,
                         + 0x08, 0x46, 0x00, 0x81, 0x10, 0x00, 0x00, 0x00, 0x00, 0x81, 0x81, 0x80, 0x00, 0x02, 0x81, 0xa5, 0x08, 0x4
                         +8, 0x00, 0xa5, 0x00, 0x00, 0x02, 0x00, 0x00, 0xa5, 0xa5, 0x20, 0x00, 0x80, 0xa5, 0x81, 0x00, 0x00, 0x00, 0
                         +x81, 0x20, 0x00, 0x00, 0xc0, 0x00, 0x81, 0x81, 0x00, 0x00, 0x00, 0x81, 0xfe, 0x00, 0x00, 0x00, 0xfe, 0x00,
                         + 0x00, 0x00, 0x01, 0x00, 0xfe, 0xfe, 0x00, 0x00, 0x00, 0xfe, 0xff, 0xc0, 0x20, 0x00, 0xff, 0x00, 0x00, 0x0
                         +0, 0x40, 0x00, 0x1b, 0xff, 0x10, 0x00, 0x00, 0xff, 0x81, 0x00, 0x00, 0x00, 0x81, 0x80, 0x20, 0x00, 0x00, 0
                         +x00, 0x0d, 0x81, 0x20, 0x00, 0x00, 0x81, 0xa5, 0x80, 0x00, 0x00, 0xa5, 0x20, 0x00, 0x00, 0x00, 0x00, 0x46,
                         + 0xa5, 0x00, 0x00, 0x00, 0xa5, 0x81, 0x00, 0x00, 0x01, 0x81, 0x40, 0x00, 0x00, 0x00, 0x00, 0x03, 0x81, 0x0
                         +0, 0x00, 0x01, 0x81, 0x81, 0x80, 0x00, 0x40, 0x81, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x81, 0x00, 0x00, 0
                         +x00, 0x81, 0xa5, 0x00, 0x00, 0x00, 0xa5, 0x40, 0x00, 0x01, 0x40, 0x00, 0x00, 0xa5, 0x00, 0x00, 0x00, 0xa5,
                         + 0x81, 0x00, 0x00, 0x00, 0x81, 0x00, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x81, 0xc0, 0x00, 0x00, 0x81, 0xfe, 0x0
                         +0, 0x00, 0x01, 0xfe, 0x04, 0x0c, 0x04, 0xa0, 0x00, 0x00, 0xfe, 0x00, 0x00, 0x00, 0xfe, 0xc3, 0x00, 0x08, 0
                         +x20, 0xff, 0xa0, 0x1c, 0x48, 0x98, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0xc3, 0x00, 0x00, 0x01, 0x81,
                         + 0x40, 0x01, 0xe8, 0x9c, 0x00, 0x20, 0x81, 0x00, 0x00, 0x00, 0x00, 0xc3, 0x00, 0x00, 0x00, 0xa5, 0x00, 0x0
                         +1, 0x29, 0x18, 0x00, 0x00, 0xa5, 0x00, 0x00, 0x00, 0x00, 0xb3, 0x00, 0x00, 0x00, 0x81, 0x40, 0x01, 0xa9, 0
                         +x1c, 0x00, 0x04, 0x81, 0x40, 0x00, 0x00, 0x00, 0xcd, 0x00, 0x00, 0x00, 0x81, 0x80, 0x03, 0x69, 0x10, 0x00,
                         + 0x04, 0x81, 0x04, 0x00, 0x00, 0x00, 0xc3, 0x00, 0x00, 0x00, 0xa5, 0xc0, 0x00, 0xc8, 0x94, 0x20, 0x01, 0xa
                         +5, 0x80, 0x00, 0x00, 0x00, 0xc3, 0x00, 0x00, 0x00, 0x81, 0xa1, 0x80, 0xd8, 0x90, 0x00, 0x06, 0x81, 0x80, 0
                         +x00, 0x00, 0x00, 0xc3, 0x01, 0x00, 0x00, 0xfe, 0xf1, 0x00, 0x38, 0x98, 0x02, 0x0d, 0xfe, 0x02, 0x00, 0x1e,
                         + 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x8
                         +1, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0xa5, 0xa5, 0
                         +xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0x81, 0x81, 0x81, 0x81,
                         + 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x8
                         +1, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0
                         +xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81,
                         + 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xf
                         +e, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe };
        Exodus.c    49    
        Exodus.c    50    const unsigned char BACK_TUT_3[] = { 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE    6


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

                         +f, 0xff, 0xff, 0xff, 0xff, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0xff, 0xff, 0xff, 0xff, 0xff, 0x81, 0x81, 0
                         +x81, 0x81, 0x81, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xff, 0xff, 0xff, 0xff, 0xff, 0xa5, 0xa5, 0xa5, 0xa5,
                         + 0xa5, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0xff, 0xff, 0xff, 0xf7, 0xff, 0x81, 0x81, 0x81, 0x81, 0x81, 0x8
                         +1, 0x81, 0x81, 0x81, 0x81, 0x81, 0xff, 0xff, 0xff, 0xff, 0xff, 0x81, 0x81, 0x81, 0x81, 0x81, 0xa5, 0xa5, 0
                         +xa5, 0xa5, 0xa5, 0xa5, 0xff, 0xff, 0xff, 0xff, 0xff, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0x81, 0x81, 0x81, 0x81,
                         + 0x81, 0x81, 0xff, 0xff, 0xff, 0xff, 0xfd, 0x81, 0x81, 0x81, 0x81, 0x81, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xf
                         +e, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xff, 0x44, 0x08, 0x81, 0x85, 0x03, 0x3f, 0
                         +xff, 0xff, 0xff, 0xfc, 0x85, 0x81, 0x10, 0x00, 0xff, 0x81, 0x01, 0x04, 0x82, 0xb1, 0x4f, 0x7f, 0xef, 0xff,
                         + 0xff, 0xfc, 0x81, 0x39, 0x08, 0x01, 0x81, 0xa5, 0x04, 0x98, 0x40, 0x83, 0x0c, 0x3f, 0xff, 0xff, 0xff, 0xf
                         +0, 0x89, 0x42, 0x20, 0x82, 0xa5, 0x81, 0x4f, 0xe1, 0x9a, 0xa1, 0x18, 0x3f, 0xff, 0xff, 0xff, 0xc0, 0xc1, 0
                         +x17, 0xe7, 0x81, 0x81, 0x81, 0x0f, 0xe1, 0x88, 0x81, 0x48, 0xff, 0xff, 0xff, 0xff, 0xb2, 0x81, 0x0f, 0xe7,
                         + 0x80, 0x81, 0xa5, 0x06, 0x07, 0x89, 0x81, 0xd1, 0xff, 0xff, 0xff, 0xff, 0x94, 0x81, 0x06, 0x00, 0x65, 0xa
                         +5, 0x81, 0x06, 0x07, 0x88, 0x81, 0xe3, 0xff, 0xff, 0xff, 0xff, 0xcc, 0xe1, 0x16, 0x20, 0x60, 0x81, 0xfe, 0
                         +x17, 0x89, 0x86, 0x87, 0xc1, 0xff, 0xff, 0xff, 0xff, 0xc7, 0x95, 0x07, 0x91, 0x82, 0xfe, 0xff, 0x07, 0x81,
                         + 0x90, 0x91, 0x81, 0xff, 0xff, 0xff, 0xff, 0xe5, 0xc9, 0x17, 0x81, 0x84, 0xff, 0x81, 0x16, 0x11, 0x90, 0xc
                         +d, 0x99, 0xff, 0xff, 0xfd, 0xff, 0xf3, 0x87, 0x06, 0x06, 0x00, 0x81, 0xa5, 0x16, 0x81, 0x86, 0x89, 0x0c, 0
                         +xff, 0xff, 0xff, 0xff, 0xf2, 0x91, 0x26, 0x06, 0x00, 0xa5, 0x81, 0x06, 0x07, 0xe0, 0x81, 0x0f, 0xff, 0xff,
                         + 0xff, 0xff, 0xf9, 0x89, 0x17, 0x07, 0xe8, 0x81, 0x81, 0x36, 0x97, 0xe0, 0x91, 0x1f, 0xff, 0xff, 0xff, 0xf
                         +f, 0xf8, 0xa1, 0x06, 0x27, 0xe0, 0x81, 0xa5, 0x21, 0x82, 0xa0, 0xc1, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xfc, 0
                         +xa1, 0x49, 0x45, 0x20, 0xa5, 0x81, 0x20, 0x08, 0x10, 0x89, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x83, 0xd0,
                         + 0x00, 0x10, 0x81, 0xfe, 0x18, 0x00, 0x08, 0x81, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xf1, 0x81, 0x4c, 0x00, 0x0
                         +4, 0xfe, 0xff, 0x20, 0x04, 0x1c, 0xa1, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x81, 0x24, 0x00, 0x00, 0xff, 0
                         +x81, 0x53, 0x11, 0x8a, 0x89, 0x07, 0xff, 0xff, 0xff, 0xff, 0xc8, 0xe1, 0x45, 0x4a, 0x60, 0x81, 0xa5, 0x0a,
                         + 0xa5, 0x48, 0x81, 0x01, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x99, 0x05, 0x55, 0x50, 0xa5, 0x81, 0x33, 0x25, 0x4
                         +8, 0xc1, 0x5f, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x91, 0x28, 0x91, 0x60, 0x81, 0x81, 0x82, 0x00, 0x00, 0x81, 0
                         +x3f, 0xff, 0xff, 0xff, 0xff, 0xf1, 0xa1, 0x00, 0x00, 0x40, 0x81, 0xa5, 0x2a, 0xe0, 0x00, 0x81, 0x3f, 0xff,
                         + 0xff, 0xff, 0xff, 0xe0, 0xa5, 0x20, 0x00, 0x61, 0xa5, 0x81, 0x40, 0xa0, 0x2c, 0x81, 0x7f, 0xbf, 0xff, 0xf
                         +f, 0xe1, 0xe0, 0x89, 0x00, 0x04, 0x84, 0x81, 0xfe, 0xee, 0xfc, 0x03, 0x81, 0x3f, 0xff, 0xff, 0xfe, 0x01, 0
                         +x08, 0x87, 0xfc, 0x1e, 0xfb, 0xfe, 0xff, 0xf3, 0xdb, 0x11, 0x81, 0x7f, 0xff, 0xff, 0xf0, 0x01, 0x80, 0x81,
                         + 0x6e, 0x06, 0x4c, 0xff, 0x81, 0x60, 0x58, 0x14, 0x81, 0x7f, 0xff, 0xff, 0xc0, 0x00, 0x80, 0x91, 0x00, 0x4
                         +0, 0x00, 0x81, 0xa5, 0x00, 0x02, 0x00, 0x81, 0x7f, 0xff, 0xff, 0x00, 0x00, 0x81, 0xc3, 0x00, 0x04, 0x00, 0
                         +xa5, 0x81, 0x30, 0x00, 0x00, 0x81, 0x7f, 0xff, 0xfe, 0x00, 0x80, 0xc0, 0xc3, 0x40, 0x00, 0x00, 0x81, 0x81,
                         + 0x00, 0x00, 0x00, 0x81, 0x7f, 0xff, 0xf8, 0x00, 0xc0, 0x60, 0xa1, 0x80, 0x00, 0x22, 0x81, 0xa5, 0x08, 0x0
                         +0, 0x00, 0x81, 0x7f, 0xff, 0xf0, 0x20, 0x40, 0x30, 0x91, 0x20, 0x40, 0xc0, 0xa5, 0x81, 0x00, 0x00, 0x00, 0
                         +x81, 0x7e, 0xff, 0xe0, 0x00, 0x42, 0x18, 0xd5, 0x00, 0x00, 0x00, 0x81, 0xfe, 0x00, 0x02, 0x00, 0x81, 0x79,
                         + 0xff, 0xc8, 0x00, 0xc6, 0x0c, 0x89, 0x00, 0x00, 0x00, 0xfe, 0xff, 0x00, 0x20, 0x00, 0x81, 0x03, 0xff, 0x8
                         +8, 0x0f, 0x80, 0x06, 0xa1, 0x10, 0x00, 0x00, 0xff, 0x81, 0x00, 0x00, 0x00, 0x81, 0x83, 0xff, 0x08, 0x00, 0
                         +x00, 0x02, 0x81, 0x20, 0x40, 0x00, 0x81, 0xa5, 0x00, 0x00, 0x00, 0x81, 0x07, 0xfe, 0x30, 0x00, 0x00, 0x93,
                         + 0x81, 0x00, 0x00, 0x04, 0xa5, 0x81, 0x00, 0x00, 0x00, 0x81, 0x1f, 0xfc, 0x40, 0x00, 0x00, 0x83, 0x81, 0x0
                         +0, 0x00, 0x81, 0x81, 0x81, 0x00, 0x00, 0x00, 0x81, 0x1f, 0xf8, 0x08, 0x00, 0x01, 0x06, 0xa1, 0x00, 0x00, 0
                         +x00, 0x81, 0xa5, 0x00, 0x00, 0x00, 0x83, 0x3f, 0xf0, 0x00, 0x30, 0x01, 0x0c, 0xa5, 0x00, 0x00, 0x00, 0xa5,
                         + 0x81, 0x00, 0x00, 0x00, 0x83, 0x3f, 0xf0, 0x00, 0x08, 0x06, 0x18, 0x81, 0xc2, 0x00, 0x00, 0x81, 0xfe, 0x0
                         +0, 0x00, 0x00, 0x81, 0x1f, 0xe0, 0x00, 0x10, 0x38, 0x30, 0x99, 0x00, 0x00, 0x00, 0xfe, 0xc3, 0x04, 0x00, 0
                         +x00, 0x83, 0xaf, 0xc0, 0x00, 0x90, 0x00, 0x20, 0xd9, 0x00, 0x00, 0x00, 0x00, 0xc3, 0x00, 0x00, 0x00, 0x81,
                         + 0x5f, 0xc0, 0x00, 0x10, 0x00, 0x60, 0x81, 0x00, 0x00, 0x00, 0x00, 0xc3, 0x00, 0x00, 0x00, 0x81, 0x07, 0x8
                         +0, 0x00, 0x62, 0x00, 0xc0, 0x89, 0x00, 0x00, 0x00, 0x00, 0xb3, 0x00, 0x00, 0x00, 0x81, 0x47, 0x81, 0x01, 0
                         +x80, 0x01, 0x84, 0xc1, 0x00, 0x00, 0x00, 0x00, 0xcd, 0x00, 0x00, 0x20, 0x81, 0x83, 0x01, 0xfe, 0x00, 0x03,
                         + 0x04, 0x81, 0x00, 0x00, 0x00, 0x00, 0xc3, 0x00, 0x80, 0x00, 0x81, 0xcb, 0x00, 0x00, 0x00, 0x0e, 0x01, 0x8
                         +5, 0x80, 0x00, 0x00, 0x00, 0xc3, 0x00, 0x00, 0x80, 0x81, 0xa3, 0x10, 0x00, 0x00, 0x08, 0x06, 0x81, 0x80, 0
                         +x00, 0x00, 0x00, 0xc3, 0x00, 0x00, 0x00, 0x81, 0xf1, 0x00, 0x00, 0x00, 0x4f, 0x8d, 0xa3, 0x02, 0x00, 0x00,
                         + 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x8
                         +1, 0x81, 0x81, 0x81, 0x81, 0x81, 0x00, 0x84, 0x00, 0x00, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0xa5, 0xa5, 0
                         +xa5, 0xa5, 0xa5, 0xa5, 0x01, 0x00, 0x00, 0x00, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0x81, 0x81, 0x81, 0x81,
                         + 0x81, 0x81, 0x06, 0x00, 0x20, 0x00, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x8
                         +1, 0x00, 0x00, 0x40, 0x04, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0x00, 0
                         +x00, 0x00, 0x0c, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x00, 0x10, 0x00,
                         + 0x38, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0x00, 0x60, 0x00, 0x00, 0xf




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE    7


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

                         +e, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe };
        Exodus.c    51    
        Exodus.c    52    
        Exodus.c    53    //level data
        Exodus.c    54    
        Exodus.c    55    const unsigned int TUT_01[] = { 0xffffffff, 0xf000000f, 0xf000000f, 0xff00000f, 0xfff0000f, 0xf000000f, 0x
                         +f00f000f, 0xf00f000f, 0xf00f000f, 0xf00f000f, 0xf000000f, 0xfff0000f, 0xff00000f, 0xf000000f, 0xf000000f, 
                         +0xf0ffffff };
        Exodus.c    56    const unsigned int TUT_02[] = { 0xffffffff, 0xf000000f, 0xf000000f, 0xf000000f, 0xffff000f, 0xf000000f, 0x
                         +f000000f, 0xf000000f, 0xf000000f, 0xf000000f, 0xf00f000f, 0xffff000f, 0xf000000f, 0xf000000f, 0xf000000f, 
                         +0xf0ffffff };
        Exodus.c    57    const unsigned int TUT_03[] = { 0xffffffff, 0xf000000f, 0xf000000f, 0xf000000f, 0xf000000f, 0xf000000f, 0x
                         +00000000, 0x00000000, 0x00000000, 0x00000000, 0xf0000000, 0xf000000f, 0xf000000f, 0xf000000f, 0xf000000f, 
                         +0xf0ffffff };
        Exodus.c    58    const unsigned int LVL_01[] = { 0xfeeee00e, 0xfeee0eee, 0xf0eeeeee, 0xf00000ee, 0xf0000000, 0xf0000000, 0x
                         +f0000000, 0xfe000000, 0xf0000000, 0xfe000000, 0xfe000000, 0xfee00000, 0xf0000000, 0xf0000000, 0xf0000000, 
                         +0xfeee0000, 0xfeeee000, 0xfe000000, 0xf0000000, 0xfe000000, 0xf0000000, 0xf0e00000, 0xfe000000, 0xfee00000
                         +, 0xfe000000, 0xfe000000, 0xff000000, 0xff000000, 0xfffee000, 0xfff00000, 0xffff0000, 0xfffff000 };
        Exodus.c    59    
        Exodus.c    60    
        Exodus.c    61    const unsigned int LEVEL_0_1[] = { 0xffffffff, 0xffffffff, 0xf0000000, 0xf0000000, 0xf0000000, 0xff000000,
                         + 0xf0000000, 0xf000f000, 0xf0000000, 0xff000000, 0xfff00000, 0xfff00000, 0xfff00000, 0xf0000000, 0xf000000
                         +0, 0xf0000000, 0xf00fff00, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000f00, 0xf0000f00, 0xf0000f00, 0xf0000
                         +f00, 0xf0000f00, 0xff000000, 0xff000000, 0xff0ff000, 0xff000000, 0xf0000000, 0xf0000000, 0xffffffff };
        Exodus.c    62    
        Exodus.c    63    const unsigned int LEVEL_0_2[] = { 0xffffffff, 0xf0000000, 0xf0000000, 0xf0050000, 0xf00a0000, 0xf00f0500,
                         + 0xf0050500, 0xf0050500, 0xf0050500, 0xf0000500, 0xf0050500, 0xf0550000, 0xf0000000, 0xf0000000, 0xf000000
                         +0, 0xf000a000, 0xf00aa000, 0xf0000000, 0xf0a00000, 0xf0a00000, 0xf0a00000, 0xf0000000, 0xf0000000, 0xf0aaa
                         +000, 0xf0a00000, 0xf0a00000, 0xf0aaa000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf00ff000, 0xf00ff000, 0xf00
                         +ff000, 0xf00ff000, 0xf00ff000, 0xf00ff000, 0xf00f0000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf
                         +0f0f0f0, 0xf0f0f0f0, 0xf000f000, 0xf000f000, 0xf0f00000, 0xf0f00000, 0xf0000000, 0xf0000000, 0xf0000000, 0
                         +xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000,
                         + 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf000000
                         +0, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000
                         +000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf00
                         +00000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf
                         +0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0
                         +xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000,
                         + 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf000000
                         +0, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000
                         +000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf00
                         +00000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf
                         +0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0
                         +xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000,
                         + 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf000000
                         +0, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000
                         +000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf00
                         +00000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf
                         +0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0x00000000, 0
                         +x00000000, 0x00000000, 0x00000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000,
                         + 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf000000
                         +0, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000
                         +000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf00
                         +00000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf0000000, 0xf
                         +0000000, 0xffffffff };
        Exodus.c    64    
        Exodus.c    65    




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE    8


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

        Exodus.c    66    //const unsigned char TILE_PI[] =  { 0x00, 0x00, 0x7c, 0x28, 0x28, 0x28, 0x4c, 0x00 };
        Exodus.c    67    const unsigned char TILE_ER[] =  { 0xe0, 0x80, 0xe0, 0x8c, 0xea, 0x0c, 0x0a, 0x0a };
        Exodus.c    68    const unsigned char TILE_METAL[] =   { 0xff, 0x89, 0x8d, 0x8b, 0xc9, 0xb9, 0x91, 0xfe };
        Exodus.c    69    const unsigned char TILE_SOIL[] =   { 0xff, 0x81, 0xa5, 0x81, 0x81, 0xa5, 0x81, 0xfe };
        Exodus.c    70    const unsigned char TILE_F[] =   { 0xff, 0x81, 0x95, 0xad, 0x95, 0xbd, 0x81, 0xfe };
        Exodus.c    71    const unsigned char TILE_F_IN[] ={ 0xff, 0x81, 0xbd, 0xb5, 0xa9, 0xb5, 0x81, 0xfe };
        Exodus.c    72    //const unsigned char TILE_0[] =   { 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF };
        Exodus.c    73    // SPrite (Player) tileset
        Exodus.c    74    const unsigned char SP_PIR[] =   { 0x18, 0x3c, 0x74, 0x78, 0x3c, 0x7e, 0x38, 0x66 };
        Exodus.c    75    const unsigned char SP_PWR[] =   { 0x18, 0x3c, 0x74, 0x78, 0x3c, 0x7c, 0x7c, 0x28 };
        Exodus.c    76    const unsigned char SP_PJR[] =   { 0x18, 0x3c, 0x74, 0x78, 0x7e, 0x3c, 0x68, 0x04 };
        Exodus.c    77    const unsigned char SP_PIL[] =   { 0x18, 0x3c, 0x2e, 0x1e, 0x3c, 0x7e, 0x1c, 0x66 };
        Exodus.c    78    const unsigned char SP_PWL[] =   { 0x18, 0x3c, 0x2e, 0x1e, 0x3c, 0x3e, 0x3e, 0x14 };
        Exodus.c    79    const unsigned char SP_PJL[] =   { 0x18, 0x3c, 0x2e, 0x1e, 0x7e, 0x3c, 0x16, 0x20 };
        Exodus.c    80    const unsigned char SP_PIM[] =   { 0x18, 0x3c, 0x5a, 0x7e, 0x3c, 0x7e, 0x3c, 0x66 };
        Exodus.c    81    
        Exodus.c    82    const unsigned char SCREEN_WIDTH = 16;
        Exodus.c    83    const unsigned char SCREEN_HEIGHT = 8;
        Exodus.c    84    
        Exodus.c    85    
        Exodus.c    86    const unsigned char *  TILE_SET[] = {TILE_ER, TILE_ER, TILE_ER, TILE_ER, TILE_F_IN, TILE_F_IN, TILE_F_IN, 
                         +TILE_F_IN, TILE_F, TILE_F, TILE_F, TILE_F, TILE_METAL, TILE_METAL, TILE_METAL, TILE_SOIL};
        Exodus.c    87    
        Exodus.c    88    //const LevelData t1 = { TUT_01,    1, BACK_TUT_1, TILE_SET, {2*8*8, 6*8*8}, {15,5},    16*8 };
        Exodus.c    89    const LevelData t1 = { TUT_01,    1, 0, BACK_TUT_1, {2*8*8, 6*8*8}, {15,5},    16*8 };
        Exodus.c    90    const LevelData t2 = { TUT_02,    1, 0, BACK_TUT_2, {2*8*8, 6*8*8}, {15,5},    16*8 };
        Exodus.c    91    const LevelData t3 = { TUT_03,    1, 0, BACK_TUT_3, {2*8*8, 6*8*8}, {15,5},    16*8 };
        Exodus.c    92    const LevelData l1 = { LVL_01,    1, 1, BACKGROUND, {3*8*8, 6*8*8}, {31,1},    (sizeof(LEVEL_0_1)>>2)<<3 }
                         +;
        Exodus.c    93    const LevelData l2 = { LEVEL_0_1, 0, 0, BACKGROUND, {32*8, 40*8},   {30,5},    (sizeof(LEVEL_0_1)>>2)<<3 }
                         +;
        Exodus.c    94    const LevelData l3 = { LEVEL_0_2, 1, 1, BACKGROUND, {32*8, 40*8},   {100,100}, (sizeof(LEVEL_0_2)>>2)<<3 }
                         +;//can not end level
        Exodus.c    95    
        Exodus.c    96    //const LevelData l2 = { .level = LEVEL_0_2, .hasBackground = 1, .background = BACKGROUND, .tileArray = {T
                         +ILE_ER, TILE_F_IN, TILE_F, TILE_GR}, .start = {32*8, 40*8} };
        Exodus.c    97    const LevelData *levelList[] = {&t1, &t2, &t3, &l1, &l2, &l3};
        Exodus.c    98    
        Exodus.c    99    
        Exodus.c   100    
        Exodus.c   101    //Frame buffer
        Exodus.c   102    unsigned char buffer[1024];
        Exodus.c   103    
        Exodus.c   104    //map data
        Exodus.c   105    LevelData currentLevel;
        Exodus.c   106    unsigned char levelPointer;
        Exodus.c   107    unsigned int *level;
        Exodus.c   108    //unsigned char *tileArray[4];
        Exodus.c   109    unsigned int levelX = 0; //also the scroll stop
        Exodus.c   110    
        Exodus.c   111    
        Exodus.c   112    //player data
        Exodus.c   113    unsigned int Ppos[2];//x,y, measured from the top left corner, divide by 8 (or >>3) to get the pixel posit
                         +ion, and by 8 again to get tile value
        Exodus.c   114    float Pvel[2];//x,y, measured from the top left corner
        Exodus.c   115    float Acc;
        Exodus.c   116    float VelMax;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE    9


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

        Exodus.c   117    unsigned int onGround;
        Exodus.c   118    unsigned int jumpCounter;
        Exodus.c   119    unsigned char jumpPressed;
        Exodus.c   120    //unsigned char playerSprites[4];
        Exodus.c   121    
        Exodus.c   122    
        Exodus.c   123    //general engine data
        Exodus.c   124    unsigned char isTimerFinished = 0;
        Exodus.c   125    unsigned int key;//the key that is pressed - mostly unused
        Exodus.c   126    unsigned int timer;//for initialising the number generator
        Exodus.c   127    unsigned int timePerFrame = 38;
        Exodus.c   128    unsigned char fileName[]={"ExSave"}; //for saving and loading
        Exodus.c   129    
        Exodus.c   130    
        Exodus.c   131    
        Exodus.c   132    // TO DO:
        Exodus.c   133    // add functionality for other sprites (turtle etc.)
        Exodus.c   134    // inbetween level screens
        Exodus.c   135    // add new interactable blocks?
        Exodus.c   136    // checkpoints?
        Exodus.c   137    
        Exodus.c   138    
        Exodus.c   139    
        Exodus.c   140    //********************************************************************************************************
                         +**********************************************************
        Exodus.c   141    
        Exodus.c   142    
        Exodus.c   143    //definitions (not actullly called that)
        Exodus.c   144    void drawLevel(signed int Xstart);
        Exodus.c   145    //theses do not check if you are attempting to draw offscreen
        Exodus.c   146    //it will crash horibly if you try
        Exodus.c   147    void drawTile(unsigned char x, unsigned char y, unsigned char pixelOffset, unsigned char *tile);//this one
                         + will overwrite the background
        Exodus.c   148    void drawByScreenValues(unsigned char x, unsigned char y, unsigned char *sprite);//will not overwrite back
                         +ground
        Exodus.c   149    void drawToVRAM(unsigned char bitmap[]);
        Exodus.c   150    
        Exodus.c   151    void dealWithKeys();
        Exodus.c   152    void movePlayer();
        Exodus.c   153    void reset(unsigned char doLoadData);
        Exodus.c   154    unsigned char doTitleScreen();//outputs zero for continue
        Exodus.c   155    void saveData();//write to file
        Exodus.c   156    
        Exodus.c   157    void timerFinished(){//sets the flag to say that the frame has finished
P   00000000              _timerFinished:                  ; function: timerFinished
                                                           ; frame size=0
        Exodus.c   158      isTimerFinished = 1;
    00000000 D238                   MOV.L       L621+4,R2  ; _isTimerFinished
    00000002 E301                   MOV         #1,R3
        Exodus.c   159    }
    00000004 000B                   RTS
    00000006 2230                   MOV.B       R3,@R2
        Exodus.c   160    
        Exodus.c   161    //********************************************************************************************************
                         +**********************************************************
        Exodus.c   162    
        Exodus.c   163    //the main loop




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE   10


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

        Exodus.c   164    int AddIn_main(int isAppli, unsigned short OptionNum){
    00000008              _AddIn_main:                     ; function: AddIn_main
                                                           ; frame size=44
                                                           ; used runtime library name:
                                                           ; __gts, __lts
    00000008 7FD4                   ADD         #-44,R15
        Exodus.c   165      unsigned char doLoadData;
        Exodus.c   166      start:
    0000000A              __$start$363:                    ; label: start
        Exodus.c   167      if(KeyDown(48)){//menu
    0000000A D337                   MOV.L       L621+8,R3  ; _KeyDown
    0000000C 430B                   JSR         @R3
    0000000E E430                   MOV         #48,R4
    00000010 2008                   TST         R0,R0
    00000012 8905                   BT          L514
        Exodus.c   168        GetKeyWait(KEYWAIT_HALTON_TIMEROFF, 0,0, &key);
    00000014 D735                   MOV.L       L621+12,R7 ; _key
    00000016 E600                   MOV         #0,R6
    00000018 D335                   MOV.L       L621+16,R3 ; _GetKeyWait
    0000001A 6563                   MOV         R6,R5
    0000001C 430B                   JSR         @R3
    0000001E 6463                   MOV         R6,R4
    00000020              L514:                             
        Exodus.c   169      }
        Exodus.c   170    
        Exodus.c   171      doLoadData = !doTitleScreen();
    00000020 B4E7                   BSR         _doTitleScreen
    00000022 0009                   NOP
    00000024 600C                   EXTU.B      R0,R0
    00000026 2008                   TST         R0,R0
    00000028 0429                   MOVT        R4
        Exodus.c   172      restartlevel:
    0000002A              __$restartlevel$366:             ; label: restartlevel
        Exodus.c   173      reset(doLoadData);
    0000002A B44F                   BSR         _reset
    0000002C 0009                   NOP
    0000002E E801                   MOV         #1,R8
    00000030 9956                   MOV.W       L621,R9    ; H'0400
    00000032 D430                   MOV.L       L621+20,R4 ; _Ppos
    00000034 D230                   MOV.L       L621+24,R2 ; _buffer
    00000036 6D43                   MOV         R4,R13
    00000038 D132                   MOV.L       L621+36,R1 ; _SP_PIL
    0000003A 6E43                   MOV         R4,R14
    0000003C DA37                   MOV.L       L621+60,R10; _currentLevel
    0000003E 6323                   MOV         R2,R3
    00000040 DB37                   MOV.L       L621+64,R11; _levelPointer
    00000042 7E04                   ADD         #4,R14
    00000044 1F21                   MOV.L       R2,@(4,R15)
    00000046 1F32                   MOV.L       R3,@(8,R15)
    00000048 D22C                   MOV.L       L621+28,R2 ; _Pvel
    0000004A 2F22                   MOV.L       R2,@R15
    0000004C D32C                   MOV.L       L621+32,R3 ; _SP_PWL
    0000004E 1F33                   MOV.L       R3,@(12,R15)
    00000050 1F14                   MOV.L       R1,@(16,R15)
    00000052 D32D                   MOV.L       L621+40,R3 ; _SP_PJL
    00000054 D12D                   MOV.L       L621+44,R1 ; _SP_PWR
    00000056 1F35                   MOV.L       R3,@(20,R15)




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE   11


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000058 1F16                   MOV.L       R1,@(24,R15)
    0000005A D32D                   MOV.L       L621+48,R3 ; _SP_PIR
    0000005C D12D                   MOV.L       L621+52,R1 ; _SP_PJR
    0000005E 1F37                   MOV.L       R3,@(28,R15)
    00000060 1F18                   MOV.L       R1,@(32,R15)
    00000062 D32D                   MOV.L       L621+56,R3 ; _SP_PIM
    00000064 DC2F                   MOV.L       L621+68,R12; _timer
    00000066 1F39                   MOV.L       R3,@(36,R15)
    00000068 D323                   MOV.L       L621+24,R3 ; _buffer
    0000006A 1F3A                   MOV.L       R3,@(40,R15)
        Exodus.c   174    
        Exodus.c   175      while (1){// !KeyDown(57)){//exit on exponent (^) key
    0000006C              L517:                             
        Exodus.c   176        timer++;
    0000006C 62C2                   MOV.L       @R12,R2
        Exodus.c   177        isTimerFinished = 0;//start the frame timer
    0000006E E300                   MOV         #0,R3
    00000070 D11C                   MOV.L       L621+4,R1  ; _isTimerFinished
    00000072 7201                   ADD         #1,R2
        Exodus.c   178        SetTimer(ID_USER_TIMER1, timePerFrame, timerFinished);
    00000074 D62C                   MOV.L       L621+72,R6 ; _timerFinished
    00000076 2C22                   MOV.L       R2,@R12
    00000078 2130                   MOV.B       R3,@R1
    0000007A D32C                   MOV.L       L621+76,R3 ; _timePerFrame
    0000007C D22C                   MOV.L       L621+80,R2 ; _SetTimer
    0000007E 6532                   MOV.L       @R3,R5
    00000080 420B                   JSR         @R2
    00000082 E401                   MOV         #1,R4
        Exodus.c   179    
        Exodus.c   180    
        Exodus.c   181    
        Exodus.c   182    
        Exodus.c   183    
        Exodus.c   184        //memset(&buffer,0,1024);//clear screen buffer
        Exodus.c   185    
        Exodus.c   186        dealWithKeys();
    00000084 B0E7                   BSR         _dealWithKeys
    00000086 0009                   NOP
        Exodus.c   187        if(KeyDown(47)||KeyDown(48)){//menu
    00000088 D217                   MOV.L       L621+8,R2  ; _KeyDown
    0000008A 420B                   JSR         @R2
    0000008C E42F                   MOV         #47,R4
    0000008E 2008                   TST         R0,R0
    00000090 8B04                   BF          L519
    00000092 D215                   MOV.L       L621+8,R2  ; _KeyDown
    00000094 420B                   JSR         @R2
    00000096 E430                   MOV         #48,R4
    00000098 2008                   TST         R0,R0
    0000009A 8903                   BT          L518
    0000009C              L519:                             
        Exodus.c   188          saveData();//save game
    0000009C B562                   BSR         _saveData
    0000009E 0009                   NOP
        Exodus.c   189          goto start;
    000000A0 AFB3                   BRA         __$start$363
    000000A2 0009                   NOP
    000000A4              L518:                             




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE   12


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

        Exodus.c   190        }
        Exodus.c   191    
        Exodus.c   192        if((((Ppos[0]-32)>>6) == currentLevel.end[0]) && (((Ppos[1]-32)>>6) == currentLevel.end[1])){// if(pla
                         +yer is in the end level square){
    000000A4 62D2                   MOV.L       @R13,R2
    000000A6 64A3                   MOV         R10,R4
    000000A8 72E0                   ADD         #-32,R2
    000000AA 4209                   SHLR2       R2
    000000AC 4209                   SHLR2       R2
    000000AE 4209                   SHLR2       R2
    000000B0 7414                   ADD         #20,R4
    000000B2 6140                   MOV.B       @R4,R1
    000000B4 611C                   EXTU.B      R1,R1
    000000B6 3210                   CMP/EQ      R1,R2
    000000B8 8B3C                   BF          L520
    000000BA 62E2                   MOV.L       @R14,R2
    000000BC 8441                   MOV.B       @(1,R4),R0
    000000BE 72E0                   ADD         #-32,R2
    000000C0 4209                   SHLR2       R2
    000000C2 4209                   SHLR2       R2
    000000C4 4209                   SHLR2       R2
    000000C6 600C                   EXTU.B      R0,R0
    000000C8 3200                   CMP/EQ      R0,R2
    000000CA 8B33                   BF          L520
        Exodus.c   193          levelPointer++;
    000000CC 62B0                   MOV.B       @R11,R2
    000000CE 7201                   ADD         #1,R2
    000000D0 2B20                   MOV.B       R2,@R11
        Exodus.c   194          if(levelPointer >= sizeof(levelList)){
    000000D2 E218                   MOV         #24,R2
    000000D4 63B0                   MOV.B       @R11,R3
    000000D6 633C                   EXTU.B      R3,R3
    000000D8 3322                   CMP/HS      R2,R3
    000000DA 8996                   BT          __$start$363
        Exodus.c   195            //doEndofGameScreens;
        Exodus.c   196            goto start;
        Exodus.c   197          }
        Exodus.c   198          //saveData();
        Exodus.c   199          doLoadData = 0;
        Exodus.c   200          goto restartlevel;
    000000DC AFA5                   BRA         __$restartlevel$366
    000000DE E400                   MOV         #0,R4
    000000E0              L621:                             
    000000E0 0400                   .DATA.W     H'0400
    000000E2 0000                   .DATA.W     0
    000000E4 <00000000>             .DATA.L     _isTimerFinished
    000000E8 <00000000>             .DATA.L     _KeyDown
    000000EC <00000000>             .DATA.L     _key
    000000F0 <00000000>             .DATA.L     _GetKeyWait
    000000F4 <00000000>             .DATA.L     _Ppos
    000000F8 <00000000>             .DATA.L     _buffer
    000000FC <00000000>             .DATA.L     _Pvel
    00000100 <00000000>             .DATA.L     _SP_PWL
    00000104 <00000000>             .DATA.L     _SP_PIL
    00000108 <00000000>             .DATA.L     _SP_PJL
    0000010C <00000000>             .DATA.L     _SP_PWR
    00000110 <00000000>             .DATA.L     _SP_PIR




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE   13


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000114 <00000000>             .DATA.L     _SP_PJR
    00000118 <00000000>             .DATA.L     _SP_PIM
    0000011C <00000000>             .DATA.L     _currentLevel
    00000120 <00000000>             .DATA.L     _levelPointer
    00000124 <00000000>             .DATA.L     _timer
    00000128 <00000000>             .DATA.L     _timerFinished
    0000012C <00000000>             .DATA.L     _timePerFrame
    00000130 <00000000>             .DATA.L     _SetTimer
    00000134              L520:                             
        Exodus.c   201        }
        Exodus.c   202    
        Exodus.c   203        movePlayer();
    00000134 B11A                   BSR         _movePlayer
    00000136 0009                   NOP
        Exodus.c   204        //PlotPixel(levelX,1,buffer,1);
        Exodus.c   205    
        Exodus.c   206        // if(timer%2 ==0){
        Exodus.c   207        //   memset(&buffer,0,1024);
        Exodus.c   208        // }
        Exodus.c   209        // if(KeyDown(71)){
        Exodus.c   210    
        Exodus.c   211        if(timer&0x01){ // timer%2 (every other frame)
    00000138 63C2                   MOV.L       @R12,R3
    0000013A 2388                   TST         R8,R3
    0000013C 8B01                   BF          L622
    0000013E A084                   BRA         L538
    00000140 0009                   NOP
    00000142              L622:                             
        Exodus.c   212          if(currentLevel.hasBackground){
    00000142 84A4                   MOV.B       @(4,R10),R0
    00000144 2008                   TST         R0,R0
    00000146 8906                   BT          L523
        Exodus.c   213            memcpy(&buffer,currentLevel.background,1024);
    00000148 55A2                   MOV.L       @(8,R10),R5
    0000014A 6693                   MOV         R9,R6
    0000014C D330                   MOV.L       L623+4,R3  ; _memcpy
    0000014E 430B                   JSR         @R3
    00000150 54F1                   MOV.L       @(4,R15),R4
    00000152 A005                   BRA         L524
    00000154 0009                   NOP
    00000156              L523:                             
        Exodus.c   214          }else{
        Exodus.c   215            memset(&buffer,0,1024);//clear screen buffer
    00000156 6693                   MOV         R9,R6
    00000158 D32E                   MOV.L       L623+8,R3  ; _memset
    0000015A E500                   MOV         #0,R5
    0000015C 430B                   JSR         @R3
    0000015E 54F2                   MOV.L       @(8,R15),R4
    00000160              L524:                             
        Exodus.c   216          }
        Exodus.c   217    
        Exodus.c   218          drawLevel(levelX);//levelX -------------------------------------------------------------------------
                         +----------------------------------------will crash
    00000160 D22D                   MOV.L       L623+12,R2 ; _levelX
    00000162 B27D                   BSR         _drawLevel
    00000164 6422                   MOV.L       @R2,R4
        Exodus.c   219    




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE   14


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

        Exodus.c   220    
        Exodus.c   221    
        Exodus.c   222          if(Ppos[1]<450){
    00000166 9251                   MOV.W       L623,R2    ; H'01C2
    00000168 63E2                   MOV.L       @R14,R3
    0000016A 3322                   CMP/HS      R2,R3
    0000016C 896A                   BT          L525
    0000016E D02B                   MOV.L       L623+16,R0 ; _onGround
    00000170 65C2                   MOV.L       @R12,R5
    00000172 6402                   MOV.L       @R0,R4
    00000174 61F2                   MOV.L       @R15,R1
    00000176 4509                   SHLR2       R5
    00000178 D029                   MOV.L       L623+20,R0 ; H'BF000000
    0000017A 4501                   SHLR        R5
    0000017C D329                   MOV.L       L623+24,R3 ; __lts
    0000017E 2589                   AND         R8,R5
    00000180 430B                   JSR         @R3
    00000182 6112                   MOV.L       @R1,R1
    00000184 8800                   CMP/EQ      #0,R0
    00000186 8919                   BT          L526
    00000188 2448                   TST         R4,R4
    0000018A 890D                   BT          L527
    0000018C 2558                   TST         R5,R5
    0000018E 8D02                   BT/S        L528
        Exodus.c   223            if(Pvel[0]<-0.5f){
        Exodus.c   224              if(onGround){
        Exodus.c   225                if(((timer>>3)&0x01)){
        Exodus.c   226                  drawByScreenValues((Ppos[0]>>3), Ppos[1]>>3, &SP_PWL);
    00000190 65E2                   MOV.L       @R14,R5
    00000192 A001                   BRA         L616
    00000194 56F3                   MOV.L       @(12,R15),R6
    00000196              L528:                             
        Exodus.c   227                }else{
        Exodus.c   228                  drawByScreenValues((Ppos[0]>>3), Ppos[1]>>3, &SP_PIL);
    00000196 56F4                   MOV.L       @(16,R15),R6
    00000198              L616:                             
    00000198 64D2                   MOV.L       @R13,R4
    0000019A 4509                   SHLR2       R5
    0000019C 4501                   SHLR        R5
    0000019E 4409                   SHLR2       R4
    000001A0 B302                   BSR         _drawByScreenValues
    000001A2 4401                   SHLR        R4
    000001A4 A04E                   BRA         L525
    000001A6 0009                   NOP
    000001A8              L527:                             
        Exodus.c   229                }
        Exodus.c   230              }else{
        Exodus.c   231                drawByScreenValues((Ppos[0]>>3), Ppos[1]>>3, &SP_PJL);
    000001A8 56F5                   MOV.L       @(20,R15),R6
    000001AA 65E2                   MOV.L       @R14,R5
    000001AC 64D2                   MOV.L       @R13,R4
    000001AE 4509                   SHLR2       R5
    000001B0 4501                   SHLR        R5
    000001B2 4409                   SHLR2       R4
    000001B4 B2F8                   BSR         _drawByScreenValues
    000001B6 4401                   SHLR        R4
    000001B8 A044                   BRA         L525




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE   15


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000001BA 0009                   NOP
    000001BC              L526:                             
        Exodus.c   232              }
        Exodus.c   233    
        Exodus.c   234            }else if (Pvel[0]>0.5f){
    000001BC 61F2                   MOV.L       @R15,R1
    000001BE D01A                   MOV.L       L623+28,R0 ; H'3F000000
    000001C0 D31A                   MOV.L       L623+32,R3 ; __gts
    000001C2 430B                   JSR         @R3
    000001C4 6112                   MOV.L       @R1,R1
    000001C6 8800                   CMP/EQ      #0,R0
    000001C8 8934                   BT          L532
    000001CA 2448                   TST         R4,R4
    000001CC 8914                   BT          L533
        Exodus.c   235              if(onGround){
        Exodus.c   236                if(((timer>>3)&0x01) && (Pvel[0]>2)){
    000001CE 2558                   TST         R5,R5
    000001D0 8908                   BT          L534
    000001D2 61F2                   MOV.L       @R15,R1
    000001D4 D016                   MOV.L       L623+36,R0 ; H'40000000
    000001D6 D315                   MOV.L       L623+32,R3 ; __gts
    000001D8 430B                   JSR         @R3
    000001DA 6112                   MOV.L       @R1,R1
    000001DC 8800                   CMP/EQ      #0,R0
    000001DE 8901                   BT          L534
        Exodus.c   237                  drawByScreenValues((Ppos[0]>>3), Ppos[1]>>3, &SP_PWR);
    000001E0 A001                   BRA         L617
    000001E2 56F6                   MOV.L       @(24,R15),R6
    000001E4              L534:                             
        Exodus.c   238                }else{
        Exodus.c   239                  drawByScreenValues((Ppos[0]>>3), Ppos[1]>>3, &SP_PIR);
    000001E4 56F7                   MOV.L       @(28,R15),R6
    000001E6              L617:                             
    000001E6 65E2                   MOV.L       @R14,R5
    000001E8 64D2                   MOV.L       @R13,R4
    000001EA 4509                   SHLR2       R5
    000001EC 4501                   SHLR        R5
    000001EE 4409                   SHLR2       R4
    000001F0 B2DA                   BSR         _drawByScreenValues
    000001F2 4401                   SHLR        R4
    000001F4 A026                   BRA         L525
    000001F6 0009                   NOP
    000001F8              L533:                             
        Exodus.c   240                }
        Exodus.c   241              }else{
        Exodus.c   242                drawByScreenValues((Ppos[0]>>3), Ppos[1]>>3, &SP_PJR);
    000001F8 56F8                   MOV.L       @(32,R15),R6
    000001FA 65E2                   MOV.L       @R14,R5
    000001FC 64D2                   MOV.L       @R13,R4
    000001FE 4509                   SHLR2       R5
    00000200 4501                   SHLR        R5
    00000202 4409                   SHLR2       R4
    00000204 B2D0                   BSR         _drawByScreenValues
    00000206 4401                   SHLR        R4
    00000208 A01C                   BRA         L525
    0000020A 0009                   NOP
    0000020C              L623:                             




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE   16


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000020C 01C2                   .DATA.W     H'01C2
    0000020E 0000                   .DATA.W     0
    00000210 <00000000>             .DATA.L     _memcpy
    00000214 <00000000>             .DATA.L     _memset
    00000218 <00000000>             .DATA.L     _levelX
    0000021C <00000000>             .DATA.L     _onGround
    00000220 BF000000               .DATA.L     H'BF000000
    00000224 <00000000>             .DATA.L     __lts
    00000228 3F000000               .DATA.L     H'3F000000
    0000022C <00000000>             .DATA.L     __gts
    00000230 40000000               .DATA.L     H'40000000
    00000234              L532:                             
        Exodus.c   243              }
        Exodus.c   244    
        Exodus.c   245            }else{
        Exodus.c   246              drawByScreenValues((Ppos[0]>>3), Ppos[1]>>3, &SP_PIM);
    00000234 56F9                   MOV.L       @(36,R15),R6
    00000236 65E2                   MOV.L       @R14,R5
    00000238 64D2                   MOV.L       @R13,R4
    0000023A 4509                   SHLR2       R5
    0000023C 4501                   SHLR        R5
    0000023E 4409                   SHLR2       R4
    00000240 B2B2                   BSR         _drawByScreenValues
    00000242 4401                   SHLR        R4
    00000244              L525:                             
        Exodus.c   247            }
        Exodus.c   248            //drawByScreenValues((Ppos[0]>>3), Ppos[1]>>3, &TILE_0);
        Exodus.c   249          }
        Exodus.c   250    
        Exodus.c   251          DrawAll(&buffer);// Draw buffer to screen
    00000244 D384                   MOV.L       L624,R3    ; _DrawAll
    00000246 430B                   JSR         @R3
    00000248 54FA                   MOV.L       @(40,R15),R4
        Exodus.c   252        }
        Exodus.c   253    
        Exodus.c   254    
        Exodus.c   255        // }
        Exodus.c   256    
        Exodus.c   257    
        Exodus.c   258    
        Exodus.c   259        // if(isTimerFinished == 0){
        Exodus.c   260        //   PlotPixel(1, 1, buffer, 0);
        Exodus.c   261        // }else{
        Exodus.c   262        //   PlotPixel(1, 1, buffer, 1);
        Exodus.c   263        // }
        Exodus.c   264        while(isTimerFinished == 0){// a not very nice way of waiting
    0000024A              L538:                             
    0000024A D284                   MOV.L       L624+4,R2  ; _isTimerFinished
    0000024C 6320                   MOV.B       @R2,R3
    0000024E 2338                   TST         R3,R3
    00000250 89FB                   BT          L538
    00000252 AF0B                   BRA         L517
    00000254 0009                   NOP
        Exodus.c   265          //swapholder = PRGM_GetKey();
        Exodus.c   266          //key = (swapholder == 0) ? key : swapholder;
        Exodus.c   267          //Sleep(14);
        Exodus.c   268        }




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE   17


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

        Exodus.c   269        //Sleep(5);
        Exodus.c   270      }
        Exodus.c   271      Reset_Calc();//a terrible way to exit the program - will never be called ( has a better way to exit)
        Exodus.c   272      return 1;
        Exodus.c   273    }
        Exodus.c   274    
        Exodus.c   275    
        Exodus.c   276    //********************************************************************************************************
                         +**********************************************************
        Exodus.c   277    
        Exodus.c   278    void dealWithKeys(){
    00000256              _dealWithKeys:                   ; function: dealWithKeys
                                                           ; frame size=24
                                                           ; used runtime library name:
                                                           ; __adds, __subs, __muls, __negs, __gts, __lts
    00000256 2FE6                   MOV.L       R14,@-R15
    00000258 2FD6                   MOV.L       R13,@-R15
    0000025A 2FC6                   MOV.L       R12,@-R15
    0000025C 2FB6                   MOV.L       R11,@-R15
    0000025E 2FA6                   MOV.L       R10,@-R15
    00000260 4F22                   STS.L       PR,@-R15
        Exodus.c   279      float temp;
        Exodus.c   280      // if(KeyDown(28)){//up
        Exodus.c   281      //   //Ppos[1]--;
        Exodus.c   282      //   Pvel[1] -= ((Acc + Pvel[1])/4);
        Exodus.c   283      // }
        Exodus.c   284      // if(KeyDown(37)){//down
        Exodus.c   285      //   //Ppos[1]++;
        Exodus.c   286      //   Pvel[1] += ((Acc - Pvel[1])/4);
        Exodus.c   287      // }
        Exodus.c   288      if(KeyDown(79)){//shift (b - run) 78
    00000262 DA7F                   MOV.L       L624+8,R10 ; _KeyDown
    00000264 DD7F                   MOV.L       L624+12,R13; _VelMax
    00000266 4A0B                   JSR         @R10
    00000268 E44F                   MOV         #79,R4
    0000026A 2008                   TST         R0,R0
    0000026C 8902                   BT          L541
        Exodus.c   289        VelMax = 16;
    0000026E D27E                   MOV.L       L624+16,R2 ; H'41800000
    00000270 A002                   BRA         L542
    00000272 2D22                   MOV.L       R2,@R13
    00000274              L541:                             
        Exodus.c   290      }else{
        Exodus.c   291        VelMax = 11;
    00000274 D17D                   MOV.L       L624+20,R1 ; H'41300000
    00000276 2D12                   MOV.L       R1,@R13
    00000278              L542:                             
        Exodus.c   292      }
        Exodus.c   293      if(onGround){
    00000278 DB7D                   MOV.L       L624+24,R11; _onGround
    0000027A DC7E                   MOV.L       L624+28,R12; _Acc
    0000027C 63B2                   MOV.L       @R11,R3
    0000027E 2338                   TST         R3,R3
    00000280 8902                   BT          L543
        Exodus.c   294        Acc = 1.5;
    00000282 D37D                   MOV.L       L624+32,R3 ; H'3FC00000
    00000284 A002                   BRA         L544




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE   18


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000286 2C32                   MOV.L       R3,@R12
    00000288              L543:                             
        Exodus.c   295      }else{
        Exodus.c   296        Acc = 0.4;
    00000288 D17C                   MOV.L       L624+36,R1 ; H'3ECCCCCD
    0000028A 2C12                   MOV.L       R1,@R12
    0000028C              L544:                             
        Exodus.c   297      }
        Exodus.c   298      if(KeyDown(38)){//left
    0000028C DE7C                   MOV.L       L624+40,R14; _Pvel
    0000028E 4A0B                   JSR         @R10
    00000290 E426                   MOV         #38,R4
    00000292 2008                   TST         R0,R0
    00000294 8910                   BT          L545
        Exodus.c   299        //Ppos[0]--;
        Exodus.c   300        Pvel[0] -= Acc;
    00000296 65E3                   MOV         R14,R5
    00000298 60C2                   MOV.L       @R12,R0
    0000029A D27A                   MOV.L       L624+44,R2 ; __subs
    0000029C 420B                   JSR         @R2
    0000029E 6152                   MOV.L       @R5,R1
    000002A0 2502                   MOV.L       R0,@R5
    000002A2 D379                   MOV.L       L624+48,R3 ; __negs
    000002A4 430B                   JSR         @R3
    000002A6 60D2                   MOV.L       @R13,R0
    000002A8 D278                   MOV.L       L624+52,R2 ; __lts
    000002AA 6403                   MOV         R0,R4
    000002AC 420B                   JSR         @R2
    000002AE 6152                   MOV.L       @R5,R1
    000002B0 8800                   CMP/EQ      #0,R0
    000002B2 891F                   BT          L547
        Exodus.c   301        if(Pvel[0]<(-VelMax)){
        Exodus.c   302          Pvel[0] = (-VelMax);
    000002B4 A01E                   BRA         L547
    000002B6 2E42                   MOV.L       R4,@R14
    000002B8              L545:                             
        Exodus.c   303        }
        Exodus.c   304        // Pvel[0] = Pvel[0]<(-VelMax)? Pvel[0] : -VelMax;
        Exodus.c   305    
        Exodus.c   306      }else if(KeyDown(27)){//right
    000002B8 4A0B                   JSR         @R10
    000002BA E41B                   MOV         #27,R4
    000002BC 2008                   TST         R0,R0
    000002BE 8911                   BT          L548
        Exodus.c   307        //Ppos[0]++;
        Exodus.c   308        Pvel[0] += Acc;
    000002C0 60C2                   MOV.L       @R12,R0
    000002C2 64E3                   MOV         R14,R4
    000002C4 D372                   MOV.L       L624+56,R3 ; __adds
    000002C6 430B                   JSR         @R3
    000002C8 6142                   MOV.L       @R4,R1
        Exodus.c   309        Pvel[0] = (Pvel[0]>VelMax) ? VelMax : Pvel[0];
    000002CA 6503                   MOV         R0,R5
    000002CC D371                   MOV.L       L624+60,R3 ; __gts
    000002CE 6103                   MOV         R0,R1
    000002D0 2402                   MOV.L       R0,@R4
    000002D2 430B                   JSR         @R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE   19


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000002D4 60D2                   MOV.L       @R13,R0
    000002D6 8800                   CMP/EQ      #0,R0
    000002D8 8901                   BT          L549
    000002DA A001                   BRA         L550
    000002DC 62D2                   MOV.L       @R13,R2
    000002DE              L549:                             
    000002DE 6253                   MOV         R5,R2
    000002E0              L550:                             
    000002E0 A008                   BRA         L547
    000002E2 2422                   MOV.L       R2,@R4
    000002E4              L548:                             
        Exodus.c   310      }else if(onGround){
    000002E4 61B2                   MOV.L       @R11,R1
    000002E6 2118                   TST         R1,R1
    000002E8 8904                   BT          L547
        Exodus.c   311        Pvel[0] *= 0.4f;
    000002EA D064                   MOV.L       L624+36,R0 ; H'3ECCCCCD
    000002EC D36A                   MOV.L       L624+64,R3 ; __muls
    000002EE 430B                   JSR         @R3
    000002F0 61E2                   MOV.L       @R14,R1
    000002F2 2E02                   MOV.L       R0,@R14
    000002F4              L547:                             
        Exodus.c   312      }
        Exodus.c   313      if(KeyDown(69)){//alpha (a -jump) 77
    000002F4 4A0B                   JSR         @R10
    000002F6 E445                   MOV         #69,R4
    000002F8 2008                   TST         R0,R0
    000002FA 892D                   BT          L553
        Exodus.c   314        if(onGround && !jumpPressed){
    000002FC D567                   MOV.L       L624+68,R5 ; _jumpCounter
    000002FE 63B2                   MOV.L       @R11,R3
    00000300 2338                   TST         R3,R3
    00000302 8907                   BT          L554
    00000304 D266                   MOV.L       L624+72,R2 ; _jumpPressed
    00000306 6320                   MOV.B       @R2,R3
    00000308 2338                   TST         R3,R3
    0000030A 8B03                   BF          L554
        Exodus.c   315          jumpCounter = 6;
    0000030C E306                   MOV         #6,R3
        Exodus.c   316          onGround = 0;
    0000030E E200                   MOV         #0,R2
    00000310 2532                   MOV.L       R3,@R5
    00000312 2B22                   MOV.L       R2,@R11
    00000314              L554:                             
    00000314 6352                   MOV.L       @R5,R3
    00000316 2338                   TST         R3,R3
    00000318 8D15                   BT/S        L555
    0000031A 64E3                   MOV         R14,R4
        Exodus.c   317        }
        Exodus.c   318        if(jumpCounter){
        Exodus.c   319          if(Pvel[0] > 14){
    0000031C D061                   MOV.L       L624+76,R0 ; H'41600000
    0000031E D35D                   MOV.L       L624+60,R3 ; __gts
    00000320 430B                   JSR         @R3
    00000322 6142                   MOV.L       @R4,R1
    00000324 8800                   CMP/EQ      #0,R0
    00000326 8905                   BT          L556




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE   20


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

        Exodus.c   320            Pvel[1] -= 7.0f;
    00000328 D05F                   MOV.L       L624+80,R0 ; H'40E00000
    0000032A D256                   MOV.L       L624+44,R2 ; __subs
    0000032C 420B                   JSR         @R2
    0000032E 5141                   MOV.L       @(4,R4),R1
    00000330 A004                   BRA         L618
    00000332 0009                   NOP
    00000334              L556:                             
        Exodus.c   321          }else{
        Exodus.c   322            Pvel[1] -= 6.5f;
    00000334 D05D                   MOV.L       L624+84,R0 ; H'40D00000
    00000336 D353                   MOV.L       L624+44,R3 ; __subs
    00000338 430B                   JSR         @R3
    0000033A 5141                   MOV.L       @(4,R4),R1
    0000033C              L618:                             
    0000033C 1401                   MOV.L       R0,@(4,R4)
        Exodus.c   323          }
        Exodus.c   324          jumpCounter--;
    0000033E 6252                   MOV.L       @R5,R2
    00000340 72FF                   ADD         #-1,R2
    00000342 A005                   BRA         L558
    00000344 2522                   MOV.L       R2,@R5
    00000346              L555:                             
        Exodus.c   325        }else{
        Exodus.c   326          Pvel[1] -= 1;
    00000346 D05A                   MOV.L       L624+88,R0 ; H'3F800000
    00000348 D34E                   MOV.L       L624+44,R3 ; __subs
    0000034A 430B                   JSR         @R3
    0000034C 5141                   MOV.L       @(4,R4),R1
    0000034E 1401                   MOV.L       R0,@(4,R4)
    00000350              L558:                             
        Exodus.c   327        }
        Exodus.c   328        jumpPressed = 1;
    00000350 D153                   MOV.L       L624+72,R1 ; _jumpPressed
    00000352 E201                   MOV         #1,R2
    00000354 A003                   BRA         L559
    00000356 2120                   MOV.B       R2,@R1
    00000358              L553:                             
        Exodus.c   329      }else{
        Exodus.c   330        jumpPressed = 0;
    00000358 D351                   MOV.L       L624+72,R3 ; _jumpPressed
    0000035A E000                   MOV         #0,R0
    0000035C 2300                   MOV.B       R0,@R3
    0000035E              L559:                             
        Exodus.c   331      }
        Exodus.c   332    
        Exodus.c   333    
        Exodus.c   334    
        Exodus.c   335      // if(KeyDown(35)){
        Exodus.c   336      //   Ppos[1] = 450;
        Exodus.c   337      // }
        Exodus.c   338    
        Exodus.c   339    
        Exodus.c   340      // "a", "b", "start" and "select" buttons?
        Exodus.c   341    
        Exodus.c   342    }
    0000035E 4F26                   LDS.L       @R15+,PR




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE   21


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000360 6AF6                   MOV.L       @R15+,R10
    00000362 6BF6                   MOV.L       @R15+,R11
    00000364 6CF6                   MOV.L       @R15+,R12
    00000366 6DF6                   MOV.L       @R15+,R13
    00000368 000B                   RTS
    0000036A 6EF6                   MOV.L       @R15+,R14
        Exodus.c   343    
        Exodus.c   344    void movePlayer(){
    0000036C              _movePlayer:                     ; function: movePlayer
                                                           ; frame size=48
                                                           ; used runtime library name:
                                                           ; __adds, __addd, __muls, __stod, __dtos, __stou, __utos, __lts
    0000036C 2FE6                   MOV.L       R14,@-R15
    0000036E 2FD6                   MOV.L       R13,@-R15
    00000370 2FC6                   MOV.L       R12,@-R15
    00000372 2FB6                   MOV.L       R11,@-R15
    00000374 4F22                   STS.L       PR,@-R15
    00000376 EB0C                   MOV         #12,R11
    00000378 DC41                   MOV.L       L624+40,R12; _Pvel
    0000037A DD4E                   MOV.L       L624+92,R13; _level
    0000037C DE4E                   MOV.L       L624+96,R14; _Ppos
        Exodus.c   345      unsigned int constant;
        Exodus.c   346    
        Exodus.c   347    
        Exodus.c   348      //...*
        Exodus.c   349      //....
        Exodus.c   350      //....
        Exodus.c   351      //....
        Exodus.c   352      //collides based on this pixel
        Exodus.c   353    
        Exodus.c   354    
        Exodus.c   355      //Collision
        Exodus.c   356    
        Exodus.c   357    
        Exodus.c   358      // y collision
        Exodus.c   359      if(Pvel[1]<0){//if(isNegative)
    0000037E D53C                   MOV.L       L624+24,R5 ; _onGround
    00000380 51C1                   MOV.L       @(4,R12),R1
    00000382 D342                   MOV.L       L624+52,R3 ; __lts
    00000384 430B                   JSR         @R3
    00000386 E000                   MOV         #0,R0
    00000388 8800                   CMP/EQ      #0,R0
    0000038A 892B                   BT          L560
        Exodus.c   360        //moving up
        Exodus.c   361        constant = (0x0C<<(((Ppos[1]-8)>>6)<<2));
    0000038C 52E1                   MOV.L       @(4,R14),R2
    0000038E 64B3                   MOV         R11,R4
        Exodus.c   362        if( ((*(level+((Ppos[0]-64)>>6))) & constant) | ((*(level+((Ppos[0]-8)>>6))) & constant) ){
    00000390 66E2                   MOV.L       @R14,R6
    00000392 72F8                   ADD         #-8,R2
    00000394 4209                   SHLR2       R2
    00000396 4209                   SHLR2       R2
    00000398 4209                   SHLR2       R2
    0000039A 4208                   SHLL2       R2
    0000039C 442C                   SHAD        R2,R4
    0000039E 6063                   MOV         R6,R0
    000003A0 62D2                   MOV.L       @R13,R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE   22


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000003A2 70C0                   ADD         #-64,R0
    000003A4 4009                   SHLR2       R0
    000003A6 4009                   SHLR2       R0
    000003A8 4009                   SHLR2       R0
    000003AA 4008                   SHLL2       R0
    000003AC 032E                   MOV.L       @(R0,R2),R3
    000003AE 6123                   MOV         R2,R1
    000003B0 2349                   AND         R4,R3
    000003B2 6063                   MOV         R6,R0
    000003B4 70F8                   ADD         #-8,R0
    000003B6 4009                   SHLR2       R0
    000003B8 4009                   SHLR2       R0
    000003BA 4009                   SHLR2       R0
    000003BC 4008                   SHLL2       R0
    000003BE 021E                   MOV.L       @(R0,R1),R2
    000003C0 2249                   AND         R4,R2
    000003C2 232B                   OR          R2,R3
    000003C4 2338                   TST         R3,R3
    000003C6 893B                   BT          L503
        Exodus.c   363          //check for hittable blocks?
        Exodus.c   364          // if((*(level+((Ppos[0]-32)>>6))) == (0x01<<(((Ppos[1]-8)>>6)<<1))){
        Exodus.c   365          //   PlotPixel(1, 1, buffer, 1);
        Exodus.c   366          // }
        Exodus.c   367          Pvel[1] = 0;
    000003C8 E200                   MOV         #0,R2
        Exodus.c   368          Ppos[1] = ((Ppos[1]+32)>>6)<<6;
    000003CA 64E3                   MOV         R14,R4
    000003CC 1C21                   MOV.L       R2,@(4,R12)
    000003CE 7404                   ADD         #4,R4
    000003D0 6342                   MOV.L       @R4,R3
    000003D2 7320                   ADD         #32,R3
    000003D4 4309                   SHLR2       R3
    000003D6 4309                   SHLR2       R3
    000003D8 4309                   SHLR2       R3
    000003DA 4308                   SHLL2       R3
    000003DC 4308                   SHLL2       R3
    000003DE 4308                   SHLL2       R3
    000003E0 A030                   BRA         L563
    000003E2 2432                   MOV.L       R3,@R4
    000003E4              L560:                             
        Exodus.c   369        }else{
        Exodus.c   370          onGround = 0;
        Exodus.c   371        }
        Exodus.c   372      }else{
        Exodus.c   373        //moving down
        Exodus.c   374        constant = 0x0C<<(((Ppos[1]+64)>>6)<<2);
    000003E4 52E1                   MOV.L       @(4,R14),R2
    000003E6 64B3                   MOV         R11,R4
        Exodus.c   375        if( ((*(level+((Ppos[0]-64)>>6))) & constant ) | ((*(level+((Ppos[0]-8)>>6))) & constant ) ){
    000003E8 66E2                   MOV.L       @R14,R6
    000003EA 7240                   ADD         #64,R2
    000003EC 4209                   SHLR2       R2
    000003EE 4209                   SHLR2       R2
    000003F0 4209                   SHLR2       R2
    000003F2 4208                   SHLL2       R2
    000003F4 442C                   SHAD        R2,R4
    000003F6 6063                   MOV         R6,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE   23


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000003F8 62D2                   MOV.L       @R13,R2
    000003FA 70C0                   ADD         #-64,R0
    000003FC 4009                   SHLR2       R0
    000003FE 4009                   SHLR2       R0
    00000400 4009                   SHLR2       R0
    00000402 4008                   SHLL2       R0
    00000404 032E                   MOV.L       @(R0,R2),R3
    00000406 6123                   MOV         R2,R1
    00000408 2349                   AND         R4,R3
    0000040A 6063                   MOV         R6,R0
    0000040C 70F8                   ADD         #-8,R0
    0000040E 4009                   SHLR2       R0
    00000410 4009                   SHLR2       R0
    00000412 4009                   SHLR2       R0
    00000414 4008                   SHLL2       R0
    00000416 021E                   MOV.L       @(R0,R1),R2
    00000418 2249                   AND         R4,R2
    0000041A 232B                   OR          R2,R3
    0000041C 2338                   TST         R3,R3
    0000041E 890F                   BT          L503
        Exodus.c   376          Pvel[1] = 0;
    00000420 E200                   MOV         #0,R2
        Exodus.c   377          Ppos[1] = ((Ppos[1]+32)>>6)<<6;
    00000422 64E3                   MOV         R14,R4
    00000424 1C21                   MOV.L       R2,@(4,R12)
        Exodus.c   378          onGround = 1;
    00000426 E101                   MOV         #1,R1
    00000428 7404                   ADD         #4,R4
    0000042A 6342                   MOV.L       @R4,R3
    0000042C 7320                   ADD         #32,R3
    0000042E 4309                   SHLR2       R3
    00000430 4309                   SHLR2       R3
    00000432 4309                   SHLR2       R3
    00000434 4308                   SHLL2       R3
    00000436 4308                   SHLL2       R3
    00000438 4308                   SHLL2       R3
    0000043A 2432                   MOV.L       R3,@R4
    0000043C A002                   BRA         L563
    0000043E 2512                   MOV.L       R1,@R5
    00000440              L503:
        Exodus.c   379        }else{
        Exodus.c   380          onGround = 0;
    00000440 E200                   MOV         #0,R2
    00000442 2522                   MOV.L       R2,@R5
    00000444              L563:                             
    00000444 D311                   MOV.L       L624+52,R3 ; __lts
    00000446 65C3                   MOV         R12,R5
    00000448 6152                   MOV.L       @R5,R1
    0000044A 430B                   JSR         @R3
    0000044C E000                   MOV         #0,R0
    0000044E 8800                   CMP/EQ      #0,R0
    00000450 8934                   BT          L566
        Exodus.c   381        }
        Exodus.c   382      }
        Exodus.c   383    
        Exodus.c   384    
        Exodus.c   385      // x collision




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE   24


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

        Exodus.c   386      if(Pvel[0]<0){//if(isNegative)
        Exodus.c   387        //moving left
        Exodus.c   388        constant = (*(level+((Ppos[0]-72)>>6)));
    00000452 60E2                   MOV.L       @R14,R0
    00000454 A033                   BRA         L619
    00000456 70B8                   ADD         #-72,R0
    00000458              L624:                             
    00000458 <00000000>             .DATA.L     _DrawAll
    0000045C <00000000>             .DATA.L     _isTimerFinished
    00000460 <00000000>             .DATA.L     _KeyDown
    00000464 <00000000>             .DATA.L     _VelMax
    00000468 41800000               .DATA.L     H'41800000
    0000046C 41300000               .DATA.L     H'41300000
    00000470 <00000000>             .DATA.L     _onGround
    00000474 <00000000>             .DATA.L     _Acc
    00000478 3FC00000               .DATA.L     H'3FC00000
    0000047C 3ECCCCCD               .DATA.L     H'3ECCCCCD
    00000480 <00000000>             .DATA.L     _Pvel
    00000484 <00000000>             .DATA.L     __subs
    00000488 <00000000>             .DATA.L     __negs
    0000048C <00000000>             .DATA.L     __lts
    00000490 <00000000>             .DATA.L     __adds
    00000494 <00000000>             .DATA.L     __gts
    00000498 <00000000>             .DATA.L     __muls
    0000049C <00000000>             .DATA.L     _jumpCounter
    000004A0 <00000000>             .DATA.L     _jumpPressed
    000004A4 41600000               .DATA.L     H'41600000
    000004A8 40E00000               .DATA.L     H'40E00000
    000004AC 40D00000               .DATA.L     H'40D00000
    000004B0 3F800000               .DATA.L     H'3F800000
    000004B4 <00000000>             .DATA.L     _level
    000004B8 <00000000>             .DATA.L     _Ppos
    000004BC              L566:                             
        Exodus.c   389      }else{
        Exodus.c   390        //moving right
        Exodus.c   391        constant = (*(level+((Ppos[0])>>6)));
    000004BC 60E2                   MOV.L       @R14,R0
    000004BE              L619:                             
    000004BE 4009                   SHLR2       R0
    000004C0 62D2                   MOV.L       @R13,R2
        Exodus.c   392      }
        Exodus.c   393      if( ( constant & (0x0C<<(((Ppos[1])>>6)<<2)) ) |  (constant & (0x0C<<(((Ppos[1]+56)>>6)<<2)) ) ) {//
    000004C2 61B3                   MOV         R11,R1
    000004C4 56E1                   MOV.L       @(4,R14),R6
    000004C6 4009                   SHLR2       R0
    000004C8 4009                   SHLR2       R0
    000004CA 4008                   SHLL2       R0
    000004CC 042E                   MOV.L       @(R0,R2),R4
    000004CE 6363                   MOV         R6,R3
    000004D0 7338                   ADD         #56,R3
    000004D2 4309                   SHLR2       R3
    000004D4 4309                   SHLR2       R3
    000004D6 4309                   SHLR2       R3
    000004D8 4308                   SHLL2       R3
    000004DA 413C                   SHAD        R3,R1
    000004DC 2149                   AND         R4,R1
    000004DE 6363                   MOV         R6,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE   25


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000004E0 4309                   SHLR2       R3
    000004E2 4309                   SHLR2       R3
    000004E4 4309                   SHLR2       R3
    000004E6 4308                   SHLL2       R3
    000004E8 60B3                   MOV         R11,R0
    000004EA 403C                   SHAD        R3,R0
    000004EC 2049                   AND         R4,R0
    000004EE 210B                   OR          R0,R1
    000004F0 2118                   TST         R1,R1
    000004F2 8D0C                   BT/S        L568
        Exodus.c   394        Pvel[0] = 0;
        Exodus.c   395        Ppos[0] = ((Ppos[0]+32)>>6)<<6;
        Exodus.c   396      }
        Exodus.c   397    
        Exodus.c   398    
        Exodus.c   399    
        Exodus.c   400      //PlotPixel(((Ppos[0]-32)>>3)-levelX, (Ppos[1]-8)>>3, &buffer, 1);
        Exodus.c   401      //
        Exodus.c   402      // if( (*(level+((Ppos[0]-72)>>6))) & (0x03<<(((Ppos[1])>>6)<<1)) ){//
        Exodus.c   403      //   //its colliding?
        Exodus.c   404      //   PlotPixel(1, 1, buffer, 1);
        Exodus.c   405      // }
        Exodus.c   406    
        Exodus.c   407    
        Exodus.c   408    
        Exodus.c   409      Ppos[0] += Pvel[0];
    000004F4 66C3                   MOV         R12,R6
    000004F6 E200                   MOV         #0,R2
    000004F8 2522                   MOV.L       R2,@R5
    000004FA 64E3                   MOV         R14,R4
    000004FC 6342                   MOV.L       @R4,R3
    000004FE 7320                   ADD         #32,R3
    00000500 4309                   SHLR2       R3
    00000502 4309                   SHLR2       R3
    00000504 4309                   SHLR2       R3
    00000506 4308                   SHLL2       R3
    00000508 4308                   SHLL2       R3
    0000050A 4308                   SHLL2       R3
    0000050C 2432                   MOV.L       R3,@R4
    0000050E              L568:                             
    0000050E D138                   MOV.L       L625+4,R1  ; __utos
    00000510 410B                   JSR         @R1
    00000512 60E2                   MOV.L       @R14,R0
    00000514 D337                   MOV.L       L625+8,R3  ; __adds
    00000516 430B                   JSR         @R3
    00000518 6162                   MOV.L       @R6,R1
    0000051A D137                   MOV.L       L625+12,R1 ; __stou
    0000051C 410B                   JSR         @R1
    0000051E 0009                   NOP
    00000520 2E02                   MOV.L       R0,@R14
        Exodus.c   410      Ppos[1] += Pvel[1];
    00000522 65E3                   MOV         R14,R5
    00000524 D132                   MOV.L       L625+4,R1  ; __utos
    00000526 6463                   MOV         R6,R4
    00000528 7504                   ADD         #4,R5
    0000052A 7404                   ADD         #4,R4
    0000052C 410B                   JSR         @R1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE   26


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000052E 6052                   MOV.L       @R5,R0
    00000530 D230                   MOV.L       L625+8,R2  ; __adds
    00000532 420B                   JSR         @R2
    00000534 6142                   MOV.L       @R4,R1
    00000536 D130                   MOV.L       L625+12,R1 ; __stou
    00000538 410B                   JSR         @R1
    0000053A 0009                   NOP
    0000053C 2502                   MOV.L       R0,@R5
        Exodus.c   411    
        Exodus.c   412      // if(onGround){
        Exodus.c   413      //   Pvel[0] *= 0.75f;
        Exodus.c   414      //   Pvel[1] *= 0.75f;
        Exodus.c   415      // }else{
        Exodus.c   416      Pvel[0] *= 0.98f;
    0000053E D02F                   MOV.L       L625+16,R0 ; H'3F7AE148
    00000540 D32F                   MOV.L       L625+20,R3 ; __muls
    00000542 430B                   JSR         @R3
    00000544 6162                   MOV.L       @R6,R1
    00000546 2602                   MOV.L       R0,@R6
        Exodus.c   417      Pvel[1] *= 0.98f;
    00000548 D02C                   MOV.L       L625+16,R0 ; H'3F7AE148
    0000054A D22D                   MOV.L       L625+20,R2 ; __muls
    0000054C 420B                   JSR         @R2
    0000054E 6142                   MOV.L       @R4,R1
    00000550 2402                   MOV.L       R0,@R4
        Exodus.c   418      // }
        Exodus.c   419    
        Exodus.c   420      Pvel[1] += 2.5;//gravity
    00000552 E300                   MOV         #0,R3
    00000554 D22C                   MOV.L       L625+28,R2 ; __stod
    00000556 7FF8                   ADD         #-8,R15
    00000558 2F36                   MOV.L       R3,@-R15
    0000055A D32A                   MOV.L       L625+24,R3 ; H'40040000
    0000055C 2F36                   MOV.L       R3,@-R15
    0000055E 7FF8                   ADD         #-8,R15
    00000560 6042                   MOV.L       @R4,R0
    00000562 420B                   JSR         @R2
    00000564 2FF6                   MOV.L       R15,@-R15
    00000566 62F3                   MOV         R15,R2
    00000568 7210                   ADD         #16,R2
    0000056A 2F26                   MOV.L       R2,@-R15
    0000056C D227                   MOV.L       L625+32,R2 ; __addd
    0000056E 420B                   JSR         @R2
    00000570 0009                   NOP
    00000572 D227                   MOV.L       L625+36,R2 ; __dtos
    00000574 420B                   JSR         @R2
    00000576 0009                   NOP
    00000578 2402                   MOV.L       R0,@R4
        Exodus.c   421    
        Exodus.c   422    
        Exodus.c   423      //check if on screen
        Exodus.c   424      if(Ppos[1]>480 && Ppos[1]<0xEfff){//448
    0000057A 6452                   MOV.L       @R5,R4
    0000057C 9336                   MOV.W       L625,R3    ; H'01E0
    0000057E 3436                   CMP/HI      R3,R4
    00000580 8B25                   BF          L569
    00000582 D124                   MOV.L       L625+40,R1 ; H'0000EFFF




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE   27


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000584 3412                   CMP/HS      R1,R4
    00000586 8922                   BT          L569
        Exodus.c   425        if( (*(level+((Ppos[0]-8)>>6)) & 0xc000 ) | (*(level+((Ppos[0]-64)>>6)) & 0xc000 ) ){
    00000588 D523                   MOV.L       L625+44,R5 ; H'0000C000
    0000058A 64E2                   MOV.L       @R14,R4
    0000058C 62D2                   MOV.L       @R13,R2
    0000058E 6043                   MOV         R4,R0
    00000590 70F8                   ADD         #-8,R0
    00000592 4009                   SHLR2       R0
    00000594 4009                   SHLR2       R0
    00000596 4009                   SHLR2       R0
    00000598 4008                   SHLL2       R0
    0000059A 6123                   MOV         R2,R1
    0000059C 032E                   MOV.L       @(R0,R2),R3
    0000059E 6043                   MOV         R4,R0
    000005A0 2359                   AND         R5,R3
    000005A2 70C0                   ADD         #-64,R0
    000005A4 4009                   SHLR2       R0
    000005A6 4009                   SHLR2       R0
    000005A8 4009                   SHLR2       R0
    000005AA 4008                   SHLL2       R0
    000005AC 021E                   MOV.L       @(R0,R1),R2
    000005AE 2259                   AND         R5,R2
    000005B0 232B                   OR          R2,R3
    000005B2 2338                   TST         R3,R3
    000005B4 8904                   BT          L570
        Exodus.c   426          //there is a tile on the bottom row
        Exodus.c   427          Pvel[1] = 0;
    000005B6 E200                   MOV         #0,R2
        Exodus.c   428          Ppos[1] = 384;
    000005B8 9319                   MOV.W       L625+2,R3  ; H'0180
    000005BA 1C21                   MOV.L       R2,@(4,R12)
    000005BC A007                   BRA         L569
    000005BE 1E31                   MOV.L       R3,@(4,R14)
    000005C0              L570:                             
        Exodus.c   429        }else{
        Exodus.c   430          reset(0);
    000005C0 4F26                   LDS.L       @R15+,PR
    000005C2 E400                   MOV         #0,R4
    000005C4 6BF6                   MOV.L       @R15+,R11
    000005C6 6CF6                   MOV.L       @R15+,R12
    000005C8 6DF6                   MOV.L       @R15+,R13
    000005CA A17F                   BRA         _reset
    000005CC 6EF6                   MOV.L       @R15+,R14
    000005CE              L569:                             
    000005CE D413                   MOV.L       L625+48,R4 ; _levelX
    000005D0 62E2                   MOV.L       @R14,R2
    000005D2 6542                   MOV.L       @R4,R5
    000005D4 4209                   SHLR2       R2
    000005D6 4201                   SHLR        R2
    000005D8 6153                   MOV         R5,R1
    000005DA 7150                   ADD         #80,R1
    000005DC 3216                   CMP/HI      R1,R2
    000005DE 8B1F                   BF          L573
        Exodus.c   431          return;
        Exodus.c   432        }
        Exodus.c   433      }




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE   28


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

        Exodus.c   434    
        Exodus.c   435    
        Exodus.c   436    
        Exodus.c   437      //move the screen when the player is near the edges, and not in the middle
        Exodus.c   438      if(((Ppos[0])>>3) > (levelX+(10<<3))){
        Exodus.c   439        levelX = (Ppos[0]>>3) - (10<<3);
    000005E0 62E2                   MOV.L       @R14,R2
    000005E2 4209                   SHLR2       R2
    000005E4 4201                   SHLR        R2
    000005E6 72B0                   ADD         #-80,R2
    000005E8 A02B                   BRA         L574
    000005EA 2422                   MOV.L       R2,@R4
    000005EC              L625:                             
    000005EC 01E0                   .DATA.W     H'01E0
    000005EE 0180                   .DATA.W     H'0180
    000005F0 <00000000>             .DATA.L     __utos
    000005F4 <00000000>             .DATA.L     __adds
    000005F8 <00000000>             .DATA.L     __stou
    000005FC 3F7AE148               .DATA.L     H'3F7AE148
    00000600 <00000000>             .DATA.L     __muls
    00000604 40040000               .DATA.L     H'40040000
    00000608 <00000000>             .DATA.L     __stod
    0000060C <00000000>             .DATA.L     __addd
    00000610 <00000000>             .DATA.L     __dtos
    00000614 0000EFFF               .DATA.L     H'0000EFFF
    00000618 0000C000               .DATA.L     H'0000C000
    0000061C <00000000>             .DATA.L     _levelX
    00000620              L573:                             
        Exodus.c   440      }else
        Exodus.c   441      if((Ppos[0]>>3) < (levelX+(6<<3))){
    00000620 63E2                   MOV.L       @R14,R3
    00000622 7530                   ADD         #48,R5
    00000624 4309                   SHLR2       R3
    00000626 4301                   SHLR        R3
    00000628 3352                   CMP/HS      R5,R3
    0000062A 890A                   BT          L574
        Exodus.c   442        levelX = (Ppos[0]>>3)-(6<<3);
    0000062C 62E2                   MOV.L       @R14,R2
    0000062E 4209                   SHLR2       R2
        Exodus.c   443        if(levelX &0xF000){levelX = 0;}//don't move past the start
    00000630 D335                   MOV.L       L626+4,R3  ; H'0000F000
    00000632 4201                   SHLR        R2
    00000634 72D0                   ADD         #-48,R2
    00000636 6123                   MOV         R2,R1
    00000638 2422                   MOV.L       R2,@R4
    0000063A 2138                   TST         R3,R1
    0000063C 8901                   BT          L574
    0000063E E000                   MOV         #0,R0
    00000640 2402                   MOV.L       R0,@R4
    00000642              L574:                             
    00000642 D332                   MOV.L       L626+8,R3  ; H'00000018+_currentLevel
    00000644 925E                   MOV.W       L626,R2    ; H'0080
    00000646 6532                   MOV.L       @R3,R5
    00000648 6142                   MOV.L       @R4,R1
    0000064A 312C                   ADD         R2,R1
    0000064C 3156                   CMP/HI      R5,R1
    0000064E 8B01                   BF          L572




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE   29


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

        Exodus.c   444      }
        Exodus.c   445      if(levelX+128 > (currentLevel.lengthOfLevel) ){levelX = (currentLevel.lengthOfLevel)-128;}//don't move p
                         +ast the end of the level (128 for the x dimension of the screen in pixels)
    00000650 7580                   ADD         #-128,R5
    00000652 2452                   MOV.L       R5,@R4
        Exodus.c   446    
        Exodus.c   447    
        Exodus.c   448    }
    00000654              L572:                             
    00000654 4F26                   LDS.L       @R15+,PR
    00000656 6BF6                   MOV.L       @R15+,R11
    00000658 6CF6                   MOV.L       @R15+,R12
    0000065A 6DF6                   MOV.L       @R15+,R13
    0000065C 000B                   RTS
    0000065E 6EF6                   MOV.L       @R15+,R14
        Exodus.c   449    
        Exodus.c   450    
        Exodus.c   451    
        Exodus.c   452    void drawLevel(signed int Xstart){
    00000660              _drawLevel:                      ; function: drawLevel
                                                           ; frame size=36
    00000660 2FE6                   MOV.L       R14,@-R15
        Exodus.c   453      unsigned char xInGrid; //the leftmost cell that appears on the screen
        Exodus.c   454      unsigned char pixelOffset; //for how many pixels is the first column off screen
        Exodus.c   455      unsigned char i, j;
        Exodus.c   456      unsigned int mask, tileIndex;
        Exodus.c   457    
        Exodus.c   458      xInGrid = Xstart>>3;
    00000662 6543                   MOV         R4,R5
    00000664 2FD6                   MOV.L       R13,@-R15
        Exodus.c   459      pixelOffset = Xstart%8;
    00000666 6043                   MOV         R4,R0
    00000668 2FC6                   MOV.L       R12,@-R15
    0000066A 4521                   SHAR        R5
    0000066C 2FB6                   MOV.L       R11,@-R15
    0000066E 4521                   SHAR        R5
    00000670 2FA6                   MOV.L       R10,@-R15
    00000672 4521                   SHAR        R5
    00000674 2F96                   MOV.L       R9,@-R15
    00000676 4011                   CMP/PZ      R0
    00000678 2F86                   MOV.L       R8,@-R15
    0000067A 4F22                   STS.L       PR,@-R15
    0000067C 7FFC                   ADD         #-4,R15
    0000067E 8B01                   BF          L578
    00000680 A005                   BRA         L579
    00000682 C907                   AND         #7,R0
    00000684              L578:                             
    00000684 6007                   NOT         R0,R0
    00000686 7001                   ADD         #1,R0
    00000688 C907                   AND         #7,R0
    0000068A 6007                   NOT         R0,R0
    0000068C 7001                   ADD         #1,R0
    0000068E              L579:                             
    0000068E 6803                   MOV         R0,R8
        Exodus.c   460    
        Exodus.c   461      //DrawSprite8(15*8, 1, &buffer, FLOOR_0, 0);
        Exodus.c   462    




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE   30


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

        Exodus.c   463      for(i=0; i<SCREEN_WIDTH+1; i++){//the plus one is to avoid any seams along the screen boundry
    00000690 EA00                   MOV         #0,R10
    00000692 6CA3                   MOV         R10,R12
    00000694 655C                   EXTU.B      R5,R5
    00000696 4508                   SHLL2       R5
    00000698 A023                   BRA         L580
    0000069A 2F52                   MOV.L       R5,@R15
    0000069C              L581:                             
    0000069C 63F2                   MOV.L       @R15,R3
        Exodus.c   464        mask = 0x0F;
    0000069E ED0F                   MOV         #15,R13
        Exodus.c   465        for(j=0; j<SCREEN_HEIGHT; j++){
    000006A0 6EA3                   MOV         R10,R14
    000006A2 69CC                   EXTU.B      R12,R9
    000006A4 4908                   SHLL2       R9
    000006A6 A015                   BRA         L582
    000006A8 393C                   ADD         R3,R9
    000006AA              L583:                             
        Exodus.c   466          tileIndex = ((*(level+xInGrid+i))&mask);
    000006AA D319                   MOV.L       L626+12,R3 ; _level
    000006AC 6032                   MOV.L       @R3,R0
    000006AE 0B9E                   MOV.L       @(R0,R9),R11
    000006B0 2BD9                   AND         R13,R11
        Exodus.c   467          if(tileIndex){//==1
    000006B2 2BB8                   TST         R11,R11
    000006B4 890B                   BT          L584
        Exodus.c   468            //DrawSprite8(i*8, j*8, &buffer, floorTile, 0);
        Exodus.c   469            drawTile(i, j, pixelOffset, TILE_SET[(tileIndex>>(j<<2))]);
    000006B6 61EC                   EXTU.B      R14,R1
    000006B8 D016                   MOV.L       L626+16,R0 ; _TILE_SET
    000006BA 6683                   MOV         R8,R6
    000006BC 4108                   SHLL2       R1
    000006BE 611B                   NEG         R1,R1
    000006C0 4B1D                   SHLD        R1,R11
    000006C2 67B3                   MOV         R11,R7
    000006C4 4708                   SHLL2       R7
    000006C6 65E3                   MOV         R14,R5
    000006C8 077E                   MOV.L       @(R0,R7),R7
    000006CA B029                   BSR         _drawTile
    000006CC 64C3                   MOV         R12,R4
    000006CE              L584:                             
        Exodus.c   470          }//else draw the the scene tiles
        Exodus.c   471          mask = mask<<4;
    000006CE 4D08                   SHLL2       R13
    000006D0 4D08                   SHLL2       R13
    000006D2 7E01                   ADD         #1,R14
    000006D4              L582:                             
    000006D4 D110                   MOV.L       L626+20,R1 ; _SCREEN_HEIGHT
    000006D6 63EC                   EXTU.B      R14,R3
    000006D8 6210                   MOV.B       @R1,R2
    000006DA 622C                   EXTU.B      R2,R2
    000006DC 3323                   CMP/GE      R2,R3
    000006DE 8BE4                   BF          L583
    000006E0 7C01                   ADD         #1,R12
    000006E2              L580:                             
    000006E2 62CC                   EXTU.B      R12,R2
    000006E4 D10D                   MOV.L       L626+24,R1 ; _SCREEN_WIDTH




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE   31


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000006E6 6310                   MOV.B       @R1,R3
    000006E8 633C                   EXTU.B      R3,R3
    000006EA 7301                   ADD         #1,R3
    000006EC 3233                   CMP/GE      R3,R2
    000006EE 8BD5                   BF          L581
        Exodus.c   472        }
        Exodus.c   473      }
        Exodus.c   474    
        Exodus.c   475    }
    000006F0 7F04                   ADD         #4,R15
    000006F2 4F26                   LDS.L       @R15+,PR
    000006F4 68F6                   MOV.L       @R15+,R8
    000006F6 69F6                   MOV.L       @R15+,R9
    000006F8 6AF6                   MOV.L       @R15+,R10
    000006FA 6BF6                   MOV.L       @R15+,R11
    000006FC 6CF6                   MOV.L       @R15+,R12
    000006FE 6DF6                   MOV.L       @R15+,R13
    00000700 000B                   RTS
    00000702 6EF6                   MOV.L       @R15+,R14
    00000704              L626:                             
    00000704 0080                   .DATA.W     H'0080
    00000706 0000                   .DATA.W     0
    00000708 0000F000               .DATA.L     H'0000F000
    0000070C <00000018>             .DATA.L     H'00000018+_currentLevel
    00000710 <00000000>             .DATA.L     _level
    00000714 <00000000>             .DATA.L     _TILE_SET
    00000718 <00000000>             .DATA.L     _SCREEN_HEIGHT
    0000071C <00000000>             .DATA.L     _SCREEN_WIDTH
        Exodus.c   476    
        Exodus.c   477    void drawTile(unsigned char x, unsigned char y, unsigned char pixelOffset, unsigned char *tile){//this one
                         + will overwrite the background (for the tile drawing)
    00000720              _drawTile:                       ; function: drawTile
                                                           ; frame size=36
    00000720 2FE6                   MOV.L       R14,@-R15
        Exodus.c   478      unsigned char k;
        Exodus.c   479      unsigned int current, blank;
        Exodus.c   480    
        Exodus.c   481      unsigned char *position;
        Exodus.c   482    
        Exodus.c   483      blank = ~(0x00FF<<(pixelOffset));
    00000722 666C                   EXTU.B      R6,R6
    00000724 2FD6                   MOV.L       R13,@-R15
    00000726 2FC6                   MOV.L       R12,@-R15
    00000728 2FA6                   MOV.L       R10,@-R15
        Exodus.c   484    
        Exodus.c   485      for(k=0; k<8; k++){
    0000072A EC00                   MOV         #0,R12
    0000072C 2F96                   MOV.L       R9,@-R15
    0000072E E908                   MOV         #8,R9
    00000730 2F86                   MOV.L       R8,@-R15
    00000732 E810                   MOV         #16,R8
    00000734 4F12                   STS.L       MACL,@-R15
    00000736 7FF8                   ADD         #-8,R15
    00000738 9A7D                   MOV.W       L627,R10   ; H'00FF
    0000073A 2F62                   MOV.L       R6,@R15
    0000073C 4A6C                   SHAD        R6,R10
    0000073E 6AA7                   NOT         R10,R10




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE   32


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000740 665C                   EXTU.B      R5,R6
    00000742 4608                   SHLL2       R6
    00000744 4600                   SHLL        R6
    00000746 60A3                   MOV         R10,R0
    00000748 4019                   SHLR8       R0
    0000074A 80F4                   MOV.B       R0,@(4,R15)
    0000074C              L585:                             
        Exodus.c   486        current = *(tile + k)<<(pixelOffset);
    0000074C 6E70                   MOV.B       @R7,R14
        Exodus.c   487        //*(buffer +x +(y*8+k)*SCREEN_WIDTH) = current;
        Exodus.c   488        position = (buffer +x +(y*8+k)*SCREEN_WIDTH);
    0000074E 614C                   EXTU.B      R4,R1
    00000750 D03A                   MOV.L       L627+6,R0  ; _buffer
    00000752 6D4C                   EXTU.B      R4,R13
    00000754 63F2                   MOV.L       @R15,R3
    00000756 6EEC                   EXTU.B      R14,R14
    00000758 D237                   MOV.L       L627+2,R2  ; _SCREEN_WIDTH
    0000075A 4D15                   CMP/PL      R13
    0000075C 6520                   MOV.B       @R2,R5
    0000075E 4E3D                   SHLD        R3,R14
    00000760 655C                   EXTU.B      R5,R5
    00000762 0567                   MUL.L       R6,R5
    00000764 051A                   STS         MACL,R5
    00000766 351C                   ADD         R1,R5
    00000768 8F09                   BF/S        L586
    0000076A 350C                   ADD         R0,R5
        Exodus.c   489        if(x > 0){
        Exodus.c   490          *(position -1) = (*(position -1) & (unsigned char)(blank>>8)) | (unsigned char)(current>>8);//don't 
                         +do first column
    0000076C 84F4                   MOV.B       @(4,R15),R0
    0000076E 61E3                   MOV         R14,R1
    00000770 6253                   MOV         R5,R2
    00000772 72FF                   ADD         #-1,R2
    00000774 6320                   MOV.B       @R2,R3
    00000776 4119                   SHLR8       R1
    00000778 2039                   AND         R3,R0
    0000077A 201B                   OR          R1,R0
    0000077C 2200                   MOV.B       R0,@R2
    0000077E              L586:                             
        Exodus.c   491        }
        Exodus.c   492        if(x < 16){
    0000077E 3D83                   CMP/GE      R8,R13
    00000780 8D04                   BT/S        L587
    00000782 7C01                   ADD         #1,R12
        Exodus.c   493          *position = (*position & (unsigned char)(blank)) | (unsigned char)(current); //don't do last column
    00000784 6350                   MOV.B       @R5,R3
    00000786 23A9                   AND         R10,R3
    00000788 23EB                   OR          R14,R3
    0000078A 2530                   MOV.B       R3,@R5
    0000078C              L587:                             
    0000078C 7601                   ADD         #1,R6
    0000078E 62CC                   EXTU.B      R12,R2
    00000790 3293                   CMP/GE      R9,R2
    00000792 8FDB                   BF/S        L585
    00000794 7701                   ADD         #1,R7
        Exodus.c   494        }
        Exodus.c   495      }




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE   33


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

        Exodus.c   496    
        Exodus.c   497    }
    00000796 7F08                   ADD         #8,R15
    00000798 4F16                   LDS.L       @R15+,MACL
    0000079A 68F6                   MOV.L       @R15+,R8
    0000079C 69F6                   MOV.L       @R15+,R9
    0000079E 6AF6                   MOV.L       @R15+,R10
    000007A0 6CF6                   MOV.L       @R15+,R12
    000007A2 6DF6                   MOV.L       @R15+,R13
    000007A4 000B                   RTS
    000007A6 6EF6                   MOV.L       @R15+,R14
        Exodus.c   498    
        Exodus.c   499    void drawByScreenValues(unsigned char x, unsigned char y, unsigned char *sprite){//will not overwrite back
                         +ground (for sprite drawing)
    000007A8              _drawByScreenValues:             ; function: drawByScreenValues
                                                           ; frame size=40
    000007A8 2FD6                   MOV.L       R13,@-R15
    000007AA 2FC6                   MOV.L       R12,@-R15
    000007AC 2FB6                   MOV.L       R11,@-R15
    000007AE 2FA6                   MOV.L       R10,@-R15
    000007B0 2F96                   MOV.L       R9,@-R15
    000007B2 2F86                   MOV.L       R8,@-R15
    000007B4 4F12                   STS.L       MACL,@-R15
    000007B6 7FF4                   ADD         #-12,R15
        Exodus.c   500      unsigned char k, xInGrid, pixelOffset;
        Exodus.c   501      unsigned int current;
        Exodus.c   502    
        Exodus.c   503      unsigned char *position;
        Exodus.c   504    
        Exodus.c   505      //if(x>127){return;}
        Exodus.c   506      x -= levelX;
    000007B8 D221                   MOV.L       L627+10,R2 ; _levelX
    000007BA 6322                   MOV.L       @R2,R3
    000007BC 3438                   SUB         R3,R4
        Exodus.c   507    
        Exodus.c   508      xInGrid = x>>3; //the leftmost cell that appears on the screen
    000007BE 6A4C                   EXTU.B      R4,R10
    000007C0 60A3                   MOV         R10,R0
    000007C2 4021                   SHAR        R0
    000007C4 4021                   SHAR        R0
    000007C6 4021                   SHAR        R0
    000007C8 80F4                   MOV.B       R0,@(4,R15)
        Exodus.c   509      pixelOffset = x%8;
    000007CA 60A3                   MOV         R10,R0
    000007CC 4011                   CMP/PZ      R0
    000007CE 8B01                   BF          L588
    000007D0 A005                   BRA         L589
    000007D2 C907                   AND         #7,R0
    000007D4              L588:                             
    000007D4 6007                   NOT         R0,R0
    000007D6 7001                   ADD         #1,R0
    000007D8 C907                   AND         #7,R0
    000007DA 6007                   NOT         R0,R0
    000007DC 7001                   ADD         #1,R0
    000007DE              L589:                             
        Exodus.c   510    
        Exodus.c   511      for(k=0; k<8; k++){




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE   34


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000007DE E900                   MOV         #0,R9
    000007E0 DB18                   MOV.L       L627+14,R11; _currentLevel
    000007E2 645C                   EXTU.B      R5,R4
    000007E4 DC14                   MOV.L       L627+2,R12 ; _SCREEN_WIDTH
    000007E6 ED00                   MOV         #0,R13
    000007E8 80F8                   MOV.B       R0,@(8,R15)
    000007EA E808                   MOV         #8,R8
    000007EC 6743                   MOV         R4,R7
    000007EE 3D6C                   ADD         R6,R13
    000007F0 6643                   MOV         R4,R6
    000007F2 600C                   EXTU.B      R0,R0
    000007F4 6383                   MOV         R8,R3
    000007F6 3308                   SUB         R0,R3
    000007F8 A03E                   BRA         L590
    000007FA 2F32                   MOV.L       R3,@R15
    000007FC              L591:                             
        Exodus.c   512        if(y+k>63){continue;}
    000007FC E23F                   MOV         #63,R2
    000007FE 3627                   CMP/GT      R2,R6
    00000800 8936                   BT          L593
        Exodus.c   513        //if(y-k<0){return;}//exit if drawing offscreen
        Exodus.c   514        current = *(sprite + k)<<(8-pixelOffset);
        Exodus.c   515        position = (buffer +xInGrid +(y+k)*SCREEN_WIDTH);
        Exodus.c   516        if(x > 0){
    00000802 4A15                   CMP/PL      R10
    00000804 65D0                   MOV.B       @R13,R5
    00000806 655C                   EXTU.B      R5,R5
    00000808 63F2                   MOV.L       @R15,R3
    0000080A 453D                   SHLD        R3,R5
    0000080C 64C0                   MOV.B       @R12,R4
    0000080E 644C                   EXTU.B      R4,R4
    00000810 0477                   MUL.L       R7,R4
    00000812 041A                   STS         MACL,R4
    00000814 84F4                   MOV.B       @(4,R15),R0
    00000816 600C                   EXTU.B      R0,R0
    00000818 D208                   MOV.L       L627+6,R2  ; _buffer
    0000081A 340C                   ADD         R0,R4
    0000081C 8F19                   BF/S        L594
    0000081E 342C                   ADD         R2,R4
    00000820 84B5                   MOV.B       @(5,R11),R0
    00000822 6243                   MOV         R4,R2
    00000824 2008                   TST         R0,R0
    00000826 8D0F                   BT/S        L595
    00000828 72FF                   ADD         #-1,R2
        Exodus.c   517          if(currentLevel.drawXOR){
        Exodus.c   518            *(position -1) = *(position -1) ^ (unsigned char)(current>>8);
    0000082A 6353                   MOV         R5,R3
    0000082C 6020                   MOV.B       @R2,R0
    0000082E 4319                   SHLR8       R3
    00000830 230A                   XOR         R0,R3
    00000832 A00E                   BRA         L594
    00000834 2230                   MOV.B       R3,@R2
    00000836              L627:                             
    00000836 00FF                   .DATA.W     H'00FF
    00000838 <00000000>             .DATA.L     _SCREEN_WIDTH
    0000083C <00000000>             .DATA.L     _buffer
    00000840 <00000000>             .DATA.L     _levelX




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE   35


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000844 <00000000>             .DATA.L     _currentLevel
    00000848              L595:                             
        Exodus.c   519          }else{
        Exodus.c   520            *(position -1) = *(position -1) | (unsigned char)(current>>8);//don't do first column
    00000848 6120                   MOV.B       @R2,R1
    0000084A 6053                   MOV         R5,R0
    0000084C 4019                   SHLR8       R0
    0000084E 201B                   OR          R1,R0
    00000850 2200                   MOV.B       R0,@R2
    00000852              L594:                             
        Exodus.c   521          }
        Exodus.c   522        }
        Exodus.c   523        if(x < SCREEN_WIDTH*8){
    00000852 63C0                   MOV.B       @R12,R3
    00000854 633C                   EXTU.B      R3,R3
    00000856 4308                   SHLL2       R3
    00000858 4300                   SHLL        R3
    0000085A 3A33                   CMP/GE      R3,R10
    0000085C 8908                   BT          L593
        Exodus.c   524          if(currentLevel.drawXOR){
    0000085E 84B5                   MOV.B       @(5,R11),R0
    00000860 2008                   TST         R0,R0
    00000862 8902                   BT          L598
        Exodus.c   525            *position = *position ^ (unsigned char)(current);//don't do last column
    00000864 6340                   MOV.B       @R4,R3
    00000866 A002                   BRA         L620
    00000868 253A                   XOR         R3,R5
    0000086A              L598:                             
        Exodus.c   526          }else{
        Exodus.c   527            *position = *position | (unsigned char)(current);//don't do last column
    0000086A 6340                   MOV.B       @R4,R3
    0000086C 253B                   OR          R3,R5
    0000086E              L620:                             
    0000086E 2450                   MOV.B       R5,@R4
    00000870              L593:                             
    00000870 7901                   ADD         #1,R9
    00000872 7701                   ADD         #1,R7
    00000874 7D01                   ADD         #1,R13
    00000876 7601                   ADD         #1,R6
    00000878              L590:                             
    00000878 629C                   EXTU.B      R9,R2
    0000087A 3283                   CMP/GE      R8,R2
    0000087C 8BBE                   BF          L591
        Exodus.c   528          }
        Exodus.c   529        }
        Exodus.c   530      }
        Exodus.c   531    
        Exodus.c   532    }
    0000087E 7F0C                   ADD         #12,R15
    00000880 4F16                   LDS.L       @R15+,MACL
    00000882 68F6                   MOV.L       @R15+,R8
    00000884 69F6                   MOV.L       @R15+,R9
    00000886 6AF6                   MOV.L       @R15+,R10
    00000888 6BF6                   MOV.L       @R15+,R11
    0000088A 6CF6                   MOV.L       @R15+,R12
    0000088C 000B                   RTS
    0000088E 6DF6                   MOV.L       @R15+,R13




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE   36


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

        Exodus.c   533    
        Exodus.c   534    void drawToVRAM(unsigned char bitmap[]){
    00000890              _drawToVRAM:                     ; function: drawToVRAM
                                                           ; frame size=40
                                                           ; used runtime library name:
                                                           ; __quick_odd_mvn
    00000890 4F22                   STS.L       PR,@-R15
        Exodus.c   535      GRAPHDATA picturedata;
        Exodus.c   536      DISPGRAPH pictureinfo;
        Exodus.c   537      picturedata.width = 128;
        Exodus.c   538      picturedata.height = 64;
    00000892 E240                   MOV         #64,R2
    00000894 936C                   MOV.W       L628,R3    ; H'0080
    00000896 7FDC                   ADD         #-36,R15
    00000898 65F3                   MOV         R15,R5
    0000089A 7518                   ADD         #24,R5
    0000089C 2532                   MOV.L       R3,@R5
        Exodus.c   539      picturedata.pBitmap = bitmap;
        Exodus.c   540      pictureinfo.x = 0;
        Exodus.c   541      pictureinfo.y = 0;
        Exodus.c   542      pictureinfo.GraphData = picturedata;
    0000089E 61F3                   MOV         R15,R1
    000008A0 1521                   MOV.L       R2,@(4,R5)
    000008A2 7108                   ADD         #8,R1
    000008A4 D333                   MOV.L       L628+4,R3  ; __quick_odd_mvn
    000008A6 6253                   MOV         R5,R2
    000008A8 1542                   MOV.L       R4,@(8,R5)
    000008AA E400                   MOV         #0,R4
    000008AC 2F42                   MOV.L       R4,@R15
    000008AE 1F41                   MOV.L       R4,@(4,R15)
    000008B0 430B                   JSR         @R3
    000008B2 E00C                   MOV         #12,R0
        Exodus.c   543      pictureinfo.WriteModify = IMB_WRITEMODIFY_NORMAL;
        Exodus.c   544      pictureinfo.WriteKind = IMB_WRITEKIND_OVER;
        Exodus.c   545      Bdisp_WriteGraph_VRAM(&pictureinfo);
    000008B4 D330                   MOV.L       L628+8,R3  ; _Bdisp_WriteGraph_VRAM
    000008B6 E401                   MOV         #1,R4
    000008B8 E014                   MOV         #20,R0
    000008BA 0F44                   MOV.B       R4,@(R0,R15)
    000008BC E015                   MOV         #21,R0
    000008BE 0F44                   MOV.B       R4,@(R0,R15)
    000008C0 430B                   JSR         @R3
    000008C2 64F3                   MOV         R15,R4
        Exodus.c   546      //Sleep(3000);
        Exodus.c   547    }
    000008C4 7F24                   ADD         #36,R15
    000008C6 4F26                   LDS.L       @R15+,PR
    000008C8 000B                   RTS
    000008CA 0009                   NOP
        Exodus.c   548    
        Exodus.c   549    
        Exodus.c   550    void reset(unsigned char doLoadData){
    000008CC              _reset:                          ; function: reset
                                                           ; frame size=36
                                                           ; used runtime library name:
                                                           ; __quick_odd_mvn
    000008CC 2FE6                   MOV.L       R14,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE   37


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000008CE 2FD6                   MOV.L       R13,@-R15
    000008D0 2FC6                   MOV.L       R12,@-R15
    000008D2 2FB6                   MOV.L       R11,@-R15
    000008D4 2FA6                   MOV.L       R10,@-R15
    000008D6 4F22                   STS.L       PR,@-R15
        Exodus.c   551      unsigned char membuff[7];//just the x, y coordinates so far
        Exodus.c   552      int handle = Bfile_OpenMainMemory(fileName);
    000008D8 D329                   MOV.L       L628+16,R3 ; _Bfile_OpenMainMemory
    000008DA 7FF4                   ADD         #-12,R15
    000008DC 2F40                   MOV.B       R4,@R15
    000008DE D427                   MOV.L       L628+12,R4 ; _fileName
    000008E0 430B                   JSR         @R3
    000008E2 0009                   NOP
        Exodus.c   553    
        Exodus.c   554      currentLevel = *levelList[levelPointer];
    000008E4 DA27                   MOV.L       L628+20,R10; _levelPointer
    000008E6 6C03                   MOV         R0,R12
    000008E8 DD27                   MOV.L       L628+24,R13; _currentLevel
    000008EA 62A0                   MOV.B       @R10,R2
    000008EC D027                   MOV.L       L628+28,R0 ; _levelList
    000008EE 61D3                   MOV         R13,R1
    000008F0 D320                   MOV.L       L628+4,R3  ; __quick_odd_mvn
    000008F2 622C                   EXTU.B      R2,R2
    000008F4 4208                   SHLL2       R2
    000008F6 022E                   MOV.L       @(R0,R2),R2
    000008F8 430B                   JSR         @R3
    000008FA E01C                   MOV         #28,R0
        Exodus.c   555    
        Exodus.c   556      if(doLoadData &&(handle>=0)){// if the file reading succeeds
    000008FC DB24                   MOV.L       L628+32,R11; _Ppos
    000008FE 62F0                   MOV.B       @R15,R2
    00000900 2228                   TST         R2,R2
    00000902 894F                   BT          L600
    00000904 4C11                   CMP/PZ      R12
    00000906 8B4D                   BF          L600
        Exodus.c   557        Bfile_ReadFile(handle, membuff, 7, 0);
    00000908 D222                   MOV.L       L628+36,R2 ; _Bfile_ReadFile
    0000090A 6EF3                   MOV         R15,R14
    0000090C 7E04                   ADD         #4,R14
    0000090E E700                   MOV         #0,R7
    00000910 E607                   MOV         #7,R6
    00000912 65E3                   MOV         R14,R5
    00000914 420B                   JSR         @R2
    00000916 64C3                   MOV         R12,R4
        Exodus.c   558        Bfile_CloseFile(handle);
    00000918 D31F                   MOV.L       L628+40,R3 ; _Bfile_CloseFile
    0000091A 430B                   JSR         @R3
    0000091C 64C3                   MOV         R12,R4
        Exodus.c   559        Bfile_DeleteMainMemory(fileName);
    0000091E D417                   MOV.L       L628+12,R4 ; _fileName
    00000920 D21E                   MOV.L       L628+44,R2 ; _Bfile_DeleteMainMemory
    00000922 420B                   JSR         @R2
    00000924 0009                   NOP
        Exodus.c   560        //Bfile_ReadFile(int HANDLE, void *buf, int size, int readpos);
        Exodus.c   561        //read from file
        Exodus.c   562        //memcpy( Ppos, membuff, 4 );//position
        Exodus.c   563    




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE   38


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

        Exodus.c   564        //memcpy( levelX, (membuff+4), 2 );//screen position
        Exodus.c   565        levelX = membuff[4]<<8 |membuff[5];
    00000926 84E4                   MOV.B       @(4,R14),R0
    00000928 D21D                   MOV.L       L628+48,R2 ; _levelX
    0000092A 600C                   EXTU.B      R0,R0
    0000092C 4018                   SHLL8       R0
    0000092E 6303                   MOV         R0,R3
    00000930 84E5                   MOV.B       @(5,R14),R0
    00000932 600C                   EXTU.B      R0,R0
    00000934 230B                   OR          R0,R3
    00000936 2232                   MOV.L       R3,@R2
        Exodus.c   566        Ppos[0] = membuff[0]<<8 |membuff[1];
    00000938 61E0                   MOV.B       @R14,R1
    0000093A 611C                   EXTU.B      R1,R1
    0000093C 84E1                   MOV.B       @(1,R14),R0
    0000093E 4118                   SHLL8       R1
    00000940 600C                   EXTU.B      R0,R0
    00000942 210B                   OR          R0,R1
    00000944 2B12                   MOV.L       R1,@R11
        Exodus.c   567        Ppos[1] = membuff[2]<<8 |membuff[3];
        Exodus.c   568        levelPointer = membuff[6];
        Exodus.c   569        currentLevel = *levelList[levelPointer];
    00000946 61D3                   MOV         R13,R1
    00000948 84E2                   MOV.B       @(2,R14),R0
    0000094A 600C                   EXTU.B      R0,R0
    0000094C 4018                   SHLL8       R0
    0000094E 6303                   MOV         R0,R3
    00000950 84E3                   MOV.B       @(3,R14),R0
    00000952 600C                   EXTU.B      R0,R0
    00000954 230B                   OR          R0,R3
    00000956 1B31                   MOV.L       R3,@(4,R11)
    00000958 84E6                   MOV.B       @(6,R14),R0
    0000095A 2A00                   MOV.B       R0,@R10
    0000095C 62A0                   MOV.B       @R10,R2
    0000095E 622C                   EXTU.B      R2,R2
    00000960 D00A                   MOV.L       L628+28,R0 ; _levelList
    00000962 4208                   SHLL2       R2
    00000964 022E                   MOV.L       @(R0,R2),R2
    00000966 D303                   MOV.L       L628+4,R3  ; __quick_odd_mvn
    00000968 430B                   JSR         @R3
    0000096A E01C                   MOV         #28,R0
    0000096C A021                   BRA         L601
    0000096E 0009                   NOP
    00000970              L628:                             
    00000970 0080                   .DATA.W     H'0080
    00000972 0000                   .DATA.W     0
    00000974 <00000000>             .DATA.L     __quick_odd_mvn
    00000978 <00000000>             .DATA.L     _Bdisp_WriteGraph_VRAM
    0000097C <00000000>             .DATA.L     _fileName
    00000980 <00000000>             .DATA.L     _Bfile_OpenMainMemory
    00000984 <00000000>             .DATA.L     _levelPointer
    00000988 <00000000>             .DATA.L     _currentLevel
    0000098C <00000000>             .DATA.L     _levelList
    00000990 <00000000>             .DATA.L     _Ppos
    00000994 <00000000>             .DATA.L     _Bfile_ReadFile
    00000998 <00000000>             .DATA.L     _Bfile_CloseFile
    0000099C <00000000>             .DATA.L     _Bfile_DeleteMainMemory




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE   39


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000009A0 <00000000>             .DATA.L     _levelX
    000009A4              L600:                             
        Exodus.c   570      }else{
        Exodus.c   571        Ppos[0] = currentLevel.start[0];//32*8;
    000009A4 50D3                   MOV.L       @(12,R13),R0
        Exodus.c   572        Ppos[1] = currentLevel.start[1];//x,y, measured from the top left corner, divide by 8 (or >>3) to get 
                         +the pixel position, and by 8 again to get tile value
        Exodus.c   573        levelX = 0;
    000009A6 E200                   MOV         #0,R2
    000009A8 D133                   MOV.L       L629+2,R1  ; _levelX
    000009AA 2B02                   MOV.L       R0,@R11
    000009AC 53D4                   MOV.L       @(16,R13),R3
    000009AE 1B31                   MOV.L       R3,@(4,R11)
    000009B0 2122                   MOV.L       R2,@R1
    000009B2              L601:                             
        Exodus.c   574      }
        Exodus.c   575    
        Exodus.c   576    
        Exodus.c   577      level = currentLevel.level;
    000009B2 63D2                   MOV.L       @R13,R3
    000009B4 D031                   MOV.L       L629+6,R0  ; _level
    000009B6 2032                   MOV.L       R3,@R0
        Exodus.c   578      // tileArray[0] = TILE_ER;
        Exodus.c   579      // tileArray[1] = TILE_F_IN;
        Exodus.c   580      // tileArray[2] = TILE_F;
        Exodus.c   581      // tileArray[3] = TILE_GR;
        Exodus.c   582    
        Exodus.c   583    
        Exodus.c   584    
        Exodus.c   585      Pvel[0] = 0;
    000009B8 D431                   MOV.L       L629+10,R4 ; _Pvel
    000009BA E300                   MOV         #0,R3
        Exodus.c   586      Pvel[1] = 0;//x,y, measured from the top left corner
        Exodus.c   587      Acc = 13;
    000009BC D132                   MOV.L       L629+18,R1 ; _Acc
        Exodus.c   588      VelMax = 8;
        Exodus.c   589      onGround = 0;
    000009BE E000                   MOV         #0,R0
    000009C0 2432                   MOV.L       R3,@R4
    000009C2 6233                   MOV         R3,R2
    000009C4 1431                   MOV.L       R3,@(4,R4)
    000009C6 D32F                   MOV.L       L629+14,R3 ; H'41500000
    000009C8 D230                   MOV.L       L629+22,R2 ; H'41000000
    000009CA 2132                   MOV.L       R3,@R1
    000009CC D330                   MOV.L       L629+26,R3 ; _VelMax
        Exodus.c   590      jumpCounter = 0;
    000009CE 6103                   MOV         R0,R1
    000009D0 2322                   MOV.L       R2,@R3
    000009D2 D230                   MOV.L       L629+30,R2 ; _onGround
        Exodus.c   591      Sleep(timePerFrame);
    000009D4 D331                   MOV.L       L629+38,R3 ; _timePerFrame
    000009D6 2202                   MOV.L       R0,@R2
    000009D8 D02F                   MOV.L       L629+34,R0 ; _jumpCounter
    000009DA 2012                   MOV.L       R1,@R0
    000009DC D230                   MOV.L       L629+42,R2 ; _Sleep
    000009DE 420B                   JSR         @R2
    000009E0 6432                   MOV.L       @R3,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE   40


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

        Exodus.c   592    }
    000009E2 7F0C                   ADD         #12,R15
    000009E4 4F26                   LDS.L       @R15+,PR
    000009E6 6AF6                   MOV.L       @R15+,R10
    000009E8 6BF6                   MOV.L       @R15+,R11
    000009EA 6CF6                   MOV.L       @R15+,R12
    000009EC 6DF6                   MOV.L       @R15+,R13
    000009EE 000B                   RTS
    000009F0 6EF6                   MOV.L       @R15+,R14
        Exodus.c   593    
        Exodus.c   594    unsigned char doTitleScreen(){
    000009F2              _doTitleScreen:                  ; function: doTitleScreen
                                                           ; frame size=36
                                                           ; used runtime library name:
                                                           ; __slow_mvn
    000009F2 2FE6                   MOV.L       R14,@-R15
    000009F4 2FD6                   MOV.L       R13,@-R15
    000009F6 2FC6                   MOV.L       R12,@-R15
    000009F8 2FB6                   MOV.L       R11,@-R15
    000009FA 2FA6                   MOV.L       R10,@-R15
    000009FC 2F96                   MOV.L       R9,@-R15
    000009FE 2F86                   MOV.L       R8,@-R15
    00000A00 4F22                   STS.L       PR,@-R15
    00000A02 7FFC                   ADD         #-4,R15
        Exodus.c   595      unsigned char arrow[3] = {0xE6, 0x91,0};
    00000A04 D227                   MOV.L       L629+46,R2 ; L478
    00000A06 68F3                   MOV         R15,R8
    00000A08 D327                   MOV.L       L629+50,R3 ; __slow_mvn
    00000A0A 61F3                   MOV         R15,R1
    00000A0C 430B                   JSR         @R3
    00000A0E E003                   MOV         #3,R0
        Exodus.c   596      unsigned char arrowpos = 0;
        Exodus.c   597      // unsigned char swapholder;// variable used to swap two others
        Exodus.c   598      key = 31;
    00000A10 DC26                   MOV.L       L629+54,R12; _key
    00000A12 E11F                   MOV         #31,R1
    00000A14 D922                   MOV.L       L629+42,R9 ; _Sleep
    00000A16 EA01                   MOV         #1,R10
    00000A18 DD25                   MOV.L       L629+58,R13; _PrintMini
    00000A1A EB00                   MOV         #0,R11
    00000A1C DE25                   MOV.L       L629+62,R14; _KeyDown
    00000A1E 2C12                   MOV.L       R1,@R12
        Exodus.c   599      while(1){
    00000A20              L603:                             
        Exodus.c   600        drawToVRAM(TITLE);
    00000A20 D425                   MOV.L       L629+66,R4 ; _TITLE
    00000A22 BF35                   BSR         _drawToVRAM
    00000A24 0009                   NOP
        Exodus.c   601        PrintMini(112, 58, "0.42", 2);//version
    00000A26 E702                   MOV         #2,R7
    00000A28 D624                   MOV.L       L629+70,R6 ; L481
    00000A2A E53A                   MOV         #58,R5
    00000A2C 4D0B                   JSR         @R13
    00000A2E E470                   MOV         #112,R4
        Exodus.c   602    
        Exodus.c   603        PrintMini(8,1, "Continue", 2);
    00000A30 D623                   MOV.L       L629+74,R6 ; L482




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE   41


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000A32 E501                   MOV         #1,R5
    00000A34 E702                   MOV         #2,R7
    00000A36 4D0B                   JSR         @R13
    00000A38 E408                   MOV         #8,R4
        Exodus.c   604        PrintMini(8,7, "New", 2);
    00000A3A E702                   MOV         #2,R7
    00000A3C D621                   MOV.L       L629+78,R6 ; L483
    00000A3E E507                   MOV         #7,R5
    00000A40 4D0B                   JSR         @R13
    00000A42 E408                   MOV         #8,R4
        Exodus.c   605        PrintMini(8,13, "Credits", 2);
    00000A44 D620                   MOV.L       L629+82,R6 ; L484
    00000A46 E50D                   MOV         #13,R5
    00000A48 E702                   MOV         #2,R7
    00000A4A 4D0B                   JSR         @R13
    00000A4C E408                   MOV         #8,R4
        Exodus.c   606        PrintMini(8,19, "Story", 2);
    00000A4E E702                   MOV         #2,R7
    00000A50 D61E                   MOV.L       L629+86,R6 ; L485
    00000A52 E513                   MOV         #19,R5
    00000A54 4D0B                   JSR         @R13
    00000A56 E408                   MOV         #8,R4
        Exodus.c   607        PrintMini(1,arrowpos*6+1, arrow, 2);
    00000A58 E702                   MOV         #2,R7
    00000A5A 6683                   MOV         R8,R6
    00000A5C 65BC                   EXTU.B      R11,R5
    00000A5E 6353                   MOV         R5,R3
    00000A60 4500                   SHLL        R5
    00000A62 4308                   SHLL2       R3
    00000A64 353C                   ADD         R3,R5
    00000A66 7501                   ADD         #1,R5
    00000A68 4D0B                   JSR         @R13
    00000A6A E401                   MOV         #1,R4
        Exodus.c   608    
        Exodus.c   609        Bdisp_PutDisp_DD();
    00000A6C D218                   MOV.L       L629+90,R2 ; _Bdisp_PutDisp_DD
    00000A6E 420B                   JSR         @R2
    00000A70 0009                   NOP
        Exodus.c   610        while(KeyDown(key)){Sleep(25);}
    00000A72 A031                   BRA         L604
    00000A74 0009                   NOP
    00000A76              L629:                             
    00000A76 0000                   .DATA.W     0
    00000A78 <00000000>             .DATA.L     _levelX
    00000A7C <00000000>             .DATA.L     _level
    00000A80 <00000000>             .DATA.L     _Pvel
    00000A84 41500000               .DATA.L     H'41500000
    00000A88 <00000000>             .DATA.L     _Acc
    00000A8C 41000000               .DATA.L     H'41000000
    00000A90 <00000000>             .DATA.L     _VelMax
    00000A94 <00000000>             .DATA.L     _onGround
    00000A98 <00000000>             .DATA.L     _jumpCounter
    00000A9C <00000000>             .DATA.L     _timePerFrame
    00000AA0 <00000000>             .DATA.L     _Sleep
    00000AA4 <00000000>             .DATA.L     L478
    00000AA8 <00000000>             .DATA.L     __slow_mvn
    00000AAC <00000000>             .DATA.L     _key




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE   42


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000AB0 <00000000>             .DATA.L     _PrintMini
    00000AB4 <00000000>             .DATA.L     _KeyDown
    00000AB8 <00000000>             .DATA.L     _TITLE
    00000ABC <00000000>             .DATA.L     L481
    00000AC0 <00000000>             .DATA.L     L482
    00000AC4 <00000000>             .DATA.L     L483
    00000AC8 <00000000>             .DATA.L     L484
    00000ACC <00000000>             .DATA.L     L485
    00000AD0 <00000000>             .DATA.L     _Bdisp_PutDisp_DD
    00000AD4              L605:                             
    00000AD4 490B                   JSR         @R9
    00000AD6 E419                   MOV         #25,R4
    00000AD8              L604:                             
    00000AD8 4E0B                   JSR         @R14
    00000ADA 64C2                   MOV.L       @R12,R4
    00000ADC 2008                   TST         R0,R0
    00000ADE 8BF9                   BF          L605
        Exodus.c   611        key = 1;
    00000AE0 2CA2                   MOV.L       R10,@R12
        Exodus.c   612    
        Exodus.c   613        if(KeyDown(28)){//up
    00000AE2 4E0B                   JSR         @R14
    00000AE4 E41C                   MOV         #28,R4
    00000AE6 2008                   TST         R0,R0
    00000AE8 8D06                   BT/S        L606
        Exodus.c   614          arrowpos = (arrowpos-1)&0x3;
        Exodus.c   615          key = 28;//while(KeyDown(28)){Sleep(25);}
        Exodus.c   616        }
        Exodus.c   617        if(KeyDown(37)){//down
    00000AEA E425                   MOV         #37,R4
    00000AEC 906F                   MOV.W       L630,R0    ; H'00FF
    00000AEE E31C                   MOV         #28,R3
    00000AF0 2C32                   MOV.L       R3,@R12
    00000AF2 30BC                   ADD         R11,R0
    00000AF4 EB03                   MOV         #3,R11
    00000AF6 2B09                   AND         R0,R11
    00000AF8              L606:                             
    00000AF8 4E0B                   JSR         @R14
    00000AFA 0009                   NOP
    00000AFC 2008                   TST         R0,R0
    00000AFE 8D06                   BT/S        L607
        Exodus.c   618          arrowpos = (arrowpos+1)&0x3;
        Exodus.c   619          key = 37;//while(KeyDown(37)){Sleep(25);}
        Exodus.c   620        }
        Exodus.c   621        if(KeyDown(69)){//alpha (a -jump) 69
    00000B00 E445                   MOV         #69,R4
    00000B02 60B3                   MOV         R11,R0
    00000B04 7001                   ADD         #1,R0
    00000B06 EB03                   MOV         #3,R11
    00000B08 2B09                   AND         R0,R11
    00000B0A E325                   MOV         #37,R3
    00000B0C 2C32                   MOV.L       R3,@R12
    00000B0E              L607:                             
    00000B0E 4E0B                   JSR         @R14
    00000B10 0009                   NOP
    00000B12 2008                   TST         R0,R0
    00000B14 8B15                   BF          L609




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE   43


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

        Exodus.c   622          break;
        Exodus.c   623        }
        Exodus.c   624        if(KeyDown(79)){//shift (b -run) 78
    00000B16 4E0B                   JSR         @R14
    00000B18 E44F                   MOV         #79,R4
    00000B1A 2008                   TST         R0,R0
    00000B1C 8B11                   BF          L609
        Exodus.c   625          break; // goto exitloop;
        Exodus.c   626        }
        Exodus.c   627        if(KeyDown(31)){//EXE
    00000B1E 4E0B                   JSR         @R14
    00000B20 E41F                   MOV         #31,R4
    00000B22 2008                   TST         R0,R0
    00000B24 8B0D                   BF          L609
        Exodus.c   628          break; // goto exitloop;
        Exodus.c   629        }
        Exodus.c   630        if(KeyDown(48)){//menu
    00000B26 4E0B                   JSR         @R14
    00000B28 E430                   MOV         #48,R4
    00000B2A 2008                   TST         R0,R0
    00000B2C 8B01                   BF          L631
    00000B2E AF77                   BRA         L603
    00000B30 0009                   NOP
    00000B32              L631:                             
        Exodus.c   631          GetKeyWait(KEYWAIT_HALTON_TIMEROFF, 0,0, &key);
    00000B32 E600                   MOV         #0,R6
    00000B34 D327                   MOV.L       L630+6,R3  ; _GetKeyWait
    00000B36 6563                   MOV         R6,R5
    00000B38 D725                   MOV.L       L630+2,R7  ; _key
    00000B3A 430B                   JSR         @R3
    00000B3C 6463                   MOV         R6,R4
    00000B3E AF6F                   BRA         L603
    00000B40 0009                   NOP
    00000B42              L609:                             
        Exodus.c   632        }
        Exodus.c   633        //Sleep(100);
        Exodus.c   634        // if(KeyDown(78)){//shift (b - run) 79
        Exodus.c   635        // }
        Exodus.c   636      }
        Exodus.c   637      //exitloop: ;
        Exodus.c   638    
        Exodus.c   639      // Bdisp_AllClr_DDVRAM();
        Exodus.c   640      // PrintXY(1, 5, "Houston,",0);
        Exodus.c   641      // PrintXY(1, 14, " we've had a problem.", 0);
        Exodus.c   642      // PrintMini(1,40, "(you should not see this screen)", 0);
        Exodus.c   643      // Bdisp_PutDisp_DD();
        Exodus.c   644    
        Exodus.c   645      //another switch statment based of the contents of arrowpos
        Exodus.c   646    
        Exodus.c   647      if(arrowpos == 1){
    00000B42 60BC                   EXTU.B      R11,R0
    00000B44 8801                   CMP/EQ      #1,R0
    00000B46 8F03                   BF/S        L613
        Exodus.c   648        levelPointer = 0;
        Exodus.c   649      }
        Exodus.c   650      return(arrowpos);//0 for load data (continue)
    00000B48 60B3                   MOV         R11,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE   44


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000B4A E200                   MOV         #0,R2
    00000B4C D322                   MOV.L       L630+10,R3 ; _levelPointer
    00000B4E 2320                   MOV.B       R2,@R3
    00000B50              L613:                             
        Exodus.c   651    }
    00000B50 7F04                   ADD         #4,R15
    00000B52 4F26                   LDS.L       @R15+,PR
    00000B54 68F6                   MOV.L       @R15+,R8
    00000B56 69F6                   MOV.L       @R15+,R9
    00000B58 6AF6                   MOV.L       @R15+,R10
    00000B5A 6BF6                   MOV.L       @R15+,R11
    00000B5C 6CF6                   MOV.L       @R15+,R12
    00000B5E 6DF6                   MOV.L       @R15+,R13
    00000B60 000B                   RTS
    00000B62 6EF6                   MOV.L       @R15+,R14
        Exodus.c   652    
        Exodus.c   653    void saveData(){
    00000B64              _saveData:                       ; function: saveData
                                                           ; frame size=20
                                                           ; used runtime library name:
                                                           ; __slow_mvn
    00000B64 2FE6                   MOV.L       R14,@-R15
    00000B66 2FD6                   MOV.L       R13,@-R15
    00000B68 4F22                   STS.L       PR,@-R15
    00000B6A 7FF8                   ADD         #-8,R15
        Exodus.c   654      unsigned char membuff[7] = {0,0,0,0,0,0,0};
    00000B6C D21B                   MOV.L       L630+14,R2 ; L496
    00000B6E 6EF3                   MOV         R15,R14
    00000B70 D31B                   MOV.L       L630+18,R3 ; __slow_mvn
    00000B72 61F3                   MOV         R15,R1
    00000B74 430B                   JSR         @R3
    00000B76 E007                   MOV         #7,R0
        Exodus.c   655      //char umm;
        Exodus.c   656      int handle;
        Exodus.c   657      Bfile_CreateMainMemory(fileName);
    00000B78 D41A                   MOV.L       L630+22,R4 ; _fileName
    00000B7A D11B                   MOV.L       L630+26,R1 ; _Bfile_CreateMainMemory
    00000B7C 410B                   JSR         @R1
    00000B7E 0009                   NOP
        Exodus.c   658      handle = Bfile_OpenMainMemory(fileName);
    00000B80 D418                   MOV.L       L630+22,R4 ; _fileName
    00000B82 D31A                   MOV.L       L630+30,R3 ; _Bfile_OpenMainMemory
    00000B84 430B                   JSR         @R3
    00000B86 0009                   NOP
        Exodus.c   659      //Bfile_ReadFile(handle, &umm, 0, 0);
        Exodus.c   660    
        Exodus.c   661      //memcpy( membuff, Ppos, sizeof Ppos );
        Exodus.c   662      membuff[0] = (unsigned char)(Ppos[0]>>8);
    00000B88 D419                   MOV.L       L630+34,R4 ; _Ppos
        Exodus.c   663      membuff[1] = (unsigned char)(Ppos[0]);
        Exodus.c   664      membuff[2] = (unsigned char)(Ppos[1]>>8);
        Exodus.c   665      membuff[3] = (unsigned char)(Ppos[1]);
        Exodus.c   666    
        Exodus.c   667      membuff[4] = (unsigned char)(levelX>>8);
        Exodus.c   668      membuff[5] = (unsigned char)(levelX);
        Exodus.c   669    
        Exodus.c   670      membuff[6] = (unsigned char)(levelPointer);




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE   45


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

        Exodus.c   671    
        Exodus.c   672      // memcpy( membuff, levelX, 2 );
        Exodus.c   673      // membuff[4] = levelX;
        Exodus.c   674      Bfile_WriteFile(handle, membuff, 7);
    00000B8A E607                   MOV         #7,R6
    00000B8C D312                   MOV.L       L630+10,R3 ; _levelPointer
    00000B8E 65E3                   MOV         R14,R5
    00000B90 6242                   MOV.L       @R4,R2
    00000B92 6D03                   MOV         R0,R13
    00000B94 4219                   SHLR8       R2
    00000B96 2E20                   MOV.B       R2,@R14
    00000B98 8443                   MOV.B       @(3,R4),R0
    00000B9A 7404                   ADD         #4,R4
    00000B9C D216                   MOV.L       L630+42,R2 ; _Bfile_WriteFile
    00000B9E 80E1                   MOV.B       R0,@(1,R14)
    00000BA0 6042                   MOV.L       @R4,R0
    00000BA2 4019                   SHLR8       R0
    00000BA4 80E2                   MOV.B       R0,@(2,R14)
    00000BA6 8443                   MOV.B       @(3,R4),R0
    00000BA8 D412                   MOV.L       L630+38,R4 ; _levelX
    00000BAA 80E3                   MOV.B       R0,@(3,R14)
    00000BAC 6042                   MOV.L       @R4,R0
    00000BAE 4019                   SHLR8       R0
    00000BB0 80E4                   MOV.B       R0,@(4,R14)
    00000BB2 8443                   MOV.B       @(3,R4),R0
    00000BB4 80E5                   MOV.B       R0,@(5,R14)
    00000BB6 6030                   MOV.B       @R3,R0
    00000BB8 80E6                   MOV.B       R0,@(6,R14)
    00000BBA 420B                   JSR         @R2
    00000BBC 64D3                   MOV         R13,R4
        Exodus.c   675      // Bfile_WriteFile(int HANDLE, const void *buf, int size);
        Exodus.c   676      Bfile_CloseFile(handle);
    00000BBE D30F                   MOV.L       L630+46,R3 ; _Bfile_CloseFile
    00000BC0 430B                   JSR         @R3
    00000BC2 64D3                   MOV         R13,R4
        Exodus.c   677    
        Exodus.c   678    }
    00000BC4 7F08                   ADD         #8,R15
    00000BC6 4F26                   LDS.L       @R15+,PR
    00000BC8 6DF6                   MOV.L       @R15+,R13
    00000BCA 000B                   RTS
    00000BCC 6EF6                   MOV.L       @R15+,R14
    00000BCE              L630:                             
    00000BCE 00FF                   .DATA.W     H'00FF
    00000BD0 <00000000>             .DATA.L     _key
    00000BD4 <00000000>             .DATA.L     _GetKeyWait
    00000BD8 <00000000>             .DATA.L     _levelPointer
    00000BDC <00000000>             .DATA.L     L496
    00000BE0 <00000000>             .DATA.L     __slow_mvn
    00000BE4 <00000000>             .DATA.L     _fileName
    00000BE8 <00000000>             .DATA.L     _Bfile_CreateMainMemory
    00000BEC <00000000>             .DATA.L     _Bfile_OpenMainMemory
    00000BF0 <00000000>             .DATA.L     _Ppos
    00000BF4 <00000000>             .DATA.L     _levelX
    00000BF8 <00000000>             .DATA.L     _Bfile_WriteFile
    00000BFC <00000000>             .DATA.L     _Bfile_CloseFile
        Exodus.c   679    




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE   46


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

        Exodus.c   680    
        Exodus.c   681    
        Exodus.c   682    
        Exodus.c   683    //****************************************************************************
        Exodus.c   684    //**************                                              ****************
        Exodus.c   685    //**************                 Notice!                      ****************
        Exodus.c   686    //**************                                              ****************
        Exodus.c   687    //**************  Please do not change the following source.  ****************
        Exodus.c   688    //**************                                              ****************
        Exodus.c   689    //****************************************************************************
        Exodus.c   690    
        Exodus.c   691    
        Exodus.c   692    #pragma section _BR_Size
        Exodus.c   693    unsigned long BR_Size;
        Exodus.c   694    #pragma section
        Exodus.c   695    
        Exodus.c   696    
        Exodus.c   697    #pragma section _TOP
        Exodus.c   698    
        Exodus.c   699    //****************************************************************************
        Exodus.c   700    //  InitializeSystem
        Exodus.c   701    //
        Exodus.c   702    //  param   :   isAppli   : 1 = Application / 0 = eActivity
        Exodus.c   703    //              OptionNum : Option Number (only eActivity)
        Exodus.c   704    //
        Exodus.c   705    //  retval  :   1 = No error / 0 = Error
        Exodus.c   706    //
        Exodus.c   707    //****************************************************************************
        Exodus.c   708    int InitializeSystem(int isAppli, unsigned short OptionNum)
P_T 00000000              _InitializeSystem:               ; function: InitializeSystem
                                                           ; frame size=0
        Exodus.c   709    {
        Exodus.c   710      return INIT_ADDIN_APPLICATION(isAppli, OptionNum);
    00000000 D301                   MOV.L       L632+2,R3  ; _INIT_ADDIN_APPLICATION
    00000002 432B                   JMP         @R3
    00000004 0009                   NOP
    00000006              L632:                             
    00000006 0000                   .DATA.W     0
    00000008 <00000000>             .DATA.L     _INIT_ADDIN_APPLICATION
        Exodus.c   711    }
        Exodus.c   712    
        Exodus.c   713    #pragma section
C   00000000              _TITLE:                          ; static: TITLE
    00000000 FFFFFFFFFF             .DATA.B     H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FB,H'BA,H'AA,H'AA,H'AA,H'AA,H'BB,H'BF,H'FF,
             FFFFFBBAAA +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FD,H'FF,H'FF,H'FF,H'FF,H'FF,
             AAAAAABBBF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FE,H'EA,H'EA,H'AA,H'AA,H'AA,H'EE,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'BB,H'AA,H'AA,H'AA,H'AA,H'AA,H'AB,H'BF,H'FF,
             FFFDFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'DD,H'DD,H'DD,H'DF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'DF,H'FF,H'EE,H'AA,H'AA,H'AA,H'AA,H'AA,H'AE,H'EF,H'FF,
             FFFFFFFFFE +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'F7,H'77,H'77,H'7F,H'FF,H'FF,H'FF,
             EAEAAAAAAA +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FB,H'AA,H'AA,H'AA,H'AA,H'AA,H'AA,H'AA,H'BB,H'FF,
             EEFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FD,H'DD,H'55,H'55,H'5D,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FB,H'FF,H'FE,H'EA,H'AA,H'AA,H'AA,H'AA,H'AA,H'AA,H'EE,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'77,H'75,H'55,H'77,H'7F,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'BB,H'AA,H'AA,H'AA,H'AA,H'AA,H'AA,H'AA,H'AB,H'BF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE   47


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             FFBBAAAAAA   
             AAAAABBFFF   
             FFFFFFFFFF   
             FFFFFFFFDD   
             DDDDDFFFFF   
             FFFFFFFFFF   
             FFDFFFEEAA   
             AAAAAAAAAE   
             EFFFFFFFFF   
             FFFFFFFFFF   
             FFF777777F   
             FFFFFFFFFF   
             FFFFFFFFFB   
             AAAAAAAAAA   
             AAAABBFFFF   
             FFFFFFFFFF   
             FFFFFDDD55   
             555DFFFFFF   
             FFFFFFFFFB   
             FFFEEAAAAA   
             AAAAAAAAEE   
             FFFFFFFFFF   
             FFFFFFFFFF   
             777555777F   
             FFFFFFFFFF   
             FFFFFFBBAA   
             AAAAAAAAAA   
             AAABBFFFFF   
             FFFF         
    000000D4 FFBFFFFFDD             .DATA.B     H'FF,H'BF,H'FF,H'FF,H'DD,H'D5,H'55,H'55,H'55,H'DF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             D5555555DF +                       H'FF,H'BF,H'EE,H'AA,H'AA,H'AA,H'A2,H'AA,H'AA,H'AA,H'AE,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'BF,H'FF,H'FF,H'F7,H'55,H'55,H'55,H'57,H'77,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFBFEEAA +                       H'FF,H'FF,H'BA,H'AA,H'AA,H'A8,H'00,H'08,H'8A,H'AA,H'AA,H'BB,H'FF,H'FF,H'FF,H'FF,
             AAAAA2AAAA +                       H'FF,H'FF,H'FF,H'FD,H'D5,H'55,H'55,H'55,H'55,H'5D,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             AAAEFFFFFF +                       H'FF,H'3F,H'EE,H'AA,H'AA,H'A2,H'00,H'00,H'2A,H'AA,H'AA,H'EF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFBFFF +                       H'EF,H'FF,H'FF,H'FF,H'75,H'55,H'55,H'55,H'55,H'77,H'7F,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFF7555555 +                       H'FF,H'FF,H'AA,H'AA,H'AA,H'80,H'00,H'00,H'08,H'AA,H'AB,H'BA,H'FF,H'FF,H'FF,H'FF,
             5777FFFFFF +                       H'FF,H'FF,H'FF,H'DD,H'D5,H'55,H'11,H'11,H'55,H'55,H'DF,H'FD,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'79,H'FF,H'EE,H'AA,H'AA,H'20,H'00,H'00,H'02,H'AA,H'AE,H'ED,H'FF,H'FF,H'FF,H'FF,
             BAAAAAA800 +                       H'FF,H'FF,H'FF,H'FF,H'75,H'55,H'44,H'43,H'95,H'57,H'7F,H'FB,H'FF,H'FF,H'FF,H'F9,
             088AAAAABB +                       H'FF,H'7B,H'AA,H'AA,H'A8,H'00,H'00,H'07,H'80,H'AA,H'AA,H'BB,H'FF,H'FF,H'FF,H'F8,
             FFFFFFFFFF +                       H'FF,H'7F,H'FF,H'DD,H'55,H'50,H'00,H'0F,H'95,H'15,H'DF,H'F7,H'FF,H'FF,H'FF,H'FA,
             FFFFFDD555 +                       H'7F,H'FE,H'EA,H'AA
             5555555DFF   
             FFFFFFFFFF   
             FF3FEEAAAA   
             A200002AAA   
             AAEFFFFFFF   
             FFEFFFFFFF   
             7555555555   
             777FFFFFFF   
             FFFFFFFFAA   
             AAAA800000   
             08AAABBAFF   
             FFFFFFFFFF   
             FFDDD55511   
             115555DFFD   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE   48


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             FFFFFFFF79   
             FFEEAAAA20   
             000002AAAE   
             EDFFFFFFFF   
             FFFFFFFF75   
             5544439557   
             7FFBFFFFFF   
             F9FF7BAAAA   
             A800000780   
             AAAABBFFFF   
             FFF8FF7FFF   
             DD5550000F   
             9515DFF7FF   
             FFFFFA7FFE   
             EAAA         
    000001A8 AA00380FC2             .DATA.B     H'AA,H'00,H'38,H'0F,H'C2,H'4A,H'AA,H'EF,H'FF,H'FF,H'FF,H'FB,H'7B,H'FF,H'FF,H'FF,
             4AAAEFFFFF +                       H'55,H'54,H'10,H'0F,H'D4,H'D5,H'7F,H'EF,H'FF,H'FF,H'FF,H'FB,H'BB,H'FF,H'AA,H'AA,
             FFFB7BFFFF +                       H'A8,H'00,H'7C,H'1F,H'E1,H'EA,H'AA,H'9F,H'FF,H'FF,H'FF,H'FB,H'D1,H'FF,H'FF,H'DD,
             FF5554100F +                       H'55,H'10,H'92,H'1F,H'F3,H'F5,H'DF,H'BF,H'FF,H'FF,H'FF,H'FB,H'C5,H'BF,H'EE,H'AA,
             D4D57FEFFF +                       H'AA,H'00,H'D6,H'3F,H'FD,H'FA,H'A8,H'7F,H'FF,H'FF,H'FF,H'FB,H'E5,H'3F,H'FF,H'F7,
             FFFFFBBBFF +                       H'55,H'41,H'7D,H'7F,H'FE,H'FD,H'43,H'FF,H'FF,H'FC,H'03,H'FB,H'FC,H'BB,H'AA,H'AA,
             AAAAA8007C +                       H'A8,H'02,H'38,H'FF,H'FF,H'7E,H'3F,H'FF,H'FC,H'03,H'FC,H'03,H'FF,H'3F,H'FF,H'DD,
             1FE1EAAA9F +                       H'54,H'12,H'FE,H'FF,H'FF,H'BF,H'FF,H'FF,H'03,H'FF,H'FF,H'FB,H'BF,H'4E,H'EA,H'AA,
             FFFFFFFBD1 +                       H'03,H'C1,H'CF,H'7F,H'FF,H'DF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FD,H'9F,H'B0,H'0F,H'80,
             FFFFDD5510 +                       H'FF,H'FD,H'6D,H'7F,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FD,H'9F,H'DF,H'F0,H'7F,
             921FF3F5DF +                       H'FF,H'FE,H'7C,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'F1,H'FB,H'BF,H'FF,H'FF,
             BFFFFFFFFB +                       H'FF,H'FD,H'39,H'7F,H'FF,H'FF,H'FF,H'FF,H'FF,H'F3,H'7F,H'FE,H'FE,H'F9,H'FF,H'FF,
             C5BFEEAAAA +                       H'FF,H'FF,H'BB,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FC,H'FF,H'FF,H'DF,H'DF,H'FF,H'FF,
             00D63FFDFA +                       H'FF,H'FF,H'7D,H'FF
             A87FFFFFFF   
             FBE53FFFF7   
             55417D7FFE   
             FD43FFFFFC   
             03FBFCBBAA   
             AAA80238FF   
             FF7E3FFFFC   
             03FC03FF3F   
             FFDD5412FE   
             FFFFBFFFFF   
             03FFFFFBBF   
             4EEAAA03C1   
             CF7FFFDFFF   
             FFFFFFFFFD   
             9FB00F80FF   
             FD6D7FFFFF   
             FFFFFFFFFF   
             FD9FDFF07F   
             FFFE7CFFFF   
             FFFFFFFFFF   
             FFF1FBBFFF   
             FFFFFD397F   
             FFFFFFFFFF   
             F37FFEFEF9   
             FFFFFFFFBB   
             FFFFFFFFFF   
             FFFCFFFFDF   
             DFFFFFFFFF   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE   49


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             7DFF         
    0000027C FFFFFFFCFF             .DATA.B     H'FF,H'FF,H'FF,H'FC,H'FF,H'FF,H'FF,H'DD,H'FF,H'FF,H'EF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFDDFFFF +                       H'FF,H'FF,H'FF,H'C3,H'FF,H'7F,H'FF,H'E7,H'FF,H'FF,H'F0,H'7E,H'7F,H'FF,H'BB,H'FF,
             EFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'F8,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'81,H'F7,H'FF,H'D7,H'FF,
             FFFFFFFFC3 +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'F8,H'7F,H'55,H'FF,
             FF7FFFE7FF +                       H'FF,H'FF,H'FF,H'FD,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'81,H'FF,H'FF,H'FE,H'38,H'FF,
             FFF07E7FFF +                       H'FF,H'FF,H'FF,H'E3,H'80,H'00,H'7F,H'F9,H'F7,H'FC,H'3D,H'FF,H'FF,H'FF,H'FF,H'FF,
             BBFFFFFFFF +                       H'FF,H'FF,H'FC,H'1F,H'BF,H'FF,H'7F,H'FE,H'0F,H'FD,H'E5,H'FF,H'FF,H'FC,H'1C,H'3F,
             FFF8FFFFFF +                       H'3F,H'FF,H'E3,H'FF,H'A0,H'01,H'7F,H'FF,H'FF,H'FD,H'05,H'FF,H'FF,H'FF,H'00,H'FF,
             FFFFFF81F7 +                       H'C0,H'00,H'1F,H'FF,H'B0,H'F1,H'7F,H'FF,H'FF,H'FD,H'C5,H'FF,H'FF,H'FF,H'C0,H'7F,
             FFD7FFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'98,H'F9,H'00,H'00,H'00,H'01,H'C4,H'00,H'00,H'00,H'80,H'1F,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'C8,H'FD,H'FF,H'FF,H'FF,H'FF,H'C7,H'FF,H'FF,H'FE,H'80,H'0F,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'E8,H'F7,H'81,H'8F,H'83,H'F8,H'07,H'CF,H'1F,H'02,H'C0,H'1F,
             F87F55FFFF +                       H'FF,H'FF,H'FF,H'FF,H'E8,H'E7,H'E3,H'9E,H'38,H'F1,H'C6,H'0C,H'1C,H'72,H'F8,H'3F,
             FFFFFDFFFF +                       H'FF,H'BF,H'FF,H'FF
             FFFFFFFF81   
             FFFFFE38FF   
             FFFFFFE380   
             007FF9F7FC   
             3DFFFFFFFF   
             FFFFFFFC1F   
             BFFF7FFE0F   
             FDE5FFFFFC   
             1C3F3FFFE3   
             FFA0017FFF   
             FFFD05FFFF   
             FF00FFC000   
             1FFFB0F17F   
             FFFFFDC5FF   
             FFFFC07FFF   
             FFFFFF98F9   
             00000001C4   
             000000801F   
             FFFFFFFFC8   
             FDFFFFFFFF   
             C7FFFFFE80   
             0FFFFFFFFF   
             E8F7818F83   
             F807CF1F02   
             C01FFFFFFF   
             FFE8E7E39E   
             38F1C60C1C   
             72F83FFFBF   
             FFFF         
    00000350 E807E1BC38             .DATA.B     H'E8,H'07,H'E1,H'BC,H'38,H'E1,H'C7,H'0E,H'1C,H'7A,H'FE,H'3F,H'FF,H'3F,H'FF,H'FF,
             E1C70E1C7A +                       H'E8,H'E7,H'F0,H'7C,H'78,H'63,H'C7,H'8E,H'1C,H'1E,H'FF,H'9F,H'80,H'7F,H'FF,H'FF,
             FE3FFF3FFF +                       H'E8,H'F7,H'F8,H'7C,H'78,H'63,H'C7,H'8E,H'1C,H'06,H'7F,H'9F,H'FF,H'FF,H'FF,H'FF,
             FFE8E7F07C +                       H'E8,H'FF,H'F8,H'7C,H'78,H'63,H'C7,H'8E,H'1E,H'03,H'7F,H'FF,H'FF,H'FF,H'FB,H'FF,
             7863C78E1C +                       H'C8,H'FE,H'F0,H'3C,H'78,H'63,H'C7,H'8E,H'1D,H'C1,H'7F,H'FF,H'FF,H'FF,H'F8,H'FF,
             1EFF9F807F +                       H'98,H'FC,H'E6,H'1C,H'38,H'E1,H'C3,H'8E,H'1D,H'F1,H'7F,H'FF,H'FF,H'FF,H'FE,H'00,
             FFFFE8F7F8 +                       H'B0,H'78,H'CF,H'1E,H'38,H'F0,H'01,H'80,H'0C,H'E3,H'7F,H'FF,H'FF,H'FF,H'FF,H'FF,
             7C7863C78E +                       H'A0,H'00,H'86,H'07,H'83,H'F8,H'47,H'C3,H'3C,H'06,H'7F,H'FF,H'FF,H'FF,H'FF,H'FF,
             1C067F9FFF +                       H'BF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FC,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFE8FF +                       H'80,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             F87C7863C7 +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF
             8E1E037FFF   
             FFFFFBFFC8   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE   50


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             FEF03C7863   
             C78E1DC17F   
             FFFFFFF8FF   
             98FCE61C38   
             E1C38E1DF1   
             7FFFFFFFFE   
             00B078CF1E   
             38F001800C   
             E37FFFFFFF   
             FFFFA00086   
             0783F847C3   
             3C067FFFFF   
             FFFFFFBFFF   
             FFFFFFFFFF   
             FFFFFCFFFF   
             FFFFFFFF80   
             0000000000   
             00000001FF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FF           
    00000400              _BACKGROUND:                     ; static: BACKGROUND
    00000400 FFFFFFFFFF             .DATA.B     H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FB,H'BB,H'BB,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFBBB +                       H'FF,H'FF,H'FF,H'FF,H'F7,H'77,H'55,H'55,H'55,H'55,H'55,H'55,H'57,H'57,H'77,H'FF,
             BBFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'EE,H'EA,H'AA,H'AA,H'EE,H'EF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'DD,H'D5,H'55,H'55,H'55,H'55,H'55,H'55,H'55,H'55,H'DD,H'DF,
             F777555555 +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FB,H'BB,H'BA,H'AA,H'BB,H'BB,H'BF,H'FF,H'FF,H'FF,
             5555555757 +                       H'FF,H'FF,H'FF,H'FF,H'77,H'75,H'55,H'55,H'55,H'55,H'55,H'55,H'55,H'55,H'77,H'7F,
             77FFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'F7,H'FF,H'FE,H'EA,H'AA,H'AA,H'AA,H'AE,H'EE,H'FF,H'FF,H'FF,
             FFFFFFFFEE +                       H'F7,H'FF,H'FF,H'DD,H'DD,H'55,H'55,H'55,H'54,H'44,H'55,H'55,H'55,H'55,H'5D,H'DD,
             EAAAAAEEEF +                       H'F7,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'BB,H'AA,H'AA,H'AA,H'AB,H'BF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'E3,H'FF,H'FF,H'FF,H'F7,H'75,H'55,H'55,H'55,H'11,H'51,H'55,H'55,H'57,H'77,H'77,
             FFFFDDD555 +                       H'F7,H'FF,H'FF,H'FF,H'BF,H'FF,H'EE,H'AA,H'AA,H'80,H'A0,H'AA,H'EE,H'FF,H'FF,H'FF,
             5555555555 +                       H'F7,H'FF,H'FE,H'DD,H'9D,H'55,H'55,H'55,H'40,H'00,H'00,H'55,H'55,H'55,H'55,H'9D,
             5555DDDFFF +                       H'FF,H'FB,H'FF,H'FF,H'1F,H'FF,H'FB,H'AA,H'A0,H'00,H'0A,H'AA,H'BB,H'FF,H'FF,H'BF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF
             FBBBBAAABB   
             BBBFFFFFFF   
             FFFFFFFF77   
             7555555555   
             5555555577   
             7FFFFFFFFF   
             F7FFFEEAAA   
             AAAAAEEEFF   
             FFFFF7FFFF   
             DDDD555555   
             5444555555   
             555DDDF7FF   
             FFFFFFFFFF   
             BBAAAAAAAB   
             BFFFFFFFE3   
             FFFFFFF775   
             5555551151   
             5555577777   
             F7FFFFFFBF   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE   51


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             FFEEAAAA80   
             A0AAEEFFFF   
             FFF7FFFEDD   
             9D55555540   
             0000555555   
             559DFFFBFF   
             FF1FFFFBAA   
             A0000AAABB   
             FFFFBFFFFF   
             FFFF         
    000004D4 3755455500             .DATA.B     H'37,H'55,H'45,H'55,H'00,H'00,H'01,H'15,H'55,H'55,H'77,H'17,H'FF,H'FF,H'FF,H'FF,
             0001155555 +                       H'BF,H'FC,H'0E,H'AA,H'00,H'00,H'00,H'AA,H'AE,H'EF,H'FF,H'BF,H'FF,H'FF,H'FF,H'DD,
             7717FFFFFF +                       H'DD,H'53,H'E5,H'44,H'00,H'00,H'00,H'45,H'55,H'55,H'55,H'1D,H'FF,H'FF,H'FF,H'FF,
             FFBFFC0EAA +                       H'FF,H'EF,H'F8,H'A8,H'00,H'00,H'00,H'2A,H'BB,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             000000AAAE +                       H'77,H'5F,H'FF,H'50,H'00,H'00,H'00,H'15,H'55,H'55,H'57,H'77,H'FF,H'FF,H'FF,H'FF,
             EFFFBFFFFF +                       H'FF,H'BF,H'FF,H'28,H'00,H'00,H'00,H'0A,H'AA,H'EF,H'FF,H'FF,H'FF,H'FF,H'FF,H'DD,
             FFDDDD53E5 +                       H'D5,H'3F,H'FF,H'80,H'00,H'00,H'00,H'05,H'55,H'55,H'55,H'DD,H'FF,H'FF,H'FF,H'FF,
             4400000045 +                       H'FF,H'7F,H'FF,H'A0,H'00,H'00,H'00,H'0A,H'BB,H'BF,H'FF,H'FF,H'FF,H'FE,H'FF,H'FF,
             5555551DFF +                       H'75,H'7F,H'FF,H'C0,H'00,H'00,H'00,H'05,H'55,H'55,H'77,H'7F,H'FF,H'FD,H'7F,H'FF,
             FFFFFFFFEF +                       H'FE,H'FF,H'FF,H'C0,H'00,H'00,H'00,H'0A,H'AA,H'EE,H'FF,H'FF,H'FF,H'FD,H'BF,H'DD,
             F8A8000000 +                       H'D5,H'FF,H'FF,H'E0,H'00,H'00,H'00,H'04,H'55,H'55,H'55,H'5D,H'FF,H'F3,H'BF,H'FF,
             2ABBFFFFFF +                       H'FB,H'FF,H'FF,H'F0,H'00,H'00,H'00,H'02,H'AB,H'BF,H'FF,H'FF,H'FF,H'EF,H'DF,H'F7,
             FFFFFFFF77 +                       H'73,H'FF,H'FF,H'F0,H'00,H'00,H'00,H'01,H'55,H'55,H'57,H'77,H'FF,H'9F,H'EF,H'FF,
             5FFF500000 +                       H'F7,H'FF,H'FF,H'F8
             0015555557   
             77FFFFFFFF   
             FFBFFF2800   
             00000AAAEF   
             FFFFFFFFFF   
             DDD53FFF80   
             0000000555   
             5555DDFFFF   
             FFFFFF7FFF   
             A00000000A   
             BBBFFFFFFF   
             FEFFFF757F   
             FFC0000000   
             055555777F   
             FFFD7FFFFE   
             FFFFC00000   
             000AAAEEFF   
             FFFFFDBFDD   
             D5FFFFE000   
             0000045555   
             555DFFF3BF   
             FFFBFFFFF0   
             00000002AB   
             BFFFFFFFEF   
             DFF773FFFF   
             F000000001   
             55555777FF   
             9FEFFFF7FF   
             FFF8         
    000005A8 00000002AA             .DATA.B     H'00,H'00,H'00,H'02,H'AA,H'EF,H'FF,H'FF,H'FF,H'7F,H'F7,H'DD,H'CF,H'FF,H'FF,H'FC,
             EFFFFFFF7F +                       H'00,H'00,H'00,H'00,H'55,H'55,H'55,H'DD,H'FC,H'FF,H'F9,H'FF,H'DF,H'FF,H'FF,H'FE,
             F7DDCFFFFF +                       H'00,H'00,H'00,H'02,H'AB,H'BF,H'FF,H'FF,H'F3,H'FF,H'FE,H'F7,H'5F,H'FF,H'FF,H'FF,
             FC00000000 +                       H'00,H'00,H'00,H'01,H'54,H'55,H'57,H'77,H'CF,H'FF,H'FE,H'7F,H'BF,H'FF,H'FF,H'FF,




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE   52


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             555555DDFC +                       H'C0,H'00,H'00,H'02,H'AA,H'EE,H'E3,H'FF,H'BF,H'FF,H'FF,H'9D,H'7F,H'FF,H'FF,H'FF,
             FFF9FFDFFF +                       H'F0,H'00,H'00,H'04,H'55,H'55,H'1C,H'5D,H'7F,H'FF,H'FF,H'CE,H'FF,H'FF,H'FF,H'FF,
             FFFE000000 +                       H'FC,H'00,H'00,H'0A,H'AB,H'FF,H'7F,H'7F,H'FF,H'FF,H'FF,H'F5,H'FF,H'FF,H'FF,H'FF,
             02ABBFFFFF +                       H'FE,H'00,H'00,H'01,H'55,H'54,H'FF,H'97,H'FF,H'FF,H'FF,H'FB,H'FF,H'FF,H'FF,H'FF,
             F3FFFEF75F +                       H'FF,H'80,H'00,H'0A,H'AA,H'EB,H'FF,H'EF,H'FF,H'FF,H'FF,H'FD,H'FF,H'FF,H'FF,H'FF,
             FFFFFF0000 +                       H'FF,H'E0,H'00,H'05,H'55,H'57,H'FF,H'F5,H'FF,H'FF,H'FF,H'FC,H'FF,H'FF,H'FF,H'FF,
             0001545557 +                       H'FF,H'F8,H'00,H'2A,H'BB,H'8F,H'FF,H'F9,H'FF,H'FF,H'FF,H'FF,H'3F,H'FF,H'FF,H'FF,
             77CFFFFE7F +                       H'FF,H'FC,H'00,H'15,H'55,H'3F,H'FF,H'FE,H'3F,H'FF,H'FF,H'FF,H'CF,H'FF,H'FF,H'FF,
             BFFFFFFFC0 +                       H'FF,H'FF,H'00,H'2A,H'AE,H'7F,H'FF,H'FF,H'DF,H'FF,H'FF,H'FF,H'E7,H'FF,H'FF,H'FF,
             000002AAEE +                       H'FF,H'FF,H'E0,H'45
             E3FFBFFFFF   
             9D7FFFFFFF   
             F000000455   
             551C5D7FFF   
             FFCEFFFFFF   
             FFFC00000A   
             ABFF7F7FFF   
             FFFFF5FFFF   
             FFFFFE0000   
             015554FF97   
             FFFFFFFBFF   
             FFFFFFFF80   
             000AAAEBFF   
             EFFFFFFFFD   
             FFFFFFFFFF   
             E000055557   
             FFF5FFFFFF   
             FCFFFFFFFF   
             FFF8002ABB   
             8FFFF9FFFF   
             FFFF3FFFFF   
             FFFFFC0015   
             553FFFFE3F   
             FFFFFFCFFF   
             FFFFFFFF00   
             2AAE7FFFFF   
             DFFFFFFFE7   
             FFFFFFFFFF   
             E045         
    0000067C 41FFFFFFEF             .DATA.B     H'41,H'FF,H'FF,H'FF,H'EF,H'FF,H'FF,H'FF,H'F9,H'FF,H'FF,H'FF,H'FF,H'FF,H'F8,H'00,
             FFFFFFF9FF +                       H'1F,H'FF,H'FF,H'FF,H'F1,H'FF,H'FF,H'FF,H'FE,H'7F,H'FF,H'07,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFF8 +                       H'FF,H'FF,H'FF,H'FF,H'FD,H'FF,H'FF,H'FF,H'FF,H'8F,H'FC,H'71,H'FF,H'FF,H'FF,H'FF,
             001FFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FE,H'7F,H'FF,H'FF,H'FF,H'F0,H'F1,H'FC,H'7F,H'FF,H'FF,H'FF,
             F1FFFFFFFE +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FE,H'07,H'FF,H'03,H'FF,H'FF,H'FF,
             7FFF07FFFF +                       H'FF,H'FF,H'FF,H'FF,H'00,H'00,H'0F,H'FF,H'00,H'00,H'7F,H'FF,H'F8,H'00,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'C0,H'00,H'00,H'FF,H'FF,H'C3,H'FC,H'3F,H'FF,H'FF,H'FF,H'FF,H'FF,H'00,H'00,
             FFFDFFFFFF +                       H'00,H'3F,H'FF,H'FF,H'FF,H'FF,H'F8,H'01,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FF8FFC71FF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFE7FFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFF0F1FC +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             7FFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF
             FFFFFFFE07   
             FF03FFFFFF   
             FFFFFFFF00   
             000FFF0000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE   53


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             7FFFF800FF   
             FFFFC00000   
             FFFFC3FC3F   
             FFFFFFFFFF   
             0000003FFF   
             FFFFFFF801   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFF         
    00000750 FFFFFFFFFF             .DATA.B     H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE   54


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             FFFFFFFFFF   
             FFFFFFFFFF   
             FFFFFFFFFF   
             FF           
    00000800              _BACK_TUT_1:                     ; static: BACK_TUT_1
    00000800 FFFFFFFFFF             .DATA.B     H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,
             FFFFFFFFFF +                       H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,
             FF81818181 +                       H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,
             8181818181 +                       H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,
             8181818181 +                       H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,
             8181A5A5A5 +                       H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,
             A5A5A5A5A5 +                       H'FE,H'FE,H'FE,H'FE,H'FE,H'FE,H'FE,H'FE,H'FE,H'FE,H'FE,H'FE,H'FE,H'FE,H'FE,H'FE,
             A5A5A5A5A5 +                       H'FF,H'00,H'00,H'00,H'81,H'03,H'80,H'00,H'00,H'02,H'80,H'81,H'00,H'00,H'00,H'FF,
             A5A5A58181 +                       H'81,H'00,H'00,H'00,H'91,H'07,H'00,H'00,H'00,H'00,H'C0,H'81,H'00,H'00,H'00,H'81,
             8181818181 +                       H'A5,H'00,H'00,H'00,H'81,H'08,H'00,H'00,H'00,H'00,H'60,H'89,H'00,H'00,H'00,H'A5,
             8181818181 +                       H'81,H'07,H'E1,H'80,H'81,H'18,H'00,H'00,H'00,H'00,H'40,H'81,H'07,H'E7,H'80,H'81,
             8181818181 +                       H'81,H'07,H'E1,H'80,H'81,H'08,H'00,H'00,H'00,H'00,H'30,H'81,H'07,H'E7,H'80,H'81,
             8181818181 +                       H'A5,H'06,H'07,H'80
             8181818181   
             8181818181   
             A5A5A5A5A5   
             A5A5A5A5A5   
             A5A5A5A5A5   
             A581818181   
             8181818181   
             8181818181   
             8181FEFEFE   
             FEFEFEFEFE   
             FEFEFEFEFE   
             FEFEFEFF00   
             0000810380   
             0000028081   
             000000FF81   
             0000009107   
             00000000C0   
             8100000081   
             A500000081   
             0800000000   
             6089000000   
             A58107E180   
             8118000000   
             00408107E7   
             80818107E1   
             8081080000   
             0000308107   
             E78081A506   
             0780         
    000008D4 8140008000             .DATA.B     H'81,H'40,H'00,H'80,H'00,H'00,H'14,H'81,H'06,H'00,H'60,H'A5,H'81,H'06,H'07,H'80,
             0014810600 +                       H'81,H'E0,H'00,H'C0,H'02,H'80,H'0C,H'81,H'06,H'00,H'60,H'81,H'FE,H'07,H'81,H'80,
             60A5810607 +                       H'81,H'C0,H'01,H'C0,H'07,H'C0,H'05,H'81,H'07,H'81,H'80,H'FE,H'FF,H'07,H'81,H'80,
             8081E000C0 +                       H'81,H'80,H'07,H'FF,H'FF,H'E0,H'01,H'C1,H'07,H'81,H'80,H'FF,H'81,H'06,H'01,H'80,
             02800C8106 +                       H'C1,H'00,H'38,H'00,H'00,H'1C,H'01,H'85,H'06,H'06,H'00,H'81,H'A5,H'06,H'01,H'80,
             006081FE07 +                       H'81,H'00,H'C6,H'AD,H'FF,H'E3,H'80,H'81,H'06,H'06,H'00,H'A5,H'81,H'06,H'07,H'E0,
             818081C001 +                       H'81,H'00,H'BF,H'5F,H'FF,H'FD,H'00,H'81,H'06,H'07,H'E0,H'81,H'81,H'06,H'07,H'E0,
             C007C00581 +                       H'81,H'03,H'AA,H'AB,H'7F,H'FD,H'00,H'81,H'06,H'07,H'E0,H'81,H'A5,H'00,H'00,H'00,
             078180FEFF +                       H'81,H'06,H'BD,H'17,H'FF,H'FD,H'00,H'81,H'00,H'00,H'00,H'A5,H'81,H'00,H'00,H'00,




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE   55


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0781808180 +                       H'89,H'01,H'DA,H'0B,H'FF,H'0A,H'00,H'83,H'00,H'00,H'00,H'81,H'FE,H'18,H'00,H'08,
             07FFFFE001 +                       H'81,H'00,H'4D,H'16,H'FC,H'4A,H'00,H'81,H'0C,H'00,H'00,H'FE,H'FF,H'20,H'04,H'1C,
             C1078180FF +                       H'81,H'00,H'5A,H'AB,H'F8,H'1A,H'00,H'81,H'04,H'00,H'00,H'FF,H'81,H'13,H'11,H'88,
             81060180C1 +                       H'81,H'00,H'2F,H'5F,H'F1,H'14,H'00,H'81,H'05,H'4A,H'60,H'81,H'A5,H'0A,H'A5,H'48,
             003800001C +                       H'81,H'00,H'2A,H'AB
             0185060600   
             81A5060180   
             8100C6ADFF   
             E380810606   
             00A5810607   
             E08100BF5F   
             FFFD008106   
             07E0818106   
             07E08103AA   
             AB7FFD0081   
             0607E081A5   
             0000008106   
             BD17FFFD00   
             81000000A5   
             8100000089   
             01DA0BFF0A   
             0083000000   
             81FE180008   
             81004D16FC   
             4A00810C00   
             00FEFF2004   
             1C81005AAB   
             F81A008104   
             0000FF8113   
             118881002F   
             5FF1140081   
             054A6081A5   
             0AA5488100   
             2AAB         
    000009A8 7634008105             .DATA.B     H'76,H'34,H'00,H'81,H'05,H'55,H'50,H'A5,H'81,H'33,H'25,H'48,H'85,H'00,H'17,H'7F,
             5550A58133 +                       H'E0,H'6E,H'00,H'81,H'08,H'91,H'60,H'81,H'81,H'02,H'00,H'00,H'81,H'00,H'0B,H'DF,
             2548850017 +                       H'E9,H'DE,H'00,H'81,H'00,H'00,H'40,H'81,H'A5,H'02,H'00,H'00,H'81,H'00,H'04,H'FB,
             7FE06E0081 +                       H'EF,H'26,H'00,H'A1,H'00,H'00,H'00,H'A5,H'81,H'00,H'00,H'00,H'81,H'00,H'0B,H'1F,
             0891608181 +                       H'F8,H'C0,H'00,H'81,H'00,H'00,H'00,H'81,H'FE,H'EA,H'FC,H'03,H'81,H'00,H'00,H'E0,
             0200008100 +                       H'07,H'00,H'00,H'81,H'FC,H'14,H'FB,H'FE,H'FF,H'F3,H'C2,H'01,H'81,H'00,H'FF,H'FF,
             0BDFE9DE00 +                       H'FF,H'FF,H'00,H'81,H'6E,H'06,H'0C,H'FF,H'81,H'00,H'00,H'00,H'81,H'00,H'81,H'81,
             8100004081 +                       H'81,H'81,H'00,H'81,H'00,H'00,H'00,H'81,H'A5,H'00,H'00,H'00,H'81,H'00,H'A5,H'A5,
             A502000081 +                       H'A5,H'A5,H'00,H'81,H'00,H'00,H'00,H'A5,H'81,H'00,H'00,H'00,H'C1,H'00,H'81,H'81,
             0004FBEF26 +                       H'81,H'81,H'00,H'81,H'00,H'00,H'00,H'81,H'81,H'00,H'00,H'00,H'81,H'00,H'81,H'81,
             00A1000000 +                       H'81,H'81,H'00,H'A1,H'00,H'00,H'00,H'81,H'A5,H'00,H'00,H'00,H'85,H'00,H'A5,H'A5,
             A581000000 +                       H'A5,H'A5,H'00,H'81,H'00,H'00,H'00,H'A5,H'81,H'00,H'00,H'00,H'81,H'00,H'81,H'81,
             81000B1FF8 +                       H'81,H'81,H'00,H'85,H'00,H'00,H'00,H'81,H'FE,H'00,H'00,H'00,H'81,H'00,H'FE,H'FE,
             C000810000 +                       H'FE,H'FE,H'00,H'81
             0081FEEAFC   
             03810000E0   
             07000081FC   
             14FBFEFFF3   
             C2018100FF   
             FFFFFF0081   
             6E060CFF81   
             0000008100   
             8181818100   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE   56


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             8100000081   
             A500000081   
             00A5A5A5A5   
             0081000000   
             A581000000   
             C100818181   
             8100810000   
             0081810000   
             0081008181   
             818100A100   
             000081A500   
             00008500A5   
             A5A5A50081   
             000000A581   
             0000008100   
             8181818100   
             8500000081   
             FE00000081   
             00FEFEFEFE   
             0081         
    00000A7C 000000FEFF             .DATA.B     H'00,H'00,H'00,H'FE,H'FF,H'00,H'00,H'00,H'FF,H'00,H'07,H'C3,H'80,H'F0,H'00,H'FF,
             000000FF00 +                       H'00,H'00,H'00,H'FF,H'81,H'00,H'00,H'00,H'81,H'00,H'07,H'03,H'00,H'20,H'00,H'81,
             07C380F000 +                       H'00,H'00,H'00,H'81,H'A5,H'00,H'00,H'00,H'A5,H'00,H'02,H'01,H'00,H'00,H'00,H'A5,
             FF000000FF +                       H'00,H'00,H'00,H'A5,H'81,H'00,H'00,H'00,H'81,H'00,H'00,H'00,H'00,H'00,H'00,H'81,
             8100000081 +                       H'00,H'00,H'00,H'81,H'81,H'00,H'00,H'00,H'81,H'00,H'00,H'00,H'00,H'00,H'00,H'81,
             0007030020 +                       H'00,H'00,H'00,H'81,H'A5,H'00,H'00,H'00,H'A5,H'00,H'00,H'01,H'00,H'00,H'00,H'A5,
             0081000000 +                       H'00,H'00,H'00,H'A5,H'81,H'00,H'00,H'00,H'81,H'00,H'00,H'03,H'C0,H'00,H'00,H'81,
             81A5000000 +                       H'00,H'00,H'00,H'81,H'FE,H'00,H'00,H'00,H'FE,H'00,H'00,H'04,H'A0,H'00,H'00,H'FE,
             A500020100 +                       H'00,H'00,H'00,H'FE,H'FF,H'3C,H'00,H'FF,H'FF,H'00,H'00,H'48,H'90,H'00,H'00,H'FF,
             0000A50000 +                       H'FF,H'00,H'00,H'00,H'81,H'66,H'00,H'81,H'81,H'00,H'01,H'E8,H'9C,H'00,H'00,H'81,
             00A5810000 +                       H'81,H'00,H'00,H'00,H'A5,H'D3,H'00,H'A5,H'A5,H'00,H'01,H'29,H'18,H'00,H'00,H'A5,
             0081000000 +                       H'A5,H'00,H'00,H'00,H'81,H'CB,H'00,H'81,H'81,H'00,H'01,H'A9,H'10,H'00,H'00,H'81,
             0000008100 +                       H'81,H'00,H'00,H'00,H'81,H'C3,H'00,H'81,H'81,H'00,H'01,H'69,H'10,H'00,H'00,H'81,
             0000818100 +                       H'81,H'00,H'00,H'00
             0000810000   
             0000000081   
             00000081A5   
             000000A500   
             0001000000   
             A5000000A5   
             8100000081   
             000003C000   
             0081000000   
             81FE000000   
             FE000004A0   
             0000FE0000   
             00FEFF3C00   
             FFFF000048   
             900000FFFF   
             0000008166   
             0081810001   
             E89C000081   
             81000000A5   
             D300A5A500   
             0129180000   
             A5A5000000   
             81CB008181   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE   57


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0001A91000   
             0081810000   
             0081C30081   
             8100016910   
             0000818100   
             0000         
    00000B50 A5DB00A5A5             .DATA.B     H'A5,H'DB,H'00,H'A5,H'A5,H'C0,H'00,H'C8,H'90,H'00,H'01,H'A5,H'A5,H'00,H'00,H'00,
             C000C89000 +                       H'81,H'FF,H'00,H'81,H'81,H'A0,H'00,H'98,H'90,H'00,H'06,H'81,H'81,H'00,H'00,H'00,
             01A5A50000 +                       H'FE,H'E7,H'00,H'FE,H'FE,H'F0,H'00,H'38,H'98,H'00,H'0D,H'FE,H'FE,H'00,H'00,H'00,
             0081FF0081 +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             81A0009890 +                       H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,
             0006818100 +                       H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,
             0000FEE700 +                       H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,
             FEFEF00038 +                       H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,
             98000DFEFE +                       H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,
             000000FFFF +                       H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,
             FFFFFFFFFF +                       H'FE,H'FE,H'FE,H'FE,H'FE,H'FE,H'FE,H'FE,H'FE,H'FE,H'FE,H'FE,H'FE,H'FE,H'FE,H'FE
             FFFFFFFFFF   
             FFFFFFFF81   
             8181818181   
             8181818181   
             8181818181   
             A5A5A5A5A5   
             A5A5A5A5A5   
             A5A5A5A5A5   
             A581818181   
             8181818181   
             8181818181   
             8181818181   
             8181818181   
             8181818181   
             818181A5A5   
             A5A5A5A5A5   
             A5A5A5A5A5   
             A5A5A5A581   
             8181818181   
             8181818181   
             8181818181   
             FEFEFEFEFE   
             FEFEFEFEFE   
             FEFEFEFEFE   
             FE           
    00000C00              _BACK_TUT_2:                     ; static: BACK_TUT_2
    00000C00 FFFFFFFFFF             .DATA.B     H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,
             FFFFFFFFFF +                       H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,
             FF81818181 +                       H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,
             8181818181 +                       H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,
             8181818181 +                       H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,
             8181A5A5A5 +                       H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,
             A5A5A5A5A5 +                       H'FE,H'FE,H'FE,H'FE,H'FE,H'FE,H'FE,H'FE,H'FE,H'FE,H'FE,H'FE,H'FE,H'FE,H'FE,H'FE,
             A5A5A5A5A5 +                       H'FF,H'44,H'08,H'81,H'85,H'03,H'80,H'02,H'00,H'42,H'80,H'85,H'81,H'10,H'00,H'FF,
             A5A5A58181 +                       H'81,H'01,H'04,H'82,H'B1,H'4F,H'20,H'08,H'00,H'01,H'C0,H'81,H'39,H'08,H'01,H'81,
             8181818181 +                       H'A5,H'00,H'88,H'00,H'83,H'0D,H'00,H'00,H'00,H'88,H'70,H'89,H'40,H'00,H'02,H'A5,
             8181818181 +                       H'81,H'47,H'E1,H'8A,H'A1,H'18,H'10,H'80,H'00,H'04,H'40,H'C1,H'17,H'E7,H'81,H'81,
             8181818181 +                       H'81,H'07,H'E1,H'80,H'81,H'48,H'00,H'00,H'00,H'80,H'32,H'81,H'07,H'E7,H'80,H'81,
             8181818181 +                       H'A5,H'06,H'07,H'81




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE   58


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             8181818181   
             8181818181   
             A5A5A5A5A5   
             A5A5A5A5A5   
             A5A5A5A5A5   
             A581818181   
             8181818181   
             8181818181   
             8181FEFEFE   
             FEFEFEFEFE   
             FEFEFEFEFE   
             FEFEFEFF44   
             0881850380   
             0200428085   
             811000FF81   
             010482B14F   
             20080001C0   
             8139080181   
             A500880083   
             0D00000088   
             7089400002   
             A58147E18A   
             A118108000   
             0440C117E7   
             81818107E1   
             8081480000   
             0080328107   
             E78081A506   
             0781         
    00000CD4 81D0408000             .DATA.B     H'81,H'D0,H'40,H'80,H'00,H'00,H'14,H'81,H'06,H'00,H'65,H'A5,H'81,H'06,H'07,H'80,
             0014810600 +                       H'81,H'E0,H'02,H'C0,H'03,H'80,H'0C,H'E1,H'16,H'20,H'60,H'81,H'FE,H'17,H'89,H'86,
             65A5810607 +                       H'87,H'C0,H'01,H'C0,H'07,H'C2,H'07,H'95,H'07,H'91,H'82,H'FE,H'FF,H'07,H'81,H'90,
             8081E002C0 +                       H'91,H'84,H'27,H'FF,H'FF,H'E0,H'05,H'C9,H'17,H'81,H'84,H'FF,H'81,H'16,H'11,H'90,
             03800CE116 +                       H'CD,H'90,H'38,H'00,H'00,H'1C,H'03,H'87,H'06,H'06,H'00,H'81,H'A5,H'16,H'81,H'86,
             206081FE17 +                       H'89,H'00,H'C6,H'AD,H'FF,H'E3,H'82,H'91,H'26,H'06,H'00,H'A5,H'81,H'06,H'07,H'E0,
             898687C001 +                       H'81,H'00,H'BF,H'5F,H'FF,H'FD,H'11,H'89,H'16,H'07,H'E8,H'81,H'81,H'36,H'97,H'E0,
             C007C20795 +                       H'91,H'13,H'AA,H'AB,H'7F,H'FD,H'00,H'A1,H'06,H'27,H'E0,H'81,H'A5,H'20,H'80,H'20,
             079182FEFF +                       H'81,H'06,H'BD,H'17,H'FF,H'FD,H'00,H'A1,H'40,H'40,H'00,H'A5,H'81,H'00,H'08,H'10,
             0781909184 +                       H'81,H'01,H'DA,H'0B,H'FF,H'0A,H'94,H'83,H'C0,H'00,H'10,H'81,H'FE,H'18,H'00,H'08,
             27FFFFE005 +                       H'81,H'00,H'4D,H'16,H'FC,H'4A,H'01,H'81,H'4C,H'00,H'04,H'FE,H'FF,H'20,H'04,H'1C,
             C9178184FF +                       H'81,H'00,H'5A,H'AB,H'F8,H'1A,H'00,H'81,H'04,H'00,H'00,H'FF,H'81,H'13,H'11,H'88,
             81161190CD +                       H'81,H'00,H'2F,H'5F,H'F1,H'16,H'00,H'E1,H'45,H'4A,H'60,H'81,H'A5,H'0A,H'A5,H'48,
             903800001C +                       H'81,H'00,H'2A,H'AB
             0387060600   
             81A5168186   
             8900C6ADFF   
             E382912606   
             00A5810607   
             E08100BF5F   
             FFFD118916   
             07E8818136   
             97E09113AA   
             AB7FFD00A1   
             0627E081A5   
             2080208106   
             BD17FFFD00   
             A1404000A5   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE   59


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             8100081081   
             01DA0BFF0A   
             9483C00010   
             81FE180008   
             81004D16FC   
             4A01814C00   
             04FEFF2004   
             1C81005AAB   
             F81A008104   
             0000FF8113   
             118881002F   
             5FF11600E1   
             454A6081A5   
             0AA5488100   
             2AAB         
    00000DA8 7634009905             .DATA.B     H'76,H'34,H'00,H'99,H'05,H'55,H'50,H'A5,H'81,H'33,H'25,H'48,H'81,H'00,H'57,H'7F,
             5550A58133 +                       H'E0,H'6E,H'00,H'91,H'08,H'91,H'60,H'81,H'81,H'82,H'00,H'00,H'81,H'00,H'8B,H'DF,
             2548810057 +                       H'E9,H'DE,H'01,H'A1,H'00,H'00,H'40,H'81,H'A5,H'2A,H'E0,H'00,H'81,H'00,H'84,H'FB,
             7FE06E0091 +                       H'EF,H'26,H'00,H'A5,H'20,H'00,H'41,H'A5,H'81,H'40,H'A0,H'2C,H'81,H'00,H'0B,H'1F,
             0891608181 +                       H'F8,H'C0,H'00,H'89,H'00,H'04,H'04,H'81,H'FE,H'EE,H'FC,H'00,H'81,H'00,H'00,H'E0,
             8200008100 +                       H'07,H'00,H'08,H'87,H'FC,H'1E,H'3B,H'FE,H'FF,H'F3,H'DB,H'10,H'FF,H'00,H'00,H'1F,
             8BDFE9DE01 +                       H'F8,H'10,H'FF,H'FF,H'6C,H'06,H'4C,H'FF,H'81,H'60,H'58,H'94,H'81,H'08,H'00,H'04,
             A100004081 +                       H'00,H'20,H'81,H'81,H'00,H'40,H'00,H'81,H'A5,H'02,H'42,H'90,H'A5,H'40,H'00,H'10,
             A52AE00081 +                       H'01,H'00,H'A5,H'A5,H'00,H'04,H'00,H'A5,H'81,H'32,H'00,H'00,H'81,H'00,H'00,H'00,
             0084FBEF26 +                       H'00,H'00,H'81,H'81,H'40,H'00,H'00,H'81,H'81,H'08,H'46,H'00,H'81,H'10,H'00,H'00,
             00A5200041 +                       H'00,H'00,H'81,H'81,H'80,H'00,H'02,H'81,H'A5,H'08,H'48,H'00,H'A5,H'00,H'00,H'02,
             A58140A02C +                       H'00,H'00,H'A5,H'A5,H'20,H'00,H'80,H'A5,H'81,H'00,H'00,H'00,H'81,H'20,H'00,H'00,
             81000B1FF8 +                       H'C0,H'00,H'81,H'81,H'00,H'00,H'00,H'81,H'FE,H'00,H'00,H'00,H'FE,H'00,H'00,H'00,
             C000890004 +                       H'01,H'00,H'FE,H'FE
             0481FEEEFC   
             00810000E0   
             07000887FC   
             1E3BFEFFF3   
             DB10FF0000   
             1FF810FFFF   
             6C064CFF81   
             6058948108   
             0004002081   
             8100400081   
             A5024290A5   
             4000100100   
             A5A5000400   
             A581320000   
             8100000000   
             0081814000   
             0081810846   
             0081100000   
             0000818180   
             000281A508   
             4800A50000   
             020000A5A5   
             200080A581   
             0000008120   
             0000C00081   
             8100000081   
             FE000000FE   
             0000000100   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE   60


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             FEFE         
    00000E7C 000000FEFF             .DATA.B     H'00,H'00,H'00,H'FE,H'FF,H'C0,H'20,H'00,H'FF,H'00,H'00,H'00,H'40,H'00,H'1B,H'FF,
             C02000FF00 +                       H'10,H'00,H'00,H'FF,H'81,H'00,H'00,H'00,H'81,H'80,H'20,H'00,H'00,H'00,H'0D,H'81,
             000040001B +                       H'20,H'00,H'00,H'81,H'A5,H'80,H'00,H'00,H'A5,H'20,H'00,H'00,H'00,H'00,H'46,H'A5,
             FF100000FF +                       H'00,H'00,H'00,H'A5,H'81,H'00,H'00,H'01,H'81,H'40,H'00,H'00,H'00,H'00,H'03,H'81,
             8100000081 +                       H'00,H'00,H'01,H'81,H'81,H'80,H'00,H'40,H'81,H'00,H'02,H'00,H'00,H'00,H'01,H'81,
             8020000000 +                       H'00,H'00,H'00,H'81,H'A5,H'00,H'00,H'00,H'A5,H'40,H'00,H'01,H'40,H'00,H'00,H'A5,
             0D81200000 +                       H'00,H'00,H'00,H'A5,H'81,H'00,H'00,H'00,H'81,H'00,H'00,H'03,H'C0,H'00,H'00,H'81,
             81A5800000 +                       H'C0,H'00,H'00,H'81,H'FE,H'00,H'00,H'01,H'FE,H'04,H'0C,H'04,H'A0,H'00,H'00,H'FE,
             A520000000 +                       H'00,H'00,H'00,H'FE,H'C3,H'00,H'08,H'20,H'FF,H'A0,H'1C,H'48,H'98,H'00,H'00,H'FF,
             0046A50000 +                       H'00,H'00,H'00,H'00,H'C3,H'00,H'00,H'01,H'81,H'40,H'01,H'E8,H'9C,H'00,H'20,H'81,
             00A5810000 +                       H'00,H'00,H'00,H'00,H'C3,H'00,H'00,H'00,H'A5,H'00,H'01,H'29,H'18,H'00,H'00,H'A5,
             0181400000 +                       H'00,H'00,H'00,H'00,H'B3,H'00,H'00,H'00,H'81,H'40,H'01,H'A9,H'1C,H'00,H'04,H'81,
             0000038100 +                       H'40,H'00,H'00,H'00,H'CD,H'00,H'00,H'00,H'81,H'80,H'03,H'69,H'10,H'00,H'04,H'81,
             0001818180 +                       H'04,H'00,H'00,H'00
             0040810002   
             0000000181   
             00000081A5   
             000000A540   
             0001400000   
             A5000000A5   
             8100000081   
             000003C000   
             0081C00000   
             81FE000001   
             FE040C04A0   
             0000FE0000   
             00FEC30008   
             20FFA01C48   
             980000FF00   
             000000C300   
             0001814001   
             E89C002081   
             00000000C3   
             000000A500   
             0129180000   
             A500000000   
             B300000081   
             4001A91C00   
             0481400000   
             00CD000000   
             8180036910   
             0004810400   
             0000         
    00000F50 C3000000A5             .DATA.B     H'C3,H'00,H'00,H'00,H'A5,H'C0,H'00,H'C8,H'94,H'20,H'01,H'A5,H'80,H'00,H'00,H'00,
             C000C89420 +                       H'C3,H'00,H'00,H'00,H'81,H'A1,H'80,H'D8,H'90,H'00,H'06,H'81,H'80,H'00,H'00,H'00,
             01A5800000 +                       H'C3,H'01,H'00,H'00,H'FE,H'F1,H'00,H'38,H'98,H'02,H'0D,H'FE,H'02,H'00,H'1E,H'00,
             00C3000000 +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             81A180D890 +                       H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,
             0006818000 +                       H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,
             0000C30100 +                       H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,
             00FEF10038 +                       H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,
             98020DFE02 +                       H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,
             001E00FFFF +                       H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,H'81,
             FFFFFFFFFF +                       H'FE,H'FE,H'FE,H'FE,H'FE,H'FE,H'FE,H'FE,H'FE,H'FE,H'FE,H'FE,H'FE,H'FE,H'FE,H'FE
             FFFFFFFFFF   
             FFFFFFFF81   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE   61


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             8181818181   
             8181818181   
             8181818181   
             A5A5A5A5A5   
             A5A5A5A5A5   
             A5A5A5A5A5   
             A581818181   
             8181818181   
             8181818181   
             8181818181   
             8181818181   
             8181818181   
             818181A5A5   
             A5A5A5A5A5   
             A5A5A5A5A5   
             A5A5A5A581   
             8181818181   
             8181818181   
             8181818181   
             FEFEFEFEFE   
             FEFEFEFEFE   
             FEFEFEFEFE   
             FE           
    00001000              _BACK_TUT_3:                     ; static: BACK_TUT_3
    00001000 FFFFFFFFFF             .DATA.B     H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             FFFFFFFFFF +                       H'81,H'81,H'81,H'81,H'81,H'81,H'FF,H'FF,H'FF,H'FF,H'FF,H'81,H'81,H'81,H'81,H'81,
             FFFFFFFFFF +                       H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'FF,H'FF,H'FF,H'FF,H'FF,H'A5,H'A5,H'A5,H'A5,H'A5,
             FF81818181 +                       H'81,H'81,H'81,H'81,H'81,H'81,H'FF,H'FF,H'FF,H'F7,H'FF,H'81,H'81,H'81,H'81,H'81,
             8181FFFFFF +                       H'81,H'81,H'81,H'81,H'81,H'81,H'FF,H'FF,H'FF,H'FF,H'FF,H'81,H'81,H'81,H'81,H'81,
             FFFF818181 +                       H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'FF,H'FF,H'FF,H'FF,H'FF,H'A5,H'A5,H'A5,H'A5,H'A5,
             8181A5A5A5 +                       H'81,H'81,H'81,H'81,H'81,H'81,H'FF,H'FF,H'FF,H'FF,H'FD,H'81,H'81,H'81,H'81,H'81,
             A5A5A5FFFF +                       H'FE,H'FE,H'FE,H'FE,H'FE,H'FE,H'FF,H'FF,H'FF,H'FF,H'FC,H'FE,H'FE,H'FE,H'FE,H'FE,
             FFFFFFA5A5 +                       H'FF,H'44,H'08,H'81,H'85,H'03,H'3F,H'FF,H'FF,H'FF,H'FC,H'85,H'81,H'10,H'00,H'FF,
             A5A5A58181 +                       H'81,H'01,H'04,H'82,H'B1,H'4F,H'7F,H'EF,H'FF,H'FF,H'FC,H'81,H'39,H'08,H'01,H'81,
             81818181FF +                       H'A5,H'04,H'98,H'40,H'83,H'0C,H'3F,H'FF,H'FF,H'FF,H'F0,H'89,H'42,H'20,H'82,H'A5,
             FFFFF7FF81 +                       H'81,H'4F,H'E1,H'9A,H'A1,H'18,H'3F,H'FF,H'FF,H'FF,H'C0,H'C1,H'17,H'E7,H'81,H'81,
             8181818181 +                       H'81,H'0F,H'E1,H'88,H'81,H'48,H'FF,H'FF,H'FF,H'FF,H'B2,H'81,H'0F,H'E7,H'80,H'81,
             8181818181 +                       H'A5,H'06,H'07,H'89
             FFFFFFFFFF   
             8181818181   
             A5A5A5A5A5   
             A5FFFFFFFF   
             FFA5A5A5A5   
             A581818181   
             8181FFFFFF   
             FFFD818181   
             8181FEFEFE   
             FEFEFEFFFF   
             FFFFFCFEFE   
             FEFEFEFF44   
             088185033F   
             FFFFFFFC85   
             811000FF81   
             010482B14F   
             7FEFFFFFFC   
             8139080181   
             A504984083   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE   62


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0C3FFFFFFF   
             F089422082   
             A5814FE19A   
             A1183FFFFF   
             FFC0C117E7   
             8181810FE1   
             888148FFFF   
             FFFFB2810F   
             E78081A506   
             0789         
    000010D4 81D1FFFFFF             .DATA.B     H'81,H'D1,H'FF,H'FF,H'FF,H'FF,H'94,H'81,H'06,H'00,H'65,H'A5,H'81,H'06,H'07,H'88,
             FF94810600 +                       H'81,H'E3,H'FF,H'FF,H'FF,H'FF,H'CC,H'E1,H'16,H'20,H'60,H'81,H'FE,H'17,H'89,H'86,
             65A5810607 +                       H'87,H'C1,H'FF,H'FF,H'FF,H'FF,H'C7,H'95,H'07,H'91,H'82,H'FE,H'FF,H'07,H'81,H'90,
             8881E3FFFF +                       H'91,H'81,H'FF,H'FF,H'FF,H'FF,H'E5,H'C9,H'17,H'81,H'84,H'FF,H'81,H'16,H'11,H'90,
             FFFFCCE116 +                       H'CD,H'99,H'FF,H'FF,H'FD,H'FF,H'F3,H'87,H'06,H'06,H'00,H'81,H'A5,H'16,H'81,H'86,
             206081FE17 +                       H'89,H'0C,H'FF,H'FF,H'FF,H'FF,H'F2,H'91,H'26,H'06,H'00,H'A5,H'81,H'06,H'07,H'E0,
             898687C1FF +                       H'81,H'0F,H'FF,H'FF,H'FF,H'FF,H'F9,H'89,H'17,H'07,H'E8,H'81,H'81,H'36,H'97,H'E0,
             FFFFFFC795 +                       H'91,H'1F,H'FF,H'FF,H'FF,H'FF,H'F8,H'A1,H'06,H'27,H'E0,H'81,H'A5,H'21,H'82,H'A0,
             079182FEFF +                       H'C1,H'0F,H'FF,H'FF,H'FF,H'FF,H'FC,H'A1,H'49,H'45,H'20,H'A5,H'81,H'20,H'08,H'10,
             0781909181 +                       H'89,H'0F,H'FF,H'FF,H'FF,H'FF,H'FC,H'83,H'D0,H'00,H'10,H'81,H'FE,H'18,H'00,H'08,
             FFFFFFFFE5 +                       H'81,H'0F,H'FF,H'FF,H'FF,H'FF,H'F1,H'81,H'4C,H'00,H'04,H'FE,H'FF,H'20,H'04,H'1C,
             C9178184FF +                       H'A1,H'0F,H'FF,H'FF,H'FF,H'FF,H'E0,H'81,H'24,H'00,H'00,H'FF,H'81,H'53,H'11,H'8A,
             81161190CD +                       H'89,H'07,H'FF,H'FF,H'FF,H'FF,H'C8,H'E1,H'45,H'4A,H'60,H'81,H'A5,H'0A,H'A5,H'48,
             99FFFFFDFF +                       H'81,H'01,H'FF,H'FF
             F387060600   
             81A5168186   
             890CFFFFFF   
             FFF2912606   
             00A5810607   
             E0810FFFFF   
             FFFFF98917   
             07E8818136   
             97E0911FFF   
             FFFFFFF8A1   
             0627E081A5   
             2182A0C10F   
             FFFFFFFFFC   
             A1494520A5   
             8120081089   
             0FFFFFFFFF   
             FC83D00010   
             81FE180008   
             810FFFFFFF   
             FFF1814C00   
             04FEFF2004   
             1CA10FFFFF   
             FFFFE08124   
             0000FF8153   
             118A8907FF   
             FFFFFFC8E1   
             454A6081A5   
             0AA5488101   
             FFFF         
    000011A8 FFFFF89905             .DATA.B     H'FF,H'FF,H'F8,H'99,H'05,H'55,H'50,H'A5,H'81,H'33,H'25,H'48,H'C1,H'5F,H'FF,H'FF,
             5550A58133 +                       H'FF,H'FF,H'F0,H'91,H'28,H'91,H'60,H'81,H'81,H'82,H'00,H'00,H'81,H'3F,H'FF,H'FF,
             2548C15FFF +                       H'FF,H'FF,H'F1,H'A1,H'00,H'00,H'40,H'81,H'A5,H'2A,H'E0,H'00,H'81,H'3F,H'FF,H'FF,
             FFFFFFF091 +                       H'FF,H'FF,H'E0,H'A5,H'20,H'00,H'61,H'A5,H'81,H'40,H'A0,H'2C,H'81,H'7F,H'BF,H'FF,




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE   63


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             2891608181 +                       H'FF,H'E1,H'E0,H'89,H'00,H'04,H'84,H'81,H'FE,H'EE,H'FC,H'03,H'81,H'3F,H'FF,H'FF,
             820000813F +                       H'FE,H'01,H'08,H'87,H'FC,H'1E,H'FB,H'FE,H'FF,H'F3,H'DB,H'11,H'81,H'7F,H'FF,H'FF,
             FFFFFFFFF1 +                       H'F0,H'01,H'80,H'81,H'6E,H'06,H'4C,H'FF,H'81,H'60,H'58,H'14,H'81,H'7F,H'FF,H'FF,
             A100004081 +                       H'C0,H'00,H'80,H'91,H'00,H'40,H'00,H'81,H'A5,H'00,H'02,H'00,H'81,H'7F,H'FF,H'FF,
             A52AE00081 +                       H'00,H'00,H'81,H'C3,H'00,H'04,H'00,H'A5,H'81,H'30,H'00,H'00,H'81,H'7F,H'FF,H'FE,
             3FFFFFFFFF +                       H'00,H'80,H'C0,H'C3,H'40,H'00,H'00,H'81,H'81,H'00,H'00,H'00,H'81,H'7F,H'FF,H'F8,
             E0A5200061 +                       H'00,H'C0,H'60,H'A1,H'80,H'00,H'22,H'81,H'A5,H'08,H'00,H'00,H'81,H'7F,H'FF,H'F0,
             A58140A02C +                       H'20,H'40,H'30,H'91,H'20,H'40,H'C0,H'A5,H'81,H'00,H'00,H'00,H'81,H'7E,H'FF,H'E0,
             817FBFFFFF +                       H'00,H'42,H'18,H'D5,H'00,H'00,H'00,H'81,H'FE,H'00,H'02,H'00,H'81,H'79,H'FF,H'C8,
             E1E0890004 +                       H'00,H'C6,H'0C,H'89
             8481FEEEFC   
             03813FFFFF   
             FE010887FC   
             1EFBFEFFF3   
             DB11817FFF   
             FFF0018081   
             6E064CFF81   
             605814817F   
             FFFFC00080   
             9100400081   
             A500020081   
             7FFFFF0000   
             81C3000400   
             A581300000   
             817FFFFE00   
             80C0C34000   
             0081810000   
             00817FFFF8   
             00C060A180   
             002281A508   
             0000817FFF   
             F020403091   
             2040C0A581   
             000000817E   
             FFE0004218   
             D500000081   
             FE00020081   
             79FFC800C6   
             0C89         
    0000127C 000000FEFF             .DATA.B     H'00,H'00,H'00,H'FE,H'FF,H'00,H'20,H'00,H'81,H'03,H'FF,H'88,H'0F,H'80,H'06,H'A1,
             0020008103 +                       H'10,H'00,H'00,H'FF,H'81,H'00,H'00,H'00,H'81,H'83,H'FF,H'08,H'00,H'00,H'02,H'81,
             FF880F8006 +                       H'20,H'40,H'00,H'81,H'A5,H'00,H'00,H'00,H'81,H'07,H'FE,H'30,H'00,H'00,H'93,H'81,
             A1100000FF +                       H'00,H'00,H'04,H'A5,H'81,H'00,H'00,H'00,H'81,H'1F,H'FC,H'40,H'00,H'00,H'83,H'81,
             8100000081 +                       H'00,H'00,H'81,H'81,H'81,H'00,H'00,H'00,H'81,H'1F,H'F8,H'08,H'00,H'01,H'06,H'A1,
             83FF080000 +                       H'00,H'00,H'00,H'81,H'A5,H'00,H'00,H'00,H'83,H'3F,H'F0,H'00,H'30,H'01,H'0C,H'A5,
             0281204000 +                       H'00,H'00,H'00,H'A5,H'81,H'00,H'00,H'00,H'83,H'3F,H'F0,H'00,H'08,H'06,H'18,H'81,
             81A5000000 +                       H'C2,H'00,H'00,H'81,H'FE,H'00,H'00,H'00,H'81,H'1F,H'E0,H'00,H'10,H'38,H'30,H'99,
             8107FE3000 +                       H'00,H'00,H'00,H'FE,H'C3,H'04,H'00,H'00,H'83,H'AF,H'C0,H'00,H'90,H'00,H'20,H'D9,
             0093810000 +                       H'00,H'00,H'00,H'00,H'C3,H'00,H'00,H'00,H'81,H'5F,H'C0,H'00,H'10,H'00,H'60,H'81,
             04A5810000 +                       H'00,H'00,H'00,H'00,H'C3,H'00,H'00,H'00,H'81,H'07,H'80,H'00,H'62,H'00,H'C0,H'89,
             00811FFC40 +                       H'00,H'00,H'00,H'00,H'B3,H'00,H'00,H'00,H'81,H'47,H'81,H'01,H'80,H'01,H'84,H'C1,
             0000838100 +                       H'00,H'00,H'00,H'00,H'CD,H'00,H'00,H'20,H'81,H'83,H'01,H'FE,H'00,H'03,H'04,H'81,
             0081818100 +                       H'00,H'00,H'00,H'00
             0000811FF8   
             08000106A1   
             00000081A5   
             000000833F   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE   64


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             F00030010C   
             A5000000A5   
             8100000083   
             3FF0000806   
             1881C20000   
             81FE000000   
             811FE00010   
             3830990000   
             00FEC30400   
             0083AFC000   
             900020D900   
             000000C300   
             0000815FC0   
             0010006081   
             00000000C3   
             0000008107   
             80006200C0   
             8900000000   
             B300000081   
             4781018001   
             84C1000000   
             00CD000020   
             818301FE00   
             0304810000   
             0000         
    00001350 C300800081             .DATA.B     H'C3,H'00,H'80,H'00,H'81,H'CB,H'00,H'00,H'00,H'0E,H'01,H'85,H'80,H'00,H'00,H'00,
             CB0000000E +                       H'C3,H'00,H'00,H'80,H'81,H'A3,H'10,H'00,H'00,H'08,H'06,H'81,H'80,H'00,H'00,H'00,
             0185800000 +                       H'C3,H'00,H'00,H'00,H'81,H'F1,H'00,H'00,H'00,H'4F,H'8D,H'A3,H'02,H'00,H'00,H'00,
             00C3000080 +                       H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,H'00,H'00,H'00,H'00,H'FF,H'FF,H'FF,H'FF,H'FF,H'FF,
             81A3100000 +                       H'81,H'81,H'81,H'81,H'81,H'81,H'00,H'84,H'00,H'00,H'81,H'81,H'81,H'81,H'81,H'81,
             0806818000 +                       H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'01,H'00,H'00,H'00,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,
             0000C30000 +                       H'81,H'81,H'81,H'81,H'81,H'81,H'06,H'00,H'20,H'00,H'81,H'81,H'81,H'81,H'81,H'81,
             0081F10000 +                       H'81,H'81,H'81,H'81,H'81,H'81,H'00,H'00,H'40,H'04,H'81,H'81,H'81,H'81,H'81,H'81,
             004F8DA302 +                       H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,H'00,H'00,H'00,H'0C,H'A5,H'A5,H'A5,H'A5,H'A5,H'A5,
             000000FFFF +                       H'81,H'81,H'81,H'81,H'81,H'81,H'00,H'10,H'00,H'38,H'81,H'81,H'81,H'81,H'81,H'81,
             FFFFFFFF00 +                       H'FE,H'FE,H'FE,H'FE,H'FE,H'FE,H'00,H'60,H'00,H'00,H'FE,H'FE,H'FE,H'FE,H'FE,H'FE
             000000FFFF   
             FFFFFFFF81   
             8181818181   
             0084000081   
             8181818181   
             A5A5A5A5A5   
             A501000000   
             A5A5A5A5A5   
             A581818181   
             8181060020   
             0081818181   
             8181818181   
             8181810000   
             4004818181   
             818181A5A5   
             A5A5A5A500   
             00000CA5A5   
             A5A5A5A581   
             8181818181   
             0010003881   
             8181818181   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE   65


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             FEFEFEFEFE   
             FE00600000   
             FEFEFEFEFE   
             FE           
    00001400              _TUT_01:                         ; static: TUT_01
    00001400 FFFFFFFFF0             .DATA.L     H'FFFFFFFF,H'F000000F,H'F000000F,H'FF00000F,H'FFF0000F,H'F000000F,H'F00F000F,
             00000FF000 +                       H'F00F000F,H'F00F000F,H'F00F000F,H'F000000F,H'FFF0000F,H'FF00000F,H'F000000F,
             000FFF0000 +                       H'F000000F,H'F0FFFFFF
             0FFFF0000F   
             F000000FF0   
             0F000FF00F   
             000FF00F00   
             0FF00F000F   
             F000000FFF   
             F0000FFF00   
             000FF00000   
             0FF000000F   
             F0FFFFFF     
    00001440              _TUT_02:                         ; static: TUT_02
    00001440 FFFFFFFFF0             .DATA.L     H'FFFFFFFF,H'F000000F,H'F000000F,H'F000000F,H'FFFF000F,H'F000000F,H'F000000F,
             00000FF000 +                       H'F000000F,H'F000000F,H'F000000F,H'F00F000F,H'FFFF000F,H'F000000F,H'F000000F,
             000FF00000 +                       H'F000000F,H'F0FFFFFF
             0FFFFF000F   
             F000000FF0   
             00000FF000   
             000FF00000   
             0FF000000F   
             F00F000FFF   
             FF000FF000   
             000FF00000   
             0FF000000F   
             F0FFFFFF     
    00001480              _TUT_03:                         ; static: TUT_03
    00001480 FFFFFFFFF0             .DATA.L     H'FFFFFFFF,H'F000000F,H'F000000F,H'F000000F,H'F000000F,H'F000000F,H'00000000,
             00000FF000 +                       H'00000000,H'00000000,H'00000000,H'F0000000,H'F000000F,H'F000000F,H'F000000F,
             000FF00000 +                       H'F000000F,H'F0FFFFFF
             0FF000000F   
             F000000F00   
             0000000000   
             0000000000   
             0000000000   
             F0000000F0   
             00000FF000   
             000FF00000   
             0FF000000F   
             F0FFFFFF     
    000014C0              _LVL_01:                         ; static: LVL_01
    000014C0 FEEEE00EFE             .DATA.L     H'FEEEE00E,H'FEEE0EEE,H'F0EEEEEE,H'F00000EE,H'F0000000,H'F0000000,H'F0000000,
             EE0EEEF0EE +                       H'FE000000,H'F0000000,H'FE000000,H'FE000000,H'FEE00000,H'F0000000,H'F0000000,
             EEEEF00000 +                       H'F0000000,H'FEEE0000,H'FEEEE000,H'FE000000,H'F0000000,H'FE000000,H'F0000000,
             EEF0000000 +                       H'F0E00000,H'FE000000,H'FEE00000,H'FE000000,H'FE000000,H'FF000000,H'FF000000,
             F0000000F0 +                       H'FFFEE000,H'FFF00000,H'FFFF0000,H'FFFFF000
             000000FE00   
             0000F00000   
             00FE000000   
             FE000000FE   
             E00000F000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE   66


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000F00000   
             00F0000000   
             FEEE0000FE   
             EEE000FE00   
             0000F00000   
             00FE000000   
             F0000000F0   
             E00000FE00   
             0000FEE000   
             00FE000000   
             FE000000FF   
             000000FF00   
             0000FFFEE0   
             00FFF00000   
             FFFF0000FF   
             FFF000       
    00001540              _LEVEL_0_1:                      ; static: LEVEL_0_1
    00001540 FFFFFFFFFF             .DATA.L     H'FFFFFFFF,H'FFFFFFFF,H'F0000000,H'F0000000,H'F0000000,H'FF000000,H'F0000000,
             FFFFFFF000 +                       H'F000F000,H'F0000000,H'FF000000,H'FFF00000,H'FFF00000,H'FFF00000,H'F0000000,
             0000F00000 +                       H'F0000000,H'F0000000,H'F00FFF00,H'F0000000,H'F0000000,H'F0000000,H'F0000F00,
             00F0000000 +                       H'F0000F00,H'F0000F00,H'F0000F00,H'F0000F00,H'FF000000,H'FF000000,H'FF0FF000,
             FF000000F0 +                       H'FF000000,H'F0000000,H'F0000000,H'FFFFFFFF
             000000F000   
             F000F00000   
             00FF000000   
             FFF00000FF   
             F00000FFF0   
             0000F00000   
             00F0000000   
             F0000000F0   
             0FFF00F000   
             0000F00000   
             00F0000000   
             F0000F00F0   
             000F00F000   
             0F00F0000F   
             00F0000F00   
             FF000000FF   
             000000FF0F   
             F000FF0000   
             00F0000000   
             F0000000FF   
             FFFFFF       
    000015C0              _LEVEL_0_2:                      ; static: LEVEL_0_2
    000015C0 FFFFFFFFF0             .DATA.L     H'FFFFFFFF,H'F0000000,H'F0000000,H'F0050000,H'F00A0000,H'F00F0500,H'F0050500,
             000000F000 +                       H'F0050500,H'F0050500,H'F0000500,H'F0050500,H'F0550000,H'F0000000,H'F0000000,
             0000F00500 +                       H'F0000000,H'F000A000,H'F00AA000,H'F0000000,H'F0A00000,H'F0A00000,H'F0A00000,
             00F00A0000 +                       H'F0000000,H'F0000000,H'F0AAA000,H'F0A00000,H'F0A00000,H'F0AAA000,H'F0000000,
             F00F0500F0 +                       H'F0000000,H'F0000000,H'F00FF000,H'F00FF000,H'F00FF000,H'F00FF000,H'F00FF000,
             050500F005 +                       H'F00FF000,H'F00F0000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0F0F0F0,
             0500F00505 +                       H'F0F0F0F0,H'F000F000,H'F000F000,H'F0F00000,H'F0F00000,H'F0000000,H'F0000000,
             00F0000500 +                       H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,
             F0050500F0 +                       H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,
             550000F000 +                       H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,
             0000F00000 +                       H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,
             00F0000000 +                       H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,
             F000A000F0 +                       H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE   67


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0AA000F000 +                       H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,
             0000F0A000 +                       H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,
             00F0A00000 +                       H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,
             F0A00000F0 +                       H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,
             000000F000 +                       H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,
             0000F0AAA0 +                       H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,
             00F0A00000 +                       H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,
             F0A00000F0 +                       H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,
             AAA000F000 +                       H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,
             0000F00000 +                       H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,
             00F0000000 +                       H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,
             F00FF000F0 +                       H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,
             0FF000F00F +                       H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,
             F000F00FF0 +                       H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,
             00F00FF000 +                       H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,
             F00FF000F0 +                       H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,
             0F0000F000 +                       H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'00000000,H'00000000,
             0000F00000 +                       H'00000000,H'00000000
             00F0000000   
             F0000000F0   
             F0F0F0F0F0   
             F0F0F000F0   
             00F000F000   
             F0F00000F0   
             F00000F000   
             0000F00000   
             00F0000000   
             F0000000F0   
             000000F000   
             0000F00000   
             00F0000000   
             F0000000F0   
             000000F000   
             0000F00000   
             00F0000000   
             F0000000F0   
             000000F000   
             0000F00000   
             00F0000000   
             F0000000F0   
             000000F000   
             0000F00000   
             00F0000000   
             F0000000F0   
             000000F000   
             0000F00000   
             00F0000000   
             F0000000F0   
             000000F000   
             0000F00000   
             00F0000000   
             F0000000F0   
             000000F000   
             0000F00000   
             00F0000000   
             F0000000F0   
             000000F000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE   68


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000F00000   
             00F0000000   
             F0000000F0   
             000000F000   
             0000F00000   
             00F0000000   
             F0000000F0   
             000000F000   
             0000F00000   
             00F0000000   
             F0000000F0   
             000000F000   
             0000F00000   
             00F0000000   
             F0000000F0   
             000000F000   
             0000F00000   
             00F0000000   
             F0000000F0   
             000000F000   
             0000F00000   
             00F0000000   
             F0000000F0   
             000000F000   
             0000F00000   
             00F0000000   
             F0000000F0   
             000000F000   
             0000F00000   
             00F0000000   
             F0000000F0   
             000000F000   
             0000F00000   
             00F0000000   
             F0000000F0   
             000000F000   
             0000F00000   
             00F0000000   
             F0000000F0   
             000000F000   
             0000F00000   
             00F0000000   
             F0000000F0   
             000000F000   
             0000F00000   
             00F0000000   
             F0000000F0   
             000000F000   
             0000F00000   
             00F0000000   
             F0000000F0   
             000000F000   
             0000F00000   
             00F0000000   
             F0000000F0   
             000000F000   
             0000F00000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE   69


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             00F0000000   
             F0000000F0   
             000000F000   
             0000F00000   
             00F0000000   
             F0000000F0   
             000000F000   
             0000F00000   
             00F0000000   
             F0000000F0   
             000000F000   
             0000F00000   
             00F0000000   
             F0000000F0   
             000000F000   
             0000F00000   
             00F0000000   
             F0000000F0   
             000000F000   
             0000F00000   
             00F0000000   
             F0000000F0   
             000000F000   
             0000F00000   
             00F0000000   
             F0000000F0   
             000000F000   
             0000F00000   
             00F0000000   
             F0000000F0   
             000000F000   
             0000F00000   
             00F0000000   
             F0000000F0   
             000000F000   
             0000F00000   
             00F0000000   
             F0000000F0   
             000000F000   
             0000000000   
             0000000000   
             0000000000   
             000000       
    00001910 F0000000F0             .DATA.L     H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,
             000000F000 +                       H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,
             0000F00000 +                       H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,
             00F0000000 +                       H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,
             F0000000F0 +                       H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,
             000000F000 +                       H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,H'F0000000,
             0000F00000 +                       H'FFFFFFFF
             00F0000000   
             F0000000F0   
             000000F000   
             0000F00000   
             00F0000000   
             F0000000F0   
             000000F000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE   70


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000F00000   
             00F0000000   
             F0000000F0   
             000000F000   
             0000F00000   
             00F0000000   
             F0000000F0   
             000000F000   
             0000F00000   
             00F0000000   
             F0000000F0   
             000000F000   
             0000F00000   
             00F0000000   
             F0000000F0   
             000000F000   
             0000F00000   
             00F0000000   
             F0000000F0   
             000000FFFF   
             FFFF         
    000019BC              _TILE_ER:                        ; static: TILE_ER
    000019BC E080E08CEA             .DATA.B     H'E0,H'80,H'E0,H'8C,H'EA,H'0C,H'0A,H'0A
             0C0A0A       
    000019C4              _TILE_METAL:                     ; static: TILE_METAL
    000019C4 FF898D8BC9             .DATA.B     H'FF,H'89,H'8D,H'8B,H'C9,H'B9,H'91,H'FE
             B991FE       
    000019CC              _TILE_SOIL:                      ; static: TILE_SOIL
    000019CC FF81A58181             .DATA.B     H'FF,H'81,H'A5,H'81,H'81,H'A5,H'81,H'FE
             A581FE       
    000019D4              _TILE_F:                         ; static: TILE_F
    000019D4 FF8195AD95             .DATA.B     H'FF,H'81,H'95,H'AD,H'95,H'BD,H'81,H'FE
             BD81FE       
    000019DC              _TILE_F_IN:                      ; static: TILE_F_IN
    000019DC FF81BDB5A9             .DATA.B     H'FF,H'81,H'BD,H'B5,H'A9,H'B5,H'81,H'FE
             B581FE       
    000019E4              _SP_PIR:                         ; static: SP_PIR
    000019E4 183C74783C             .DATA.B     H'18,H'3C,H'74,H'78,H'3C,H'7E,H'38,H'66
             7E3866       
    000019EC              _SP_PWR:                         ; static: SP_PWR
    000019EC 183C74783C             .DATA.B     H'18,H'3C,H'74,H'78,H'3C,H'7C,H'7C,H'28
             7C7C28       
    000019F4              _SP_PJR:                         ; static: SP_PJR
    000019F4 183C74787E             .DATA.B     H'18,H'3C,H'74,H'78,H'7E,H'3C,H'68,H'04
             3C6804       
    000019FC              _SP_PIL:                         ; static: SP_PIL
    000019FC 183C2E1E3C             .DATA.B     H'18,H'3C,H'2E,H'1E,H'3C,H'7E,H'1C,H'66
             7E1C66       
    00001A04              _SP_PWL:                         ; static: SP_PWL
    00001A04 183C2E1E3C             .DATA.B     H'18,H'3C,H'2E,H'1E,H'3C,H'3E,H'3E,H'14
             3E3E14       
    00001A0C              _SP_PJL:                         ; static: SP_PJL
    00001A0C 183C2E1E7E             .DATA.B     H'18,H'3C,H'2E,H'1E,H'7E,H'3C,H'16,H'20
             3C1620       
    00001A14              _SP_PIM:                         ; static: SP_PIM
    00001A14 183C5A7E3C             .DATA.B     H'18,H'3C,H'5A,H'7E,H'3C,H'7E,H'3C,H'66
             7E3C66       




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE   71


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001A1C              _SCREEN_WIDTH:                   ; static: SCREEN_WIDTH
    00001A1C 10                     .DATA.B     H'10
    00001A1D              _SCREEN_HEIGHT:                  ; static: SCREEN_HEIGHT
    00001A1D 08                     .DATA.B     H'08
    00001A1E 00000002               .RES.W      1
    00001A20              _t1:                             ; static: t1
    00001A20 <00000000>             .DATA.L     _TUT_01
    00001A24 0100                   .DATA.B     H'01,H'00
    00001A26 0000000201             .DATAB.B    2,0
             00           
    00001A28 <00000000>             .DATA.L     _BACK_TUT_1
    00001A2C 0000008000             .DATA.L     H'00000080,H'00000180
             000180       
    00001A34 0F05                   .DATA.B     H'0F,H'05
    00001A36 0000000201             .DATAB.B    2,0
             00           
    00001A38 00000080               .DATA.L     H'00000080
    00001A3C              _t2:                             ; static: t2
    00001A3C <00000000>             .DATA.L     _TUT_02
    00001A40 0100                   .DATA.B     H'01,H'00
    00001A42 0000000201             .DATAB.B    2,0
             00           
    00001A44 <00000000>             .DATA.L     _BACK_TUT_2
    00001A48 0000008000             .DATA.L     H'00000080,H'00000180
             000180       
    00001A50 0F05                   .DATA.B     H'0F,H'05
    00001A52 0000000201             .DATAB.B    2,0
             00           
    00001A54 00000080               .DATA.L     H'00000080
    00001A58              _t3:                             ; static: t3
    00001A58 <00000000>             .DATA.L     _TUT_03
    00001A5C 0100                   .DATA.B     H'01,H'00
    00001A5E 0000000201             .DATAB.B    2,0
             00           
    00001A60 <00000000>             .DATA.L     _BACK_TUT_3
    00001A64 0000008000             .DATA.L     H'00000080,H'00000180
             000180       
    00001A6C 0F05                   .DATA.B     H'0F,H'05
    00001A6E 0000000201             .DATAB.B    2,0
             00           
    00001A70 00000080               .DATA.L     H'00000080
    00001A74              _l1:                             ; static: l1
    00001A74 <00000000>             .DATA.L     _LVL_01
    00001A78 0101                   .DATA.B     H'01,H'01
    00001A7A 0000000201             .DATAB.B    2,0
             00           
    00001A7C <00000000>             .DATA.L     _BACKGROUND
    00001A80 000000C000             .DATA.L     H'000000C0,H'00000180
             000180       
    00001A88 1F01                   .DATA.B     H'1F,H'01
    00001A8A 0000000201             .DATAB.B    2,0
             00           
    00001A8C 00000100               .DATA.L     H'00000100
    00001A90              _l2:                             ; static: l2
    00001A90 <00000000>             .DATA.L     _LEVEL_0_1
    00001A94 0000                   .DATA.B     H'00,H'00
    00001A96 0000000201             .DATAB.B    2,0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE   72


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             00           
    00001A98 <00000000>             .DATA.L     _BACKGROUND
    00001A9C 0000010000             .DATA.L     H'00000100,H'00000140
             000140       
    00001AA4 1E05                   .DATA.B     H'1E,H'05
    00001AA6 0000000201             .DATAB.B    2,0
             00           
    00001AA8 00000100               .DATA.L     H'00000100
    00001AAC              _l3:                             ; static: l3
    00001AAC <00000000>             .DATA.L     _LEVEL_0_2
    00001AB0 0101                   .DATA.B     H'01,H'01
    00001AB2 0000000201             .DATAB.B    2,0
             00           
    00001AB4 <00000000>             .DATA.L     _BACKGROUND
    00001AB8 0000010000             .DATA.L     H'00000100,H'00000140
             000140       
    00001AC0 6464                   .DATA.B     H'64,H'64
    00001AC2 0000000201             .DATAB.B    2,0
             00           
    00001AC4 000007F8               .DATA.L     H'000007F8
    00001AC8              L478:
    00001AC8 E69100                 .DATA.B     H'E6,H'91,H'00
    00001ACB 00000001               .RES.B      1
    00001ACC              L481:
    00001ACC 302E3432               .SDATA      "0.42"
    00001AD0 00                     .DATA.B     H'00
    00001AD1 00000001               .RES.B      1
    00001AD2 00000002               .RES.W      1
    00001AD4              L482:
    00001AD4 436F6E7469             .SDATA      "Continue"
             6E7565       
    00001ADC 00                     .DATA.B     H'00
    00001ADD 00000001               .RES.B      1
    00001ADE 00000002               .RES.W      1
    00001AE0              L483:
    00001AE0 4E6577                 .SDATA      "New"
    00001AE3 00                     .DATA.B     H'00
    00001AE4              L484:
    00001AE4 4372656469             .SDATA      "Credits"
             7473         
    00001AEB 00                     .DATA.B     H'00
    00001AEC              L485:
    00001AEC 53746F7279             .SDATA      "Story"
    00001AF1 00                     .DATA.B     H'00
    00001AF2              L496:
    00001AF2 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00
             0000         
D   00000000              _TILE_SET:                       ; static: TILE_SET
    00000000 <00000000>             .DATA.L     _TILE_ER,_TILE_ER,_TILE_ER,_TILE_ER,_TILE_F_IN,_TILE_F_IN,_TILE_F_IN,_TILE_F_IN,
             <00000000> +                       _TILE_F,_TILE_F,_TILE_F,_TILE_F,_TILE_METAL,_TILE_METAL,_TILE_METAL,_TILE_SOIL
             <00000000>   
             <00000000>   
             <00000000>   
             <00000000>   
             <00000000>   
             <00000000>   
             <00000000>   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE   73


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             <00000000>   
             <00000000>   
             <00000000>   
             <00000000>   
             <00000000>   
             <00000000>   
             <00000000>   
    00000040              _levelList:                      ; static: levelList
    00000040 <00000000>             .DATA.L     _t1,_t2,_t3,_l1,_l2,_l3
             <00000000>   
             <00000000>   
             <00000000>   
             <00000000>   
             <00000000>   
    00000058              _levelX:                         ; static: levelX
    00000058 00000000               .DATA.L     H'00000000
    0000005C              _isTimerFinished:                ; static: isTimerFinished
    0000005C 00                     .DATA.B     H'00
    0000005D 00000001               .RES.B      1
    0000005E 00000002               .RES.W      1
    00000060              _timePerFrame:                   ; static: timePerFrame
    00000060 00000026               .DATA.L     H'00000026
    00000064              _fileName:                       ; static: fileName
    00000064 4578536176             .SDATA      "ExSave"
             65           
    0000006A 00                     .DATA.B     H'00
B   00000000              _buffer:                         ; static: buffer
    00000000 00000400               .RES.B      1024
    00000400              _currentLevel:                   ; static: currentLevel
    00000400 0000001C               .RES.L      7
    0000041C              _levelPointer:                   ; static: levelPointer
    0000041C 00000001               .RES.B      1
    0000041D 00000001               .RES.B      1
    0000041E 00000002               .RES.W      1
    00000420              _level:                          ; static: level
    00000420 00000004               .RES.L      1
    00000424              _Ppos:                           ; static: Ppos
    00000424 00000008               .RES.L      2
    0000042C              _Pvel:                           ; static: Pvel
    0000042C 00000008               .RES.L      2
    00000434              _Acc:                            ; static: Acc
    00000434 00000004               .RES.L      1
    00000438              _VelMax:                         ; static: VelMax
    00000438 00000004               .RES.L      1
    0000043C              _onGround:                       ; static: onGround
    0000043C 00000004               .RES.L      1
    00000440              _jumpCounter:                    ; static: jumpCounter
    00000440 00000004               .RES.L      1
    00000444              _jumpPressed:                    ; static: jumpPressed
    00000444 00000001               .RES.B      1
    00000445 00000001               .RES.B      1
    00000446 00000002               .RES.W      1
    00000448              _key:                            ; static: key
    00000448 00000004               .RES.L      1
    0000044C              _timer:                          ; static: timer
    0000044C 00000004               .RES.L      1
B_B 00000000              _BR_Size:                        ; static: BR_Size




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE   74


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000000 00000004               .RES.L      1




























































SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 28-Feb-2020 19:43:06  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:        20




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:      713



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               00000C00 Byte(s)
PROGRAM  SECTION (P_BR_Size):                       00000000 Byte(s)
PROGRAM  SECTION (P_TOP):                           0000000C Byte(s)
CONSTANT SECTION (C):                               00001AF9 Byte(s)
CONSTANT SECTION (C_BR_Size):                       00000000 Byte(s)
CONSTANT SECTION (C_TOP):                           00000000 Byte(s)
DATA     SECTION (D):                               0000006B Byte(s)
DATA     SECTION (D_BR_Size):                       00000000 Byte(s)
DATA     SECTION (D_TOP):                           00000000 Byte(s)
BSS      SECTION (B):                               00000450 Byte(s)
BSS      SECTION (B_BR_Size):                       00000004 Byte(s)
BSS      SECTION (B_TOP):                           00000000 Byte(s)

 TOTAL PROGRAM SIZE: 00002BC4 Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:           31
NUMBER OF EXTERNAL DEFINITION SYMBOLS:          63
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:           185






















*** COMMAND PARAMETER ***


  -subcommand=C:\Users\ludor\AppData\Local\Temp\hmkA645.tmp 

